export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  BigDecimal: { input: string; output: string; }
  BigInt: { input: string; output: string; }
  Bytes: { input: string; output: string; }
  Int8: { input: number; output: number; }
  Timestamp: { input: number; output: number; }
};

export enum Aggregation_Interval {
  Day = 'day',
  Hour = 'hour'
}

export type AnswerAttributes = {
  readonly __typename?: 'AnswerAttributes';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly delayRequirements: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly isFinalAnswer: ReadonlyArray<Scalars['Boolean']['output']>;
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
  readonly randomRequirements: ReadonlyArray<Scalars['BigInt']['output']>;
};

export type AnswerAttributes_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<AnswerAttributes_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly delayRequirements?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly delayRequirements_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly delayRequirements_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly delayRequirements_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly delayRequirements_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly delayRequirements_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isFinalAnswer?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isFinalAnswer_contains?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isFinalAnswer_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isFinalAnswer_not?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isFinalAnswer_not_contains?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isFinalAnswer_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<AnswerAttributes_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly randomRequirements?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly randomRequirements_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly randomRequirements_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly randomRequirements_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly randomRequirements_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly randomRequirements_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum AnswerAttributes_OrderBy {
  AnswerId = 'answerId',
  DelayRequirements = 'delayRequirements',
  HeroClass = 'heroClass',
  Id = 'id',
  IsFinalAnswer = 'isFinalAnswer',
  PageId = 'pageId',
  RandomRequirements = 'randomRequirements'
}

export type AnswerBurnRandomItemMeta = {
  readonly __typename?: 'AnswerBurnRandomItemMeta';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly chances: ReadonlyArray<Scalars['String']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly isStopIfBurnt: ReadonlyArray<Scalars['String']['output']>;
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
  readonly slots: ReadonlyArray<Scalars['String']['output']>;
};

export type AnswerBurnRandomItemMeta_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<AnswerBurnRandomItemMeta_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chances?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chances_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chances_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chances_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isStopIfBurnt?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly isStopIfBurnt_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly isStopIfBurnt_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly isStopIfBurnt_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly isStopIfBurnt_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly isStopIfBurnt_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<AnswerBurnRandomItemMeta_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly slots_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly slots_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly slots_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly slots_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly slots_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum AnswerBurnRandomItemMeta_OrderBy {
  AnswerId = 'answerId',
  Chances = 'chances',
  HeroClass = 'heroClass',
  Id = 'id',
  IsStopIfBurnt = 'isStopIfBurnt',
  PageId = 'pageId',
  Slots = 'slots'
}

export type AttackInfoEntity = {
  readonly __typename?: 'AttackInfoEntity';
  readonly attackToken?: Maybe<ItemEntity>;
  readonly attackType: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly skillTokens: ReadonlyArray<ItemEntity>;
};


export type AttackInfoEntitySkillTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};

export type AttackInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<AttackInfoEntity_Filter>>>;
  readonly attackToken?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_?: InputMaybe<ItemEntity_Filter>;
  readonly attackToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackType?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attackType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<AttackInfoEntity_Filter>>>;
  readonly skillTokens?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly skillTokens_?: InputMaybe<ItemEntity_Filter>;
  readonly skillTokens_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly skillTokens_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly skillTokens_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly skillTokens_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly skillTokens_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum AttackInfoEntity_OrderBy {
  AttackToken = 'attackToken',
  AttackTokenAugmentationLevel = 'attackToken__augmentationLevel',
  AttackTokenBurned = 'attackToken__burned',
  AttackTokenDurability = 'attackToken__durability',
  AttackTokenDurabilityPercent = 'attackToken__durabilityPercent',
  AttackTokenEquipped = 'attackToken__equipped',
  AttackTokenEquippedSlot = 'attackToken__equippedSlot',
  AttackTokenFragility = 'attackToken__fragility',
  AttackTokenId = 'attackToken__id',
  AttackTokenItemId = 'attackToken__itemId',
  AttackTokenItemSandBoxMode = 'attackToken__itemSandBoxMode',
  AttackTokenRarity = 'attackToken__rarity',
  AttackTokenScore = 'attackToken__score',
  AttackTokenTimestamp = 'attackToken__timestamp',
  AttackTokenUniqUri = 'attackToken__uniqUri',
  AttackType = 'attackType',
  Id = 'id',
  SkillTokens = 'skillTokens'
}

export type AttributeGenerateInfo = {
  readonly __typename?: 'AttributeGenerateInfo';
  readonly id: Scalars['ID']['output'];
  readonly ids: ReadonlyArray<Scalars['Int']['output']>;
  readonly values: ReadonlyArray<Scalars['Int']['output']>;
};

export type AttributeGenerateInfo_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<AttributeGenerateInfo_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<AttributeGenerateInfo_Filter>>>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum AttributeGenerateInfo_OrderBy {
  Id = 'id',
  Ids = 'ids',
  Values = 'values'
}

export type BlockChangedFilter = {
  readonly number_gte: Scalars['Int']['input'];
};

export type Block_Height = {
  readonly hash?: InputMaybe<Scalars['Bytes']['input']>;
  readonly number?: InputMaybe<Scalars['Int']['input']>;
  readonly number_gte?: InputMaybe<Scalars['Int']['input']>;
};

export type BurnHistoryEntity = {
  readonly __typename?: 'BurnHistoryEntity';
  readonly burn: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly token: TokenEntity;
};

export type BurnHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<BurnHistoryEntity_Filter>>>;
  readonly burn?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly burn_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly burn_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<BurnHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum BurnHistoryEntity_OrderBy {
  Burn = 'burn',
  Id = 'id',
  Timestamp = 'timestamp',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply'
}

export type ChamberActionResultEntity = {
  readonly __typename?: 'ChamberActionResultEntity';
  readonly chamber: OpenedChamberEntity;
  readonly completed?: Maybe<Scalars['Boolean']['output']>;
  readonly damage: Scalars['Int']['output'];
  readonly data: Scalars['String']['output'];
  readonly experience: Scalars['Int']['output'];
  readonly fightResult: ReadonlyArray<FightResultEntity>;
  readonly heal: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly itemsBurnt?: Maybe<ReadonlyArray<ItemsBurntResultEntity>>;
  readonly kill?: Maybe<Scalars['Boolean']['output']>;
  readonly lifeChancesRecovered: Scalars['Int']['output'];
  readonly manaConsumed: Scalars['Int']['output'];
  readonly manaRegen: Scalars['Int']['output'];
  readonly mintItems: ReadonlyArray<ItemEntity>;
  readonly storyResult: ReadonlyArray<StoryResultEntity>;
  readonly turn: Scalars['Int']['output'];
  readonly tx: Scalars['String']['output'];
};


export type ChamberActionResultEntityFightResultArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FightResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<FightResultEntity_Filter>;
};


export type ChamberActionResultEntityItemsBurntArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemsBurntResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemsBurntResultEntity_Filter>;
};


export type ChamberActionResultEntityMintItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type ChamberActionResultEntityStoryResultArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoryResultEntity_Filter>;
};

export type ChamberActionResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ChamberActionResultEntity_Filter>>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly completed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly completed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly damage?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly data?: InputMaybe<Scalars['String']['input']>;
  readonly data_contains?: InputMaybe<Scalars['String']['input']>;
  readonly data_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly data_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly data_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly data_gt?: InputMaybe<Scalars['String']['input']>;
  readonly data_gte?: InputMaybe<Scalars['String']['input']>;
  readonly data_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly data_lt?: InputMaybe<Scalars['String']['input']>;
  readonly data_lte?: InputMaybe<Scalars['String']['input']>;
  readonly data_not?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly data_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly data_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly data_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly data_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly experience?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly fightResult_?: InputMaybe<FightResultEntity_Filter>;
  readonly heal?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemsBurnt_?: InputMaybe<ItemsBurntResultEntity_Filter>;
  readonly kill?: InputMaybe<Scalars['Boolean']['input']>;
  readonly kill_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly kill_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly kill_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly lifeChancesRecovered?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_?: InputMaybe<ItemEntity_Filter>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ChamberActionResultEntity_Filter>>>;
  readonly storyResult_?: InputMaybe<StoryResultEntity_Filter>;
  readonly turn?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly turn_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_not?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ChamberActionResultEntity_OrderBy {
  Chamber = 'chamber',
  ChamberCompleted = 'chamber__completed',
  ChamberHeroAdr = 'chamber__heroAdr',
  ChamberHeroId = 'chamber__heroId',
  ChamberId = 'chamber__id',
  ChamberIteration = 'chamber__iteration',
  ChamberStage = 'chamber__stage',
  ChamberTimestamp = 'chamber__timestamp',
  ChamberTx = 'chamber__tx',
  Completed = 'completed',
  Damage = 'damage',
  Data = 'data',
  Experience = 'experience',
  FightResult = 'fightResult',
  Heal = 'heal',
  Id = 'id',
  ItemsBurnt = 'itemsBurnt',
  Kill = 'kill',
  LifeChancesRecovered = 'lifeChancesRecovered',
  ManaConsumed = 'manaConsumed',
  ManaRegen = 'manaRegen',
  MintItems = 'mintItems',
  StoryResult = 'storyResult',
  Turn = 'turn',
  Tx = 'tx'
}

export type ChamberEntity = {
  readonly __typename?: 'ChamberEntity';
  readonly biome: Scalars['Int']['output'];
  readonly chamberName: Scalars['String']['output'];
  readonly chamberSymbol: Scalars['String']['output'];
  readonly chamberType: Scalars['Int']['output'];
  readonly controller: ControllerEntity;
  readonly id: Scalars['ID']['output'];
  readonly isBattle: Scalars['Boolean']['output'];
  readonly isEvent: Scalars['Boolean']['output'];
  readonly isStory: Scalars['Boolean']['output'];
  readonly openedChambers: ReadonlyArray<OpenedChamberEntity>;
  readonly uri: Scalars['String']['output'];
  readonly valid: Scalars['Boolean']['output'];
};


export type ChamberEntityOpenedChambersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<OpenedChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<OpenedChamberEntity_Filter>;
};

export type ChamberEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ChamberEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chamberName?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamberName_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamberName_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberName_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamberSymbol_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamberSymbol_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamberSymbol_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamberType?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chamberType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isBattle?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isBattle_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isBattle_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isBattle_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isEvent?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isEvent_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isEvent_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isEvent_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isStory?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isStory_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isStory_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isStory_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly openedChambers_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ChamberEntity_Filter>>>;
  readonly uri?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum ChamberEntity_OrderBy {
  Biome = 'biome',
  ChamberName = 'chamberName',
  ChamberSymbol = 'chamberSymbol',
  ChamberType = 'chamberType',
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  Id = 'id',
  IsBattle = 'isBattle',
  IsEvent = 'isEvent',
  IsStory = 'isStory',
  OpenedChambers = 'openedChambers',
  Uri = 'uri',
  Valid = 'valid'
}

export type ControllableEntity = {
  readonly __typename?: 'ControllableEntity';
  readonly controller: Scalars['String']['output'];
  readonly createdBlock: Scalars['Int']['output'];
  readonly createdTs: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
};

export type ControllableEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ControllableEntity_Filter>>>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly createdBlock?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_not?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdTs?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ControllableEntity_Filter>>>;
};

export enum ControllableEntity_OrderBy {
  Controller = 'controller',
  CreatedBlock = 'createdBlock',
  CreatedTs = 'createdTs',
  Id = 'id'
}

export type ControllerEntity = {
  readonly __typename?: 'ControllerEntity';
  readonly controllable: ControllableEntity;
  readonly dungeonFactory: Scalars['String']['output'];
  readonly fightDelay: Scalars['Int']['output'];
  readonly gameObjectController: Scalars['String']['output'];
  readonly gameToken: Scalars['String']['output'];
  readonly governance: Scalars['String']['output'];
  readonly guildController: Scalars['String']['output'];
  readonly heroController: Scalars['String']['output'];
  readonly heroes: ReadonlyArray<HeroMetaEntity>;
  /** Central contract for storing all dependency addresses */
  readonly id: Scalars['ID']['output'];
  readonly itemBoxController?: Maybe<Scalars['String']['output']>;
  readonly itemController: Scalars['String']['output'];
  readonly items: ReadonlyArray<ItemMetaEntity>;
  readonly oracle: Scalars['String']['output'];
  readonly pvpController?: Maybe<Scalars['String']['output']>;
  readonly registeredNames: ReadonlyArray<RegisteredNameEntity>;
  readonly reinforcementController: Scalars['String']['output'];
  readonly rewardPool: Scalars['String']['output'];
  readonly shelterAuctionController?: Maybe<Scalars['String']['output']>;
  readonly shelterController?: Maybe<Scalars['String']['output']>;
  readonly statController: Scalars['String']['output'];
  readonly storyController: Scalars['String']['output'];
  readonly treasury: TreasuryEntity;
  readonly treasuryTokenInfo: ReadonlyArray<TreasuryTokenInfoEntity>;
  readonly userController: Scalars['String']['output'];
};


export type ControllerEntityHeroesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroMetaEntity_Filter>;
};


export type ControllerEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemMetaEntity_Filter>;
};


export type ControllerEntityRegisteredNamesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RegisteredNameEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RegisteredNameEntity_Filter>;
};


export type ControllerEntityTreasuryTokenInfoArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TreasuryTokenInfoEntity_Filter>;
};

export type ControllerEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ControllerEntity_Filter>>>;
  readonly controllable?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_?: InputMaybe<ControllableEntity_Filter>;
  readonly controllable_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeonFactory_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeonFactory_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonFactory_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fightDelay?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly fightDelay_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_not?: InputMaybe<Scalars['Int']['input']>;
  readonly fightDelay_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly gameObjectController?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly gameObjectController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly gameObjectController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameObjectController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly gameToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly gameToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly gameToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance?: InputMaybe<Scalars['String']['input']>;
  readonly governance_contains?: InputMaybe<Scalars['String']['input']>;
  readonly governance_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly governance_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance_gt?: InputMaybe<Scalars['String']['input']>;
  readonly governance_gte?: InputMaybe<Scalars['String']['input']>;
  readonly governance_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly governance_lt?: InputMaybe<Scalars['String']['input']>;
  readonly governance_lte?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly governance_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly governance_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly governance_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly governance_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guildController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guildController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guildController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroes_?: InputMaybe<HeroMetaEntity_Filter>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemBoxController?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemBoxController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemBoxController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemBoxController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly items_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ControllerEntity_Filter>>>;
  readonly oracle?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_contains?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_gt?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_gte?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly oracle_lt?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_lte?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly oracle_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly oracle_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pvpController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pvpController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly registeredNames_?: InputMaybe<RegisteredNameEntity_Filter>;
  readonly reinforcementController?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_contains?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_gt?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_gte?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly rewardPool_lt?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_lte?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly rewardPool_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly rewardPool_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterAuctionController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterAuctionController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterAuctionController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelterController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController?: InputMaybe<Scalars['String']['input']>;
  readonly statController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly statController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly statController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly statController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly statController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly statController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly statController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly statController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly statController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly statController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly storyController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly storyController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury?: InputMaybe<Scalars['String']['input']>;
  readonly treasuryTokenInfo_?: InputMaybe<TreasuryTokenInfoEntity_Filter>;
  readonly treasury_?: InputMaybe<TreasuryEntity_Filter>;
  readonly treasury_contains?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_gt?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_gte?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly treasury_lt?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_lte?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly treasury_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController?: InputMaybe<Scalars['String']['input']>;
  readonly userController_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userController_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userController_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController_gt?: InputMaybe<Scalars['String']['input']>;
  readonly userController_gte?: InputMaybe<Scalars['String']['input']>;
  readonly userController_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userController_lt?: InputMaybe<Scalars['String']['input']>;
  readonly userController_lte?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userController_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userController_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userController_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userController_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ControllerEntity_OrderBy {
  Controllable = 'controllable',
  ControllableController = 'controllable__controller',
  ControllableCreatedBlock = 'controllable__createdBlock',
  ControllableCreatedTs = 'controllable__createdTs',
  ControllableId = 'controllable__id',
  DungeonFactory = 'dungeonFactory',
  FightDelay = 'fightDelay',
  GameObjectController = 'gameObjectController',
  GameToken = 'gameToken',
  Governance = 'governance',
  GuildController = 'guildController',
  HeroController = 'heroController',
  Heroes = 'heroes',
  Id = 'id',
  ItemBoxController = 'itemBoxController',
  ItemController = 'itemController',
  Items = 'items',
  Oracle = 'oracle',
  PvpController = 'pvpController',
  RegisteredNames = 'registeredNames',
  ReinforcementController = 'reinforcementController',
  RewardPool = 'rewardPool',
  ShelterAuctionController = 'shelterAuctionController',
  ShelterController = 'shelterController',
  StatController = 'statController',
  StoryController = 'storyController',
  Treasury = 'treasury',
  TreasuryTokenInfo = 'treasuryTokenInfo',
  TreasuryId = 'treasury__id',
  UserController = 'userController'
}

export type CoreAttributesEntity = {
  readonly __typename?: 'CoreAttributesEntity';
  readonly dexterity: Scalars['Int']['output'];
  readonly energy: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly strength: Scalars['Int']['output'];
  readonly vitality: Scalars['Int']['output'];
};

export type CoreAttributesEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<CoreAttributesEntity_Filter>>>;
  readonly dexterity?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dexterity_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_not?: InputMaybe<Scalars['Int']['input']>;
  readonly dexterity_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly energy?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly energy_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_not?: InputMaybe<Scalars['Int']['input']>;
  readonly energy_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<CoreAttributesEntity_Filter>>>;
  readonly strength?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly strength_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_not?: InputMaybe<Scalars['Int']['input']>;
  readonly strength_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly vitality?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly vitality_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_not?: InputMaybe<Scalars['Int']['input']>;
  readonly vitality_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum CoreAttributesEntity_OrderBy {
  Dexterity = 'dexterity',
  Energy = 'energy',
  Id = 'id',
  Strength = 'strength',
  Vitality = 'vitality'
}

export type DauStatisticEntity = {
  readonly __typename?: 'DAUStatisticEntity';
  readonly count: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly users: ReadonlyArray<UserEntity>;
};


export type DauStatisticEntityUsersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserEntity_Filter>;
};

export type DauStatisticEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DauStatisticEntity_Filter>>>;
  readonly count?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly count_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DauStatisticEntity_Filter>>>;
  readonly users?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_?: InputMaybe<UserEntity_Filter>;
  readonly users_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum DauStatisticEntity_OrderBy {
  Count = 'count',
  Id = 'id',
  Users = 'users'
}

export type DailyActivityCompletedEntity = {
  readonly __typename?: 'DailyActivityCompletedEntity';
  readonly daily: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
  readonly weekly: Scalars['Boolean']['output'];
};

export type DailyActivityCompletedEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DailyActivityCompletedEntity_Filter>>>;
  readonly daily?: InputMaybe<Scalars['Boolean']['input']>;
  readonly daily_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly daily_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly daily_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DailyActivityCompletedEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly weekly?: InputMaybe<Scalars['Boolean']['input']>;
  readonly weekly_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly weekly_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly weekly_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum DailyActivityCompletedEntity_OrderBy {
  Daily = 'daily',
  Id = 'id',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Weekly = 'weekly'
}

export type DungeonChamberMeta = {
  readonly __typename?: 'DungeonChamberMeta';
  readonly chamberChance: Scalars['BigDecimal']['output'];
  readonly chamberType: Scalars['Int']['output'];
  readonly dungeon: DungeonLogicEntity;
  readonly id: Scalars['ID']['output'];
  readonly uniqChamber?: Maybe<ChamberEntity>;
};

export type DungeonChamberMeta_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonChamberMeta_Filter>>>;
  readonly chamberChance?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly chamberChance_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly chamberChance_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly chamberType?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chamberType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly chamberType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonLogicEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonChamberMeta_Filter>>>;
  readonly uniqChamber?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_?: InputMaybe<ChamberEntity_Filter>;
  readonly uniqChamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqChamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqChamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqChamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum DungeonChamberMeta_OrderBy {
  ChamberChance = 'chamberChance',
  ChamberType = 'chamberType',
  Dungeon = 'dungeon',
  DungeonBiome = 'dungeon__biome',
  DungeonId = 'dungeon__id',
  DungeonMaxLevel = 'dungeon__maxLevel',
  DungeonMinLevel = 'dungeon__minLevel',
  DungeonSpecificClass = 'dungeon__specificClass',
  DungeonSpecificLvl = 'dungeon__specificLvl',
  DungeonStages = 'dungeon__stages',
  DungeonValid = 'dungeon__valid',
  Id = 'id',
  UniqChamber = 'uniqChamber',
  UniqChamberBiome = 'uniqChamber__biome',
  UniqChamberChamberName = 'uniqChamber__chamberName',
  UniqChamberChamberSymbol = 'uniqChamber__chamberSymbol',
  UniqChamberChamberType = 'uniqChamber__chamberType',
  UniqChamberId = 'uniqChamber__id',
  UniqChamberIsBattle = 'uniqChamber__isBattle',
  UniqChamberIsEvent = 'uniqChamber__isEvent',
  UniqChamberIsStory = 'uniqChamber__isStory',
  UniqChamberUri = 'uniqChamber__uri',
  UniqChamberValid = 'uniqChamber__valid'
}

export type DungeonEntity = {
  readonly __typename?: 'DungeonEntity';
  readonly claimedItems: ReadonlyArray<HeroItemEarned>;
  readonly claimedTokens: ReadonlyArray<HeroTokenEarned>;
  readonly currentChamber?: Maybe<OpenedChamberEntity>;
  readonly currentChamberIndex: Scalars['Int']['output'];
  readonly enteredHero?: Maybe<HeroEntity>;
  readonly factory: DungeonFactoryEntity;
  readonly id: Scalars['ID']['output'];
  readonly isCompleted: Scalars['Boolean']['output'];
  readonly logic: DungeonLogicEntity;
  readonly treasuryItems: ReadonlyArray<ItemEntity>;
  readonly treasuryTokens: ReadonlyArray<DungeonTreasuryTokenEntity>;
  readonly valid: Scalars['Boolean']['output'];
};


export type DungeonEntityClaimedItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroItemEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroItemEarned_Filter>;
};


export type DungeonEntityClaimedTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroTokenEarned_Filter>;
};


export type DungeonEntityTreasuryItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type DungeonEntityTreasuryTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonTreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonTreasuryTokenEntity_Filter>;
};

export type DungeonEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonEntity_Filter>>>;
  readonly claimedItems_?: InputMaybe<HeroItemEarned_Filter>;
  readonly claimedTokens_?: InputMaybe<HeroTokenEarned_Filter>;
  readonly currentChamber?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamberIndex?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly currentChamberIndex_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_not?: InputMaybe<Scalars['Int']['input']>;
  readonly currentChamberIndex_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly currentChamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly currentChamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly currentChamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly currentChamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly currentChamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_?: InputMaybe<HeroEntity_Filter>;
  readonly enteredHero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly enteredHero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly enteredHero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory?: InputMaybe<Scalars['String']['input']>;
  readonly factory_?: InputMaybe<DungeonFactoryEntity_Filter>;
  readonly factory_contains?: InputMaybe<Scalars['String']['input']>;
  readonly factory_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_gt?: InputMaybe<Scalars['String']['input']>;
  readonly factory_gte?: InputMaybe<Scalars['String']['input']>;
  readonly factory_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly factory_lt?: InputMaybe<Scalars['String']['input']>;
  readonly factory_lte?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly factory_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isCompleted_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isCompleted_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isCompleted_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly logic?: InputMaybe<Scalars['String']['input']>;
  readonly logic_?: InputMaybe<DungeonLogicEntity_Filter>;
  readonly logic_contains?: InputMaybe<Scalars['String']['input']>;
  readonly logic_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_gt?: InputMaybe<Scalars['String']['input']>;
  readonly logic_gte?: InputMaybe<Scalars['String']['input']>;
  readonly logic_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly logic_lt?: InputMaybe<Scalars['String']['input']>;
  readonly logic_lte?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly logic_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonEntity_Filter>>>;
  readonly treasuryItems_?: InputMaybe<ItemEntity_Filter>;
  readonly treasuryTokens_?: InputMaybe<DungeonTreasuryTokenEntity_Filter>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum DungeonEntity_OrderBy {
  ClaimedItems = 'claimedItems',
  ClaimedTokens = 'claimedTokens',
  CurrentChamber = 'currentChamber',
  CurrentChamberIndex = 'currentChamberIndex',
  CurrentChamberCompleted = 'currentChamber__completed',
  CurrentChamberHeroAdr = 'currentChamber__heroAdr',
  CurrentChamberHeroId = 'currentChamber__heroId',
  CurrentChamberId = 'currentChamber__id',
  CurrentChamberIteration = 'currentChamber__iteration',
  CurrentChamberStage = 'currentChamber__stage',
  CurrentChamberTimestamp = 'currentChamber__timestamp',
  CurrentChamberTx = 'currentChamber__tx',
  EnteredHero = 'enteredHero',
  EnteredHeroBiome = 'enteredHero__biome',
  EnteredHeroBurned = 'enteredHero__burned',
  EnteredHeroCreatedAtBlock = 'enteredHero__createdAtBlock',
  EnteredHeroDead = 'enteredHero__dead',
  EnteredHeroHeroId = 'enteredHero__heroId',
  EnteredHeroId = 'enteredHero__id',
  EnteredHeroLastFightTs = 'enteredHero__lastFightTs',
  EnteredHeroLastTransfer = 'enteredHero__lastTransfer',
  EnteredHeroMaxBiomeCompleted = 'enteredHero__maxBiomeCompleted',
  EnteredHeroNextLevelExperienceRequire = 'enteredHero__nextLevelExperienceRequire',
  EnteredHeroNgLevel = 'enteredHero__ngLevel',
  EnteredHeroNgLevelStarted = 'enteredHero__ngLevelStarted',
  EnteredHeroPreviousLevelExperienceRequire = 'enteredHero__previousLevelExperienceRequire',
  EnteredHeroRebornAllowed = 'enteredHero__rebornAllowed',
  EnteredHeroRefCode = 'enteredHero__refCode',
  EnteredHeroSandBoxMode = 'enteredHero__sandBoxMode',
  EnteredHeroScore = 'enteredHero__score',
  EnteredHeroStaked = 'enteredHero__staked',
  EnteredHeroStakedFee = 'enteredHero__stakedFee',
  EnteredHeroStakedFeeV2 = 'enteredHero__stakedFeeV2',
  EnteredHeroStakedGuild = 'enteredHero__stakedGuild',
  EnteredHeroTier = 'enteredHero__tier',
  EnteredHeroTimestamp = 'enteredHero__timestamp',
  EnteredHeroTx = 'enteredHero__tx',
  EnteredHeroUniqName = 'enteredHero__uniqName',
  EnteredHeroUniqUri = 'enteredHero__uniqUri',
  Factory = 'factory',
  FactoryId = 'factory__id',
  Id = 'id',
  IsCompleted = 'isCompleted',
  Logic = 'logic',
  LogicBiome = 'logic__biome',
  LogicId = 'logic__id',
  LogicMaxLevel = 'logic__maxLevel',
  LogicMinLevel = 'logic__minLevel',
  LogicSpecificClass = 'logic__specificClass',
  LogicSpecificLvl = 'logic__specificLvl',
  LogicStages = 'logic__stages',
  LogicValid = 'logic__valid',
  TreasuryItems = 'treasuryItems',
  TreasuryTokens = 'treasuryTokens',
  Valid = 'valid'
}

export type DungeonFactoryEntity = {
  readonly __typename?: 'DungeonFactoryEntity';
  readonly controllable: ControllableEntity;
  readonly controller: ControllerEntity;
  readonly dungeonLogics: ReadonlyArray<DungeonLogicEntity>;
  readonly dungeons: ReadonlyArray<DungeonEntity>;
  readonly id: Scalars['ID']['output'];
};


export type DungeonFactoryEntityDungeonLogicsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonLogicEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonLogicEntity_Filter>;
};


export type DungeonFactoryEntityDungeonsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonEntity_Filter>;
};

export type DungeonFactoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonFactoryEntity_Filter>>>;
  readonly controllable?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_?: InputMaybe<ControllableEntity_Filter>;
  readonly controllable_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeonLogics_?: InputMaybe<DungeonLogicEntity_Filter>;
  readonly dungeons_?: InputMaybe<DungeonEntity_Filter>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonFactoryEntity_Filter>>>;
};

export enum DungeonFactoryEntity_OrderBy {
  Controllable = 'controllable',
  ControllableController = 'controllable__controller',
  ControllableCreatedBlock = 'controllable__createdBlock',
  ControllableCreatedTs = 'controllable__createdTs',
  ControllableId = 'controllable__id',
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  DungeonLogics = 'dungeonLogics',
  Dungeons = 'dungeons',
  Id = 'id'
}

export type DungeonLogicEntity = {
  readonly __typename?: 'DungeonLogicEntity';
  readonly biome: Scalars['Int']['output'];
  readonly chambersMeta: ReadonlyArray<DungeonChamberMeta>;
  readonly dungeons: ReadonlyArray<DungeonEntity>;
  readonly factory: DungeonFactoryEntity;
  readonly id: Scalars['ID']['output'];
  readonly maxLevel: Scalars['Int']['output'];
  readonly minLevel: Scalars['Int']['output'];
  readonly requirements: ReadonlyArray<DungeonRequirements>;
  readonly specificClass: Scalars['Int']['output'];
  readonly specificLvl: Scalars['Int']['output'];
  readonly stages: Scalars['Int']['output'];
  readonly valid: Scalars['Boolean']['output'];
};


export type DungeonLogicEntityChambersMetaArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonChamberMeta_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonChamberMeta_Filter>;
};


export type DungeonLogicEntityDungeonsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonEntity_Filter>;
};


export type DungeonLogicEntityRequirementsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DungeonRequirements_Filter>;
};

export type DungeonLogicEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonLogicEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chambersMeta_?: InputMaybe<DungeonChamberMeta_Filter>;
  readonly dungeons_?: InputMaybe<DungeonEntity_Filter>;
  readonly factory?: InputMaybe<Scalars['String']['input']>;
  readonly factory_?: InputMaybe<DungeonFactoryEntity_Filter>;
  readonly factory_contains?: InputMaybe<Scalars['String']['input']>;
  readonly factory_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_gt?: InputMaybe<Scalars['String']['input']>;
  readonly factory_gte?: InputMaybe<Scalars['String']['input']>;
  readonly factory_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly factory_lt?: InputMaybe<Scalars['String']['input']>;
  readonly factory_lte?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly factory_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly factory_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly factory_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly maxLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly minLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonLogicEntity_Filter>>>;
  readonly requirements_?: InputMaybe<DungeonRequirements_Filter>;
  readonly specificClass?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly specificClass_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_not?: InputMaybe<Scalars['Int']['input']>;
  readonly specificClass_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly specificLvl?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly specificLvl_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_not?: InputMaybe<Scalars['Int']['input']>;
  readonly specificLvl_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stages?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stages_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stages_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum DungeonLogicEntity_OrderBy {
  Biome = 'biome',
  ChambersMeta = 'chambersMeta',
  Dungeons = 'dungeons',
  Factory = 'factory',
  FactoryId = 'factory__id',
  Id = 'id',
  MaxLevel = 'maxLevel',
  MinLevel = 'minLevel',
  Requirements = 'requirements',
  SpecificClass = 'specificClass',
  SpecificLvl = 'specificLvl',
  Stages = 'stages',
  Valid = 'valid'
}

export type DungeonRequirements = {
  readonly __typename?: 'DungeonRequirements';
  readonly dataIndex: Scalars['String']['output'];
  readonly id: Scalars['ID']['output'];
  readonly isHeroData: Scalars['Boolean']['output'];
  readonly logic: DungeonLogicEntity;
  readonly maxValue: Scalars['Int']['output'];
  readonly minValue: Scalars['Int']['output'];
};

export type DungeonRequirements_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonRequirements_Filter>>>;
  readonly dataIndex?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndex_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndex_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isHeroData?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isHeroData_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isHeroData_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isHeroData_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly logic?: InputMaybe<Scalars['String']['input']>;
  readonly logic_?: InputMaybe<DungeonLogicEntity_Filter>;
  readonly logic_contains?: InputMaybe<Scalars['String']['input']>;
  readonly logic_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_gt?: InputMaybe<Scalars['String']['input']>;
  readonly logic_gte?: InputMaybe<Scalars['String']['input']>;
  readonly logic_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly logic_lt?: InputMaybe<Scalars['String']['input']>;
  readonly logic_lte?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly logic_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly logic_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly logic_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly maxValue?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxValue_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxValue_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minValue?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minValue_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_not?: InputMaybe<Scalars['Int']['input']>;
  readonly minValue_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonRequirements_Filter>>>;
};

export enum DungeonRequirements_OrderBy {
  DataIndex = 'dataIndex',
  Id = 'id',
  IsHeroData = 'isHeroData',
  Logic = 'logic',
  LogicBiome = 'logic__biome',
  LogicId = 'logic__id',
  LogicMaxLevel = 'logic__maxLevel',
  LogicMinLevel = 'logic__minLevel',
  LogicSpecificClass = 'logic__specificClass',
  LogicSpecificLvl = 'logic__specificLvl',
  LogicStages = 'logic__stages',
  LogicValid = 'logic__valid',
  MaxValue = 'maxValue',
  MinValue = 'minValue'
}

export type DungeonRunCounterEntity = {
  readonly __typename?: 'DungeonRunCounterEntity';
  readonly count: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
};

export type DungeonRunCounterEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonRunCounterEntity_Filter>>>;
  readonly count?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly count_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonRunCounterEntity_Filter>>>;
};

export enum DungeonRunCounterEntity_OrderBy {
  Count = 'count',
  Id = 'id'
}

export type DungeonTreasuryTokenEntity = {
  readonly __typename?: 'DungeonTreasuryTokenEntity';
  readonly dungeon: DungeonEntity;
  readonly id: Scalars['ID']['output'];
  readonly token: TokenAmountEntity;
};

export type DungeonTreasuryTokenEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<DungeonTreasuryTokenEntity_Filter>>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<DungeonTreasuryTokenEntity_Filter>>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum DungeonTreasuryTokenEntity_OrderBy {
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  Id = 'id',
  Token = 'token',
  TokenAmount = 'token__amount',
  TokenId = 'token__id'
}

export type EventGenerateInfoData = {
  readonly __typename?: 'EventGenerateInfoData';
  readonly badAttributes: AttributeGenerateInfo;
  readonly biome: Scalars['Int']['output'];
  readonly damage: Scalars['Int']['output'];
  readonly eventId: Scalars['Int']['output'];
  readonly experience: Scalars['BigInt']['output'];
  readonly goodAttributes: AttributeGenerateInfo;
  readonly goodChance: Scalars['BigInt']['output'];
  readonly heal: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly lifeChancesRecovered: Scalars['Int']['output'];
  readonly manaConsumed: Scalars['Int']['output'];
  readonly manaRegen: Scalars['Int']['output'];
  readonly mintItems: ReadonlyArray<Scalars['String']['output']>;
  readonly mintItemsChances: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly subType: Scalars['Int']['output'];
};

export type EventGenerateInfoData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoData_Filter>>>;
  readonly badAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_?: InputMaybe<AttributeGenerateInfo_Filter>;
  readonly badAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly badAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly badAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly badAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly eventId?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly eventId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly eventId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly goodAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_?: InputMaybe<AttributeGenerateInfo_Filter>;
  readonly goodAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly goodAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly goodAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly goodAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly goodChance?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly goodChance_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly goodChance_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heal?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lifeChancesRecovered?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoData_Filter>>>;
  readonly subType?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly subType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum EventGenerateInfoData_OrderBy {
  BadAttributes = 'badAttributes',
  BadAttributesId = 'badAttributes__id',
  Biome = 'biome',
  Damage = 'damage',
  EventId = 'eventId',
  Experience = 'experience',
  GoodAttributes = 'goodAttributes',
  GoodAttributesId = 'goodAttributes__id',
  GoodChance = 'goodChance',
  Heal = 'heal',
  Id = 'id',
  LifeChancesRecovered = 'lifeChancesRecovered',
  ManaConsumed = 'manaConsumed',
  ManaRegen = 'manaRegen',
  MintItems = 'mintItems',
  MintItemsChances = 'mintItemsChances',
  SubType = 'subType'
}

export type EventGenerateInfoNegativeStatData = {
  readonly __typename?: 'EventGenerateInfoNegativeStatData';
  readonly damage?: Maybe<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly manaConsumed?: Maybe<Scalars['BigInt']['output']>;
};

export type EventGenerateInfoNegativeStatData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoNegativeStatData_Filter>>>;
  readonly damage?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly damage_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly damage_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly manaConsumed?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly manaConsumed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaConsumed_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoNegativeStatData_Filter>>>;
};

export enum EventGenerateInfoNegativeStatData_OrderBy {
  Damage = 'damage',
  Id = 'id',
  ManaConsumed = 'manaConsumed'
}

export type EventGenerateInfoPositiveStatData = {
  readonly __typename?: 'EventGenerateInfoPositiveStatData';
  readonly experience?: Maybe<Scalars['BigInt']['output']>;
  readonly heal?: Maybe<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly lifeChancesRecovered?: Maybe<Scalars['BigInt']['output']>;
  readonly manaRegen?: Maybe<Scalars['BigInt']['output']>;
};

export type EventGenerateInfoPositiveStatData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoPositiveStatData_Filter>>>;
  readonly experience?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heal?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heal_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly heal_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lifeChancesRecovered?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly lifeChancesRecovered_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChancesRecovered_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly manaRegen?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly manaRegen_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaRegen_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<EventGenerateInfoPositiveStatData_Filter>>>;
};

export enum EventGenerateInfoPositiveStatData_OrderBy {
  Experience = 'experience',
  Heal = 'heal',
  Id = 'id',
  LifeChancesRecovered = 'lifeChancesRecovered',
  ManaRegen = 'manaRegen'
}

export type EventResultEntity = {
  readonly __typename?: 'EventResultEntity';
  readonly damage: Scalars['Int']['output'];
  readonly experience: Scalars['Int']['output'];
  readonly heal: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly lifeChancesRecovered: Scalars['Int']['output'];
  readonly manaConsumed: Scalars['Int']['output'];
  readonly manaRegen: Scalars['Int']['output'];
  readonly negAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly posAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly tx: Scalars['String']['output'];
};

export type EventResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<EventResultEntity_Filter>>>;
  readonly damage?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heal_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lifeChancesRecovered?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChancesRecovered_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaRegen_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly negAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly negAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly negAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly negAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly negAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly negAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<EventResultEntity_Filter>>>;
  readonly posAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly posAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly posAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly posAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly posAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly posAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum EventResultEntity_OrderBy {
  Damage = 'damage',
  Experience = 'experience',
  Heal = 'heal',
  Id = 'id',
  LifeChancesRecovered = 'lifeChancesRecovered',
  ManaConsumed = 'manaConsumed',
  ManaRegen = 'manaRegen',
  NegAttributes = 'negAttributes',
  PosAttributes = 'posAttributes',
  Tx = 'tx'
}

export type FightResultEntity = {
  readonly __typename?: 'FightResultEntity';
  readonly fighterA: FighterTurnResultEntity;
  readonly fighterB: FighterTurnResultEntity;
  readonly id: Scalars['ID']['output'];
  readonly result: ChamberActionResultEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
};

export type FightResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<FightResultEntity_Filter>>>;
  readonly fighterA?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_?: InputMaybe<FighterTurnResultEntity_Filter>;
  readonly fighterA_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_gt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_gte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterA_lt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_lte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterA_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterA_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_?: InputMaybe<FighterTurnResultEntity_Filter>;
  readonly fighterB_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_gt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_gte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterB_lt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_lte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterB_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterB_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<FightResultEntity_Filter>>>;
  readonly result?: InputMaybe<Scalars['String']['input']>;
  readonly result_?: InputMaybe<ChamberActionResultEntity_Filter>;
  readonly result_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_gt?: InputMaybe<Scalars['String']['input']>;
  readonly result_gte?: InputMaybe<Scalars['String']['input']>;
  readonly result_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_lt?: InputMaybe<Scalars['String']['input']>;
  readonly result_lte?: InputMaybe<Scalars['String']['input']>;
  readonly result_not?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum FightResultEntity_OrderBy {
  FighterA = 'fighterA',
  FighterADamage = 'fighterA__damage',
  FighterADamagePoison = 'fighterA__damagePoison',
  FighterADamageReflect = 'fighterA__damageReflect',
  FighterAHealth = 'fighterA__health',
  FighterAId = 'fighterA__id',
  FighterAManaConsumed = 'fighterA__manaConsumed',
  FighterATx = 'fighterA__tx',
  FighterB = 'fighterB',
  FighterBDamage = 'fighterB__damage',
  FighterBDamagePoison = 'fighterB__damagePoison',
  FighterBDamageReflect = 'fighterB__damageReflect',
  FighterBHealth = 'fighterB__health',
  FighterBId = 'fighterB__id',
  FighterBManaConsumed = 'fighterB__manaConsumed',
  FighterBTx = 'fighterB__tx',
  Id = 'id',
  Result = 'result',
  ResultCompleted = 'result__completed',
  ResultDamage = 'result__damage',
  ResultData = 'result__data',
  ResultExperience = 'result__experience',
  ResultHeal = 'result__heal',
  ResultId = 'result__id',
  ResultKill = 'result__kill',
  ResultLifeChancesRecovered = 'result__lifeChancesRecovered',
  ResultManaConsumed = 'result__manaConsumed',
  ResultManaRegen = 'result__manaRegen',
  ResultTurn = 'result__turn',
  ResultTx = 'result__tx',
  Timestamp = 'timestamp',
  Tx = 'tx'
}

export type FighterInfoEntity = {
  readonly __typename?: 'FighterInfoEntity';
  readonly attackToken?: Maybe<ItemEntity>;
  readonly attackType: Scalars['Int']['output'];
  readonly fighterAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly fighterStats: StatsEntity;
  readonly id: Scalars['ID']['output'];
  readonly race: Scalars['Int']['output'];
};

export type FighterInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<FighterInfoEntity_Filter>>>;
  readonly attackToken?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_?: InputMaybe<ItemEntity_Filter>;
  readonly attackToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackType?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attackType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly fighterAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fighterStats?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_?: InputMaybe<StatsEntity_Filter>;
  readonly fighterStats_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_gt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_gte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterStats_lt?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_lte?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fighterStats_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fighterStats_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<FighterInfoEntity_Filter>>>;
  readonly race?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly race_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum FighterInfoEntity_OrderBy {
  AttackToken = 'attackToken',
  AttackTokenAugmentationLevel = 'attackToken__augmentationLevel',
  AttackTokenBurned = 'attackToken__burned',
  AttackTokenDurability = 'attackToken__durability',
  AttackTokenDurabilityPercent = 'attackToken__durabilityPercent',
  AttackTokenEquipped = 'attackToken__equipped',
  AttackTokenEquippedSlot = 'attackToken__equippedSlot',
  AttackTokenFragility = 'attackToken__fragility',
  AttackTokenId = 'attackToken__id',
  AttackTokenItemId = 'attackToken__itemId',
  AttackTokenItemSandBoxMode = 'attackToken__itemSandBoxMode',
  AttackTokenRarity = 'attackToken__rarity',
  AttackTokenScore = 'attackToken__score',
  AttackTokenTimestamp = 'attackToken__timestamp',
  AttackTokenUniqUri = 'attackToken__uniqUri',
  AttackType = 'attackType',
  FighterAttributes = 'fighterAttributes',
  FighterStats = 'fighterStats',
  FighterStatsExperience = 'fighterStats__experience',
  FighterStatsId = 'fighterStats__id',
  FighterStatsLevel = 'fighterStats__level',
  FighterStatsLife = 'fighterStats__life',
  FighterStatsLifeChances = 'fighterStats__lifeChances',
  FighterStatsMana = 'fighterStats__mana',
  Id = 'id',
  Race = 'race'
}

export type FighterTurnResultEntity = {
  readonly __typename?: 'FighterTurnResultEntity';
  readonly damage: Scalars['Int']['output'];
  readonly damagePoison: Scalars['Int']['output'];
  readonly damageReflect: Scalars['Int']['output'];
  readonly health: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly info: FighterInfoEntity;
  readonly magicAttack: ItemMagicAttackInfoEntity;
  readonly manaConsumed: Scalars['Int']['output'];
  readonly statuses: StatusesEntity;
  readonly tx: Scalars['String']['output'];
};

export type FighterTurnResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<FighterTurnResultEntity_Filter>>>;
  readonly damage?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damagePoison_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damagePoison_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damageReflect?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damageReflect_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damageReflect_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly damage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly health?: InputMaybe<Scalars['Int']['input']>;
  readonly health_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly health_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly health_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly health_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly health_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly health_not?: InputMaybe<Scalars['Int']['input']>;
  readonly health_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly info?: InputMaybe<Scalars['String']['input']>;
  readonly info_?: InputMaybe<FighterInfoEntity_Filter>;
  readonly info_contains?: InputMaybe<Scalars['String']['input']>;
  readonly info_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly info_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly info_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly info_gt?: InputMaybe<Scalars['String']['input']>;
  readonly info_gte?: InputMaybe<Scalars['String']['input']>;
  readonly info_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly info_lt?: InputMaybe<Scalars['String']['input']>;
  readonly info_lte?: InputMaybe<Scalars['String']['input']>;
  readonly info_not?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly info_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly info_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly info_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly info_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_?: InputMaybe<ItemMagicAttackInfoEntity_Filter>;
  readonly magicAttack_contains?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_gt?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_gte?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly magicAttack_lt?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_lte?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly magicAttack_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttack_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly manaConsumed?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumed_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<FighterTurnResultEntity_Filter>>>;
  readonly statuses?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_?: InputMaybe<StatusesEntity_Filter>;
  readonly statuses_contains?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_gt?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_gte?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly statuses_lt?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_lte?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly statuses_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly statuses_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum FighterTurnResultEntity_OrderBy {
  Damage = 'damage',
  DamagePoison = 'damagePoison',
  DamageReflect = 'damageReflect',
  Health = 'health',
  Id = 'id',
  Info = 'info',
  InfoAttackType = 'info__attackType',
  InfoId = 'info__id',
  InfoRace = 'info__race',
  MagicAttack = 'magicAttack',
  MagicAttackAttackType = 'magicAttack__attackType',
  MagicAttackId = 'magicAttack__id',
  MagicAttackMaxDmg = 'magicAttack__maxDmg',
  MagicAttackMinDmg = 'magicAttack__minDmg',
  ManaConsumed = 'manaConsumed',
  Statuses = 'statuses',
  StatusesBurn = 'statuses__burn',
  StatusesConfuse = 'statuses__confuse',
  StatusesCurse = 'statuses__curse',
  StatusesFreeze = 'statuses__freeze',
  StatusesGotCriticalHit = 'statuses__gotCriticalHit',
  StatusesHitBlocked = 'statuses__hitBlocked',
  StatusesId = 'statuses__id',
  StatusesMissed = 'statuses__missed',
  StatusesPoison = 'statuses__poison',
  StatusesStun = 'statuses__stun',
  Tx = 'tx'
}

export type FirstBossCompletedEntity = {
  readonly __typename?: 'FirstBossCompletedEntity';
  readonly biome: Scalars['Int']['output'];
  readonly chamber?: Maybe<OpenedChamberEntity>;
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly rewardAmount: Scalars['BigInt']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type FirstBossCompletedEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<FirstBossCompletedEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<FirstBossCompletedEntity_Filter>>>;
  readonly rewardAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly rewardAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly rewardAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum FirstBossCompletedEntity_OrderBy {
  Biome = 'biome',
  Chamber = 'chamber',
  ChamberCompleted = 'chamber__completed',
  ChamberHeroAdr = 'chamber__heroAdr',
  ChamberHeroId = 'chamber__heroId',
  ChamberId = 'chamber__id',
  ChamberIteration = 'chamber__iteration',
  ChamberStage = 'chamber__stage',
  ChamberTimestamp = 'chamber__timestamp',
  ChamberTx = 'chamber__tx',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  NgLevel = 'ngLevel',
  RewardAmount = 'rewardAmount',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type GeneralHeroTokenEarned = {
  readonly __typename?: 'GeneralHeroTokenEarned';
  readonly countAmount: Scalars['Int']['output'];
  readonly countReinforcementRewards: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly totalAmount: Scalars['BigInt']['output'];
  readonly totalReinforcementRewards: Scalars['BigDecimal']['output'];
};

export type GeneralHeroTokenEarned_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GeneralHeroTokenEarned_Filter>>>;
  readonly countAmount?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly countAmount_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_not?: InputMaybe<Scalars['Int']['input']>;
  readonly countAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly countReinforcementRewards?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly countReinforcementRewards_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_not?: InputMaybe<Scalars['Int']['input']>;
  readonly countReinforcementRewards_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GeneralHeroTokenEarned_Filter>>>;
  readonly totalAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalReinforcementRewards?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly totalReinforcementRewards_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalReinforcementRewards_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum GeneralHeroTokenEarned_OrderBy {
  CountAmount = 'countAmount',
  CountReinforcementRewards = 'countReinforcementRewards',
  Id = 'id',
  TotalAmount = 'totalAmount',
  TotalReinforcementRewards = 'totalReinforcementRewards'
}

export type GeneralTokenomicsEntity = {
  readonly __typename?: 'GeneralTokenomicsEntity';
  readonly heroes: Scalars['Int']['output'];
  readonly heroesByClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly liveHeroes: Scalars['Int']['output'];
  readonly liveHeroesByClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly spentOnHero: Scalars['BigDecimal']['output'];
  readonly spentOnItems: Scalars['BigDecimal']['output'];
  readonly totalBurned: Scalars['BigInt']['output'];
  readonly totalMinted: Scalars['BigInt']['output'];
  readonly users: Scalars['Int']['output'];
};

export type GeneralTokenomicsEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GeneralTokenomicsEntity_Filter>>>;
  readonly heroes?: InputMaybe<Scalars['Int']['input']>;
  readonly heroesByClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroesByClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroesByClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroesByClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroesByClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroesByClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly liveHeroes?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroesByClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroesByClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroesByClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroesByClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroesByClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroesByClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly liveHeroes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly liveHeroes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GeneralTokenomicsEntity_Filter>>>;
  readonly spentOnHero?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly spentOnHero_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnHero_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly spentOnItems?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly spentOnItems_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly spentOnItems_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly totalBurned?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalBurned_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalBurned_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalMinted?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalMinted_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalMinted_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly users?: InputMaybe<Scalars['Int']['input']>;
  readonly users_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly users_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly users_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly users_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly users_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly users_not?: InputMaybe<Scalars['Int']['input']>;
  readonly users_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum GeneralTokenomicsEntity_OrderBy {
  Heroes = 'heroes',
  HeroesByClass = 'heroesByClass',
  Id = 'id',
  LiveHeroes = 'liveHeroes',
  LiveHeroesByClass = 'liveHeroesByClass',
  SpentOnHero = 'spentOnHero',
  SpentOnItems = 'spentOnItems',
  TotalBurned = 'totalBurned',
  TotalMinted = 'totalMinted',
  Users = 'users'
}

export type GlobalCustomDataEntity = {
  readonly __typename?: 'GlobalCustomDataEntity';
  readonly id: Scalars['ID']['output'];
  readonly value: Scalars['BigDecimal']['output'];
};

export type GlobalCustomDataEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GlobalCustomDataEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GlobalCustomDataEntity_Filter>>>;
  readonly value?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly value_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum GlobalCustomDataEntity_OrderBy {
  Id = 'id',
  Value = 'value'
}

export type GuildActionEntity = {
  readonly __typename?: 'GuildActionEntity';
  readonly action: Scalars['Int']['output'];
  readonly guild: GuildEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user?: Maybe<UserEntity>;
  readonly values: ReadonlyArray<Scalars['String']['output']>;
};

export type GuildActionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly action?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly action_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GuildActionEntity_Filter>>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GuildActionEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum GuildActionEntity_OrderBy {
  Action = 'action',
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Id = 'id',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Values = 'values'
}

export type GuildEntity = {
  readonly __typename?: 'GuildEntity';
  readonly actions: ReadonlyArray<GuildActionEntity>;
  readonly activePvp?: Maybe<PvpGuildEntity>;
  readonly biomeDominationRequest?: Maybe<Scalars['Int']['output']>;
  readonly controller: ControllerEntity;
  readonly description: Scalars['String']['output'];
  readonly epochWeekRequest?: Maybe<Scalars['BigInt']['output']>;
  readonly helperRatio: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly level: Scalars['Int']['output'];
  readonly members: ReadonlyArray<GuildMemberEntity>;
  readonly name: Scalars['String']['output'];
  readonly owner: UserEntity;
  readonly pvpPoints: Scalars['BigInt']['output'];
  readonly reinforcementHeroes: ReadonlyArray<GuildReinforcementEntity>;
  readonly requestDepositAmount: Scalars['BigInt']['output'];
  readonly shelter: ReadonlyArray<ShelterEntity>;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly uri: Scalars['String']['output'];
};


export type GuildEntityActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<GuildActionEntity_Filter>;
};


export type GuildEntityMembersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildMemberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<GuildMemberEntity_Filter>;
};


export type GuildEntityReinforcementHeroesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildReinforcementEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<GuildReinforcementEntity_Filter>;
};


export type GuildEntityShelterArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ShelterEntity_Filter>;
};

export type GuildEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly actions_?: InputMaybe<GuildActionEntity_Filter>;
  readonly activePvp?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_?: InputMaybe<PvpGuildEntity_Filter>;
  readonly activePvp_contains?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_gt?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_gte?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly activePvp_lt?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_lte?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly activePvp_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly activePvp_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GuildEntity_Filter>>>;
  readonly biomeDominationRequest?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biomeDominationRequest_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biomeDominationRequest_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description?: InputMaybe<Scalars['String']['input']>;
  readonly description_contains?: InputMaybe<Scalars['String']['input']>;
  readonly description_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly description_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description_gt?: InputMaybe<Scalars['String']['input']>;
  readonly description_gte?: InputMaybe<Scalars['String']['input']>;
  readonly description_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly description_lt?: InputMaybe<Scalars['String']['input']>;
  readonly description_lte?: InputMaybe<Scalars['String']['input']>;
  readonly description_not?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly description_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly description_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly description_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly description_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly epochWeekRequest?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly epochWeekRequest_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeekRequest_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly helperRatio?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly helperRatio_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_not?: InputMaybe<Scalars['Int']['input']>;
  readonly helperRatio_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly members_?: InputMaybe<GuildMemberEntity_Filter>;
  readonly name?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_gt?: InputMaybe<Scalars['String']['input']>;
  readonly name_gte?: InputMaybe<Scalars['String']['input']>;
  readonly name_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_lt?: InputMaybe<Scalars['String']['input']>;
  readonly name_lte?: InputMaybe<Scalars['String']['input']>;
  readonly name_not?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GuildEntity_Filter>>>;
  readonly owner?: InputMaybe<Scalars['String']['input']>;
  readonly owner_?: InputMaybe<UserEntity_Filter>;
  readonly owner_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_lt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_lte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpPoints?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly pvpPoints_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly reinforcementHeroes_?: InputMaybe<GuildReinforcementEntity_Filter>;
  readonly requestDepositAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requestDepositAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly requestDepositAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly shelter_?: InputMaybe<ShelterEntity_Filter>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly uri?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum GuildEntity_OrderBy {
  Actions = 'actions',
  ActivePvp = 'activePvp',
  ActivePvpBiome = 'activePvp__biome',
  ActivePvpEpochWeek = 'activePvp__epochWeek',
  ActivePvpId = 'activePvp__id',
  ActivePvpPvpPoint = 'activePvp__pvpPoint',
  BiomeDominationRequest = 'biomeDominationRequest',
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  Description = 'description',
  EpochWeekRequest = 'epochWeekRequest',
  HelperRatio = 'helperRatio',
  Id = 'id',
  Level = 'level',
  Members = 'members',
  Name = 'name',
  Owner = 'owner',
  OwnerGamePoints = 'owner__gamePoints',
  OwnerId = 'owner__id',
  OwnerLastActionBlock = 'owner__lastActionBlock',
  OwnerLastActionTs = 'owner__lastActionTs',
  OwnerMaxNgLvl = 'owner__maxNgLvl',
  OwnerName = 'owner__name',
  OwnerTimestamp = 'owner__timestamp',
  OwnerUri = 'owner__uri',
  PvpPoints = 'pvpPoints',
  ReinforcementHeroes = 'reinforcementHeroes',
  RequestDepositAmount = 'requestDepositAmount',
  Shelter = 'shelter',
  Timestamp = 'timestamp',
  Uri = 'uri'
}

export type GuildMemberEntity = {
  readonly __typename?: 'GuildMemberEntity';
  readonly guild: GuildEntity;
  readonly id: Scalars['ID']['output'];
  readonly maskRights: Scalars['BigInt']['output'];
  readonly pvpPointCapacity: Scalars['BigInt']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type GuildMemberEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GuildMemberEntity_Filter>>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly maskRights?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly maskRights_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maskRights_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GuildMemberEntity_Filter>>>;
  readonly pvpPointCapacity?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly pvpPointCapacity_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPointCapacity_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum GuildMemberEntity_OrderBy {
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Id = 'id',
  MaskRights = 'maskRights',
  PvpPointCapacity = 'pvpPointCapacity',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type GuildReinforcementEntity = {
  readonly __typename?: 'GuildReinforcementEntity';
  readonly free: Scalars['Boolean']['output'];
  readonly guild: GuildEntity;
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type GuildReinforcementEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GuildReinforcementEntity_Filter>>>;
  readonly free?: InputMaybe<Scalars['Boolean']['input']>;
  readonly free_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly free_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly free_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GuildReinforcementEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum GuildReinforcementEntity_OrderBy {
  Free = 'free',
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type GuildRequestEntity = {
  readonly __typename?: 'GuildRequestEntity';
  readonly guild: GuildEntity;
  readonly id: Scalars['ID']['output'];
  readonly message: Scalars['String']['output'];
  readonly status: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type GuildRequestEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<GuildRequestEntity_Filter>>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly message?: InputMaybe<Scalars['String']['input']>;
  readonly message_contains?: InputMaybe<Scalars['String']['input']>;
  readonly message_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly message_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly message_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly message_gt?: InputMaybe<Scalars['String']['input']>;
  readonly message_gte?: InputMaybe<Scalars['String']['input']>;
  readonly message_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly message_lt?: InputMaybe<Scalars['String']['input']>;
  readonly message_lte?: InputMaybe<Scalars['String']['input']>;
  readonly message_not?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly message_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly message_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly message_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly message_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<GuildRequestEntity_Filter>>>;
  readonly status?: InputMaybe<Scalars['Int']['input']>;
  readonly status_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly status_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly status_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly status_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly status_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly status_not?: InputMaybe<Scalars['Int']['input']>;
  readonly status_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum GuildRequestEntity_OrderBy {
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Id = 'id',
  Message = 'message',
  Status = 'status',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type HeroAction = {
  readonly __typename?: 'HeroAction';
  readonly action: Scalars['Int']['output'];
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly owner: UserEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly values: ReadonlyArray<Scalars['String']['output']>;
};

export type HeroAction_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly action?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly action_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroAction_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroAction_Filter>>>;
  readonly owner?: InputMaybe<Scalars['String']['input']>;
  readonly owner_?: InputMaybe<UserEntity_Filter>;
  readonly owner_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_lt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_lte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum HeroAction_OrderBy {
  Action = 'action',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Owner = 'owner',
  OwnerGamePoints = 'owner__gamePoints',
  OwnerId = 'owner__id',
  OwnerLastActionBlock = 'owner__lastActionBlock',
  OwnerLastActionTs = 'owner__lastActionTs',
  OwnerMaxNgLvl = 'owner__maxNgLvl',
  OwnerName = 'owner__name',
  OwnerTimestamp = 'owner__timestamp',
  OwnerUri = 'owner__uri',
  Timestamp = 'timestamp',
  Tx = 'tx',
  Values = 'values'
}

export type HeroCustomData = {
  readonly __typename?: 'HeroCustomData';
  readonly dataIndex: Scalars['String']['output'];
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly value: Scalars['BigDecimal']['output'];
};

export type HeroCustomData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroCustomData_Filter>>>;
  readonly dataIndex?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndex_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndex_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dataIndex_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroCustomData_Filter>>>;
  readonly value?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly value_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum HeroCustomData_OrderBy {
  DataIndex = 'dataIndex',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  NgLevel = 'ngLevel',
  Value = 'value'
}

export type HeroEntity = {
  readonly __typename?: 'HeroEntity';
  readonly actions: ReadonlyArray<HeroAction>;
  readonly attributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly biome: Scalars['Int']['output'];
  readonly burned: Scalars['Boolean']['output'];
  readonly core: CoreAttributesEntity;
  readonly createdAtBlock: Scalars['BigInt']['output'];
  readonly customData: ReadonlyArray<HeroCustomData>;
  readonly dead: Scalars['Boolean']['output'];
  readonly dungeon?: Maybe<DungeonEntity>;
  readonly earnedItems: ReadonlyArray<HeroItemEarned>;
  readonly earnedTokens: ReadonlyArray<HeroTokenEarned>;
  readonly firstBossCompleted: ReadonlyArray<FirstBossCompletedEntity>;
  readonly heroId: Scalars['Int']['output'];
  readonly heroStat: HeroStatEntity;
  readonly id: Scalars['ID']['output'];
  readonly items: ReadonlyArray<ItemEntity>;
  readonly lastFightTs: Scalars['Int']['output'];
  readonly lastPayToken: TokenEntity;
  readonly lastTransfer: Scalars['Int']['output'];
  readonly maxBiomeCompleted: Scalars['Int']['output'];
  readonly meta: HeroMetaEntity;
  readonly nextLevelExperienceRequire: Scalars['Int']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly ngLevelStarted: Scalars['Int']['output'];
  readonly openedChambers: ReadonlyArray<OpenedChamberEntity>;
  readonly owner: UserEntity;
  readonly previousLevelExperienceRequire: Scalars['Int']['output'];
  readonly rebornAllowed: Scalars['Boolean']['output'];
  readonly refCode?: Maybe<Scalars['String']['output']>;
  readonly reinforcementHelper?: Maybe<HeroEntity>;
  readonly reinforcementRewardItems: ReadonlyArray<ReinforcementRewardItemEntity>;
  readonly reinforcementRewardTokens: ReadonlyArray<ReinforcementRewardTokenEntity>;
  readonly sandBoxMode?: Maybe<Scalars['Int']['output']>;
  readonly score: Scalars['Int']['output'];
  readonly staked: Scalars['Boolean']['output'];
  readonly stakedFee: Scalars['Int']['output'];
  readonly stakedFeeV2: Scalars['BigInt']['output'];
  readonly stakedGuild: Scalars['Boolean']['output'];
  readonly stats: StatsEntity;
  readonly tier: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly uniqName: Scalars['String']['output'];
  readonly uniqUri?: Maybe<Scalars['String']['output']>;
};


export type HeroEntityActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroAction_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroAction_Filter>;
};


export type HeroEntityCustomDataArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroCustomData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroCustomData_Filter>;
};


export type HeroEntityEarnedItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroItemEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroItemEarned_Filter>;
};


export type HeroEntityEarnedTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroTokenEarned_Filter>;
};


export type HeroEntityFirstBossCompletedArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FirstBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<FirstBossCompletedEntity_Filter>;
};


export type HeroEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type HeroEntityOpenedChambersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<OpenedChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<OpenedChamberEntity_Filter>;
};


export type HeroEntityReinforcementRewardItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ReinforcementRewardItemEntity_Filter>;
};


export type HeroEntityReinforcementRewardTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ReinforcementRewardTokenEntity_Filter>;
};

export type HeroEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly actions_?: InputMaybe<HeroAction_Filter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroEntity_Filter>>>;
  readonly attributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly burned?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly burned_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly core?: InputMaybe<Scalars['String']['input']>;
  readonly core_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly core_contains?: InputMaybe<Scalars['String']['input']>;
  readonly core_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_gt?: InputMaybe<Scalars['String']['input']>;
  readonly core_gte?: InputMaybe<Scalars['String']['input']>;
  readonly core_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly core_lt?: InputMaybe<Scalars['String']['input']>;
  readonly core_lte?: InputMaybe<Scalars['String']['input']>;
  readonly core_not?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly core_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly createdAtBlock?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly createdAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly customData_?: InputMaybe<HeroCustomData_Filter>;
  readonly dead?: InputMaybe<Scalars['Boolean']['input']>;
  readonly dead_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly dead_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly dead_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly earnedItems_?: InputMaybe<HeroItemEarned_Filter>;
  readonly earnedTokens_?: InputMaybe<HeroTokenEarned_Filter>;
  readonly firstBossCompleted_?: InputMaybe<FirstBossCompletedEntity_Filter>;
  readonly heroId?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroStat?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_?: InputMaybe<HeroStatEntity_Filter>;
  readonly heroStat_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStat_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStat_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly items_?: InputMaybe<ItemEntity_Filter>;
  readonly lastFightTs?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastFightTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastPayToken?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_?: InputMaybe<TokenEntity_Filter>;
  readonly lastPayToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lastPayToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lastPayToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastTransfer?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastTransfer_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxBiomeCompleted?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxBiomeCompleted_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly meta?: InputMaybe<Scalars['String']['input']>;
  readonly meta_?: InputMaybe<HeroMetaEntity_Filter>;
  readonly meta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly meta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly meta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly meta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly meta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly meta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly meta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextLevelExperienceRequire?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextLevelExperienceRequire_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_not?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevelStarted_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevelStarted_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly openedChambers_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroEntity_Filter>>>;
  readonly owner?: InputMaybe<Scalars['String']['input']>;
  readonly owner_?: InputMaybe<UserEntity_Filter>;
  readonly owner_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_lt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_lte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly previousLevelExperienceRequire?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly previousLevelExperienceRequire_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_not?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly rebornAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly rebornAllowed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly rebornAllowed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly rebornAllowed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly refCode?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_contains?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_gt?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_gte?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly refCode_lt?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_lte?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly refCode_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly refCode_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_?: InputMaybe<HeroEntity_Filter>;
  readonly reinforcementHelper_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_gt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_gte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementHelper_lt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_lte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementHelper_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementRewardItems_?: InputMaybe<ReinforcementRewardItemEntity_Filter>;
  readonly reinforcementRewardTokens_?: InputMaybe<ReinforcementRewardTokenEntity_Filter>;
  readonly sandBoxMode?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly sandBoxMode_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_not?: InputMaybe<Scalars['Int']['input']>;
  readonly sandBoxMode_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly score?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly score_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly staked?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stakedFee?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFeeV2?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly stakedFeeV2_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly stakedFee_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stakedFee_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stakedGuild?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stakedGuild_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly stakedGuild_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stakedGuild_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly staked_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly staked_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly staked_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly stats?: InputMaybe<Scalars['String']['input']>;
  readonly stats_?: InputMaybe<StatsEntity_Filter>;
  readonly stats_contains?: InputMaybe<Scalars['String']['input']>;
  readonly stats_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_gt?: InputMaybe<Scalars['String']['input']>;
  readonly stats_gte?: InputMaybe<Scalars['String']['input']>;
  readonly stats_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly stats_lt?: InputMaybe<Scalars['String']['input']>;
  readonly stats_lte?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly stats_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tier?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tier_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqName_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqName_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum HeroEntity_OrderBy {
  Actions = 'actions',
  Attributes = 'attributes',
  Biome = 'biome',
  Burned = 'burned',
  Core = 'core',
  CoreDexterity = 'core__dexterity',
  CoreEnergy = 'core__energy',
  CoreId = 'core__id',
  CoreStrength = 'core__strength',
  CoreVitality = 'core__vitality',
  CreatedAtBlock = 'createdAtBlock',
  CustomData = 'customData',
  Dead = 'dead',
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  EarnedItems = 'earnedItems',
  EarnedTokens = 'earnedTokens',
  FirstBossCompleted = 'firstBossCompleted',
  HeroId = 'heroId',
  HeroStat = 'heroStat',
  HeroStatBattles = 'heroStat__battles',
  HeroStatDungeonCompleted = 'heroStat__dungeonCompleted',
  HeroStatEvents = 'heroStat__events',
  HeroStatId = 'heroStat__id',
  HeroStatItemsMinted = 'heroStat__itemsMinted',
  HeroStatReinforcementTokenEarned = 'heroStat__reinforcementTokenEarned',
  HeroStatStories = 'heroStat__stories',
  HeroStatTokenEarned = 'heroStat__tokenEarned',
  Id = 'id',
  Items = 'items',
  LastFightTs = 'lastFightTs',
  LastPayToken = 'lastPayToken',
  LastPayTokenDecimals = 'lastPayToken__decimals',
  LastPayTokenId = 'lastPayToken__id',
  LastPayTokenLastPriceUpdateTimestamp = 'lastPayToken__lastPriceUpdateTimestamp',
  LastPayTokenName = 'lastPayToken__name',
  LastPayTokenPrice = 'lastPayToken__price',
  LastPayTokenSymbol = 'lastPayToken__symbol',
  LastPayTokenTotalSupply = 'lastPayToken__totalSupply',
  LastTransfer = 'lastTransfer',
  MaxBiomeCompleted = 'maxBiomeCompleted',
  Meta = 'meta',
  MetaHeroClass = 'meta__heroClass',
  MetaId = 'meta__id',
  MetaName = 'meta__name',
  MetaSymbol = 'meta__symbol',
  MetaUri = 'meta__uri',
  MetaValid = 'meta__valid',
  NextLevelExperienceRequire = 'nextLevelExperienceRequire',
  NgLevel = 'ngLevel',
  NgLevelStarted = 'ngLevelStarted',
  OpenedChambers = 'openedChambers',
  Owner = 'owner',
  OwnerGamePoints = 'owner__gamePoints',
  OwnerId = 'owner__id',
  OwnerLastActionBlock = 'owner__lastActionBlock',
  OwnerLastActionTs = 'owner__lastActionTs',
  OwnerMaxNgLvl = 'owner__maxNgLvl',
  OwnerName = 'owner__name',
  OwnerTimestamp = 'owner__timestamp',
  OwnerUri = 'owner__uri',
  PreviousLevelExperienceRequire = 'previousLevelExperienceRequire',
  RebornAllowed = 'rebornAllowed',
  RefCode = 'refCode',
  ReinforcementHelper = 'reinforcementHelper',
  ReinforcementHelperBiome = 'reinforcementHelper__biome',
  ReinforcementHelperBurned = 'reinforcementHelper__burned',
  ReinforcementHelperCreatedAtBlock = 'reinforcementHelper__createdAtBlock',
  ReinforcementHelperDead = 'reinforcementHelper__dead',
  ReinforcementHelperHeroId = 'reinforcementHelper__heroId',
  ReinforcementHelperId = 'reinforcementHelper__id',
  ReinforcementHelperLastFightTs = 'reinforcementHelper__lastFightTs',
  ReinforcementHelperLastTransfer = 'reinforcementHelper__lastTransfer',
  ReinforcementHelperMaxBiomeCompleted = 'reinforcementHelper__maxBiomeCompleted',
  ReinforcementHelperNextLevelExperienceRequire = 'reinforcementHelper__nextLevelExperienceRequire',
  ReinforcementHelperNgLevel = 'reinforcementHelper__ngLevel',
  ReinforcementHelperNgLevelStarted = 'reinforcementHelper__ngLevelStarted',
  ReinforcementHelperPreviousLevelExperienceRequire = 'reinforcementHelper__previousLevelExperienceRequire',
  ReinforcementHelperRebornAllowed = 'reinforcementHelper__rebornAllowed',
  ReinforcementHelperRefCode = 'reinforcementHelper__refCode',
  ReinforcementHelperSandBoxMode = 'reinforcementHelper__sandBoxMode',
  ReinforcementHelperScore = 'reinforcementHelper__score',
  ReinforcementHelperStaked = 'reinforcementHelper__staked',
  ReinforcementHelperStakedFee = 'reinforcementHelper__stakedFee',
  ReinforcementHelperStakedFeeV2 = 'reinforcementHelper__stakedFeeV2',
  ReinforcementHelperStakedGuild = 'reinforcementHelper__stakedGuild',
  ReinforcementHelperTier = 'reinforcementHelper__tier',
  ReinforcementHelperTimestamp = 'reinforcementHelper__timestamp',
  ReinforcementHelperTx = 'reinforcementHelper__tx',
  ReinforcementHelperUniqName = 'reinforcementHelper__uniqName',
  ReinforcementHelperUniqUri = 'reinforcementHelper__uniqUri',
  ReinforcementRewardItems = 'reinforcementRewardItems',
  ReinforcementRewardTokens = 'reinforcementRewardTokens',
  SandBoxMode = 'sandBoxMode',
  Score = 'score',
  Staked = 'staked',
  StakedFee = 'stakedFee',
  StakedFeeV2 = 'stakedFeeV2',
  StakedGuild = 'stakedGuild',
  Stats = 'stats',
  StatsExperience = 'stats__experience',
  StatsId = 'stats__id',
  StatsLevel = 'stats__level',
  StatsLife = 'stats__life',
  StatsLifeChances = 'stats__lifeChances',
  StatsMana = 'stats__mana',
  Tier = 'tier',
  Timestamp = 'timestamp',
  Tx = 'tx',
  UniqName = 'uniqName',
  UniqUri = 'uniqUri'
}

export type HeroHistoryEntity = {
  readonly __typename?: 'HeroHistoryEntity';
  readonly attributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly biome: Scalars['Int']['output'];
  readonly burned: Scalars['Boolean']['output'];
  readonly core: CoreAttributesEntity;
  readonly dead: Scalars['Boolean']['output'];
  readonly dungeon?: Maybe<DungeonEntity>;
  readonly hero: HeroEntity;
  readonly heroStat: HeroStatEntity;
  readonly id: Scalars['ID']['output'];
  readonly lastFightTs: Scalars['Int']['output'];
  readonly lastPayToken: TokenEntity;
  readonly lastTransfer: Scalars['Int']['output'];
  readonly maxBiomeCompleted: Scalars['Int']['output'];
  readonly nextLevelExperienceRequire: Scalars['Int']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly owner: UserEntity;
  readonly previousLevelExperienceRequire: Scalars['Int']['output'];
  readonly rebornAllowed: Scalars['Boolean']['output'];
  readonly reinforcementHelper?: Maybe<HeroEntity>;
  readonly score: Scalars['Int']['output'];
  readonly staked: Scalars['Boolean']['output'];
  readonly stakedFee: Scalars['Int']['output'];
  readonly stakedFeeV2: Scalars['BigInt']['output'];
  readonly stats: StatsEntity;
  readonly tier: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly uniqName: Scalars['String']['output'];
  readonly uniqUri?: Maybe<Scalars['String']['output']>;
};

export type HeroHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroHistoryEntity_Filter>>>;
  readonly attributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly burned?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly burned_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly core?: InputMaybe<Scalars['String']['input']>;
  readonly core_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly core_contains?: InputMaybe<Scalars['String']['input']>;
  readonly core_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_gt?: InputMaybe<Scalars['String']['input']>;
  readonly core_gte?: InputMaybe<Scalars['String']['input']>;
  readonly core_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly core_lt?: InputMaybe<Scalars['String']['input']>;
  readonly core_lte?: InputMaybe<Scalars['String']['input']>;
  readonly core_not?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly core_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly core_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly core_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dead?: InputMaybe<Scalars['Boolean']['input']>;
  readonly dead_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly dead_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly dead_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_?: InputMaybe<HeroStatEntity_Filter>;
  readonly heroStat_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStat_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStat_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStat_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lastFightTs?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastFightTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastFightTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastPayToken?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_?: InputMaybe<TokenEntity_Filter>;
  readonly lastPayToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lastPayToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lastPayToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lastPayToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lastTransfer?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastTransfer_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastTransfer_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxBiomeCompleted?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxBiomeCompleted_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxBiomeCompleted_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextLevelExperienceRequire?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextLevelExperienceRequire_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_not?: InputMaybe<Scalars['Int']['input']>;
  readonly nextLevelExperienceRequire_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroHistoryEntity_Filter>>>;
  readonly owner?: InputMaybe<Scalars['String']['input']>;
  readonly owner_?: InputMaybe<UserEntity_Filter>;
  readonly owner_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_lt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_lte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly previousLevelExperienceRequire?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly previousLevelExperienceRequire_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_not?: InputMaybe<Scalars['Int']['input']>;
  readonly previousLevelExperienceRequire_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly rebornAllowed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly rebornAllowed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly rebornAllowed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly rebornAllowed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly reinforcementHelper?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_?: InputMaybe<HeroEntity_Filter>;
  readonly reinforcementHelper_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_gt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_gte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementHelper_lt?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_lte?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly reinforcementHelper_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly reinforcementHelper_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly score?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly score_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly staked?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stakedFee?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFeeV2?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly stakedFeeV2_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly stakedFeeV2_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly stakedFee_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stakedFee_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stakedFee_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly staked_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly staked_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly staked_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly stats?: InputMaybe<Scalars['String']['input']>;
  readonly stats_?: InputMaybe<StatsEntity_Filter>;
  readonly stats_contains?: InputMaybe<Scalars['String']['input']>;
  readonly stats_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_gt?: InputMaybe<Scalars['String']['input']>;
  readonly stats_gte?: InputMaybe<Scalars['String']['input']>;
  readonly stats_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly stats_lt?: InputMaybe<Scalars['String']['input']>;
  readonly stats_lte?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly stats_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly stats_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly stats_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tier?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tier_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqName_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqName_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqName_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum HeroHistoryEntity_OrderBy {
  Attributes = 'attributes',
  Biome = 'biome',
  Burned = 'burned',
  Core = 'core',
  CoreDexterity = 'core__dexterity',
  CoreEnergy = 'core__energy',
  CoreId = 'core__id',
  CoreStrength = 'core__strength',
  CoreVitality = 'core__vitality',
  Dead = 'dead',
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  Hero = 'hero',
  HeroStat = 'heroStat',
  HeroStatBattles = 'heroStat__battles',
  HeroStatDungeonCompleted = 'heroStat__dungeonCompleted',
  HeroStatEvents = 'heroStat__events',
  HeroStatId = 'heroStat__id',
  HeroStatItemsMinted = 'heroStat__itemsMinted',
  HeroStatReinforcementTokenEarned = 'heroStat__reinforcementTokenEarned',
  HeroStatStories = 'heroStat__stories',
  HeroStatTokenEarned = 'heroStat__tokenEarned',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  LastFightTs = 'lastFightTs',
  LastPayToken = 'lastPayToken',
  LastPayTokenDecimals = 'lastPayToken__decimals',
  LastPayTokenId = 'lastPayToken__id',
  LastPayTokenLastPriceUpdateTimestamp = 'lastPayToken__lastPriceUpdateTimestamp',
  LastPayTokenName = 'lastPayToken__name',
  LastPayTokenPrice = 'lastPayToken__price',
  LastPayTokenSymbol = 'lastPayToken__symbol',
  LastPayTokenTotalSupply = 'lastPayToken__totalSupply',
  LastTransfer = 'lastTransfer',
  MaxBiomeCompleted = 'maxBiomeCompleted',
  NextLevelExperienceRequire = 'nextLevelExperienceRequire',
  NgLevel = 'ngLevel',
  Owner = 'owner',
  OwnerGamePoints = 'owner__gamePoints',
  OwnerId = 'owner__id',
  OwnerLastActionBlock = 'owner__lastActionBlock',
  OwnerLastActionTs = 'owner__lastActionTs',
  OwnerMaxNgLvl = 'owner__maxNgLvl',
  OwnerName = 'owner__name',
  OwnerTimestamp = 'owner__timestamp',
  OwnerUri = 'owner__uri',
  PreviousLevelExperienceRequire = 'previousLevelExperienceRequire',
  RebornAllowed = 'rebornAllowed',
  ReinforcementHelper = 'reinforcementHelper',
  ReinforcementHelperBiome = 'reinforcementHelper__biome',
  ReinforcementHelperBurned = 'reinforcementHelper__burned',
  ReinforcementHelperCreatedAtBlock = 'reinforcementHelper__createdAtBlock',
  ReinforcementHelperDead = 'reinforcementHelper__dead',
  ReinforcementHelperHeroId = 'reinforcementHelper__heroId',
  ReinforcementHelperId = 'reinforcementHelper__id',
  ReinforcementHelperLastFightTs = 'reinforcementHelper__lastFightTs',
  ReinforcementHelperLastTransfer = 'reinforcementHelper__lastTransfer',
  ReinforcementHelperMaxBiomeCompleted = 'reinforcementHelper__maxBiomeCompleted',
  ReinforcementHelperNextLevelExperienceRequire = 'reinforcementHelper__nextLevelExperienceRequire',
  ReinforcementHelperNgLevel = 'reinforcementHelper__ngLevel',
  ReinforcementHelperNgLevelStarted = 'reinforcementHelper__ngLevelStarted',
  ReinforcementHelperPreviousLevelExperienceRequire = 'reinforcementHelper__previousLevelExperienceRequire',
  ReinforcementHelperRebornAllowed = 'reinforcementHelper__rebornAllowed',
  ReinforcementHelperRefCode = 'reinforcementHelper__refCode',
  ReinforcementHelperSandBoxMode = 'reinforcementHelper__sandBoxMode',
  ReinforcementHelperScore = 'reinforcementHelper__score',
  ReinforcementHelperStaked = 'reinforcementHelper__staked',
  ReinforcementHelperStakedFee = 'reinforcementHelper__stakedFee',
  ReinforcementHelperStakedFeeV2 = 'reinforcementHelper__stakedFeeV2',
  ReinforcementHelperStakedGuild = 'reinforcementHelper__stakedGuild',
  ReinforcementHelperTier = 'reinforcementHelper__tier',
  ReinforcementHelperTimestamp = 'reinforcementHelper__timestamp',
  ReinforcementHelperTx = 'reinforcementHelper__tx',
  ReinforcementHelperUniqName = 'reinforcementHelper__uniqName',
  ReinforcementHelperUniqUri = 'reinforcementHelper__uniqUri',
  Score = 'score',
  Staked = 'staked',
  StakedFee = 'stakedFee',
  StakedFeeV2 = 'stakedFeeV2',
  Stats = 'stats',
  StatsExperience = 'stats__experience',
  StatsId = 'stats__id',
  StatsLevel = 'stats__level',
  StatsLife = 'stats__life',
  StatsLifeChances = 'stats__lifeChances',
  StatsMana = 'stats__mana',
  Tier = 'tier',
  Timestamp = 'timestamp',
  Tx = 'tx',
  UniqName = 'uniqName',
  UniqUri = 'uniqUri'
}

export type HeroItemEarned = {
  readonly __typename?: 'HeroItemEarned';
  readonly dungeon: DungeonEntity;
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
  readonly timestamp: Scalars['BigInt']['output'];
};

export type HeroItemEarned_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroItemEarned_Filter>>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroItemEarned_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum HeroItemEarned_OrderBy {
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  Timestamp = 'timestamp'
}

export type HeroMetaEntity = {
  readonly __typename?: 'HeroMetaEntity';
  readonly controllable: ControllableEntity;
  readonly controller: ControllerEntity;
  readonly feeToken: TokenAmountEntity;
  readonly heroClass: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly initialAttributes: CoreAttributesEntity;
  readonly name: Scalars['String']['output'];
  readonly symbol: Scalars['String']['output'];
  readonly uri: Scalars['String']['output'];
  readonly valid: Scalars['Boolean']['output'];
};

export type HeroMetaEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroMetaEntity_Filter>>>;
  readonly controllable?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_?: InputMaybe<ControllableEntity_Filter>;
  readonly controllable_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly feeToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroClass?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroClass_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly initialAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly initialAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly initialAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly initialAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly initialAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_gt?: InputMaybe<Scalars['String']['input']>;
  readonly name_gte?: InputMaybe<Scalars['String']['input']>;
  readonly name_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_lt?: InputMaybe<Scalars['String']['input']>;
  readonly name_lte?: InputMaybe<Scalars['String']['input']>;
  readonly name_not?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroMetaEntity_Filter>>>;
  readonly symbol?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_lt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_lte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum HeroMetaEntity_OrderBy {
  Controllable = 'controllable',
  ControllableController = 'controllable__controller',
  ControllableCreatedBlock = 'controllable__createdBlock',
  ControllableCreatedTs = 'controllable__createdTs',
  ControllableId = 'controllable__id',
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  FeeToken = 'feeToken',
  FeeTokenAmount = 'feeToken__amount',
  FeeTokenId = 'feeToken__id',
  HeroClass = 'heroClass',
  Id = 'id',
  InitialAttributes = 'initialAttributes',
  InitialAttributesDexterity = 'initialAttributes__dexterity',
  InitialAttributesEnergy = 'initialAttributes__energy',
  InitialAttributesId = 'initialAttributes__id',
  InitialAttributesStrength = 'initialAttributes__strength',
  InitialAttributesVitality = 'initialAttributes__vitality',
  Name = 'name',
  Symbol = 'symbol',
  Uri = 'uri',
  Valid = 'valid'
}

export type HeroStatEntity = {
  readonly __typename?: 'HeroStatEntity';
  readonly battles: Scalars['Int']['output'];
  readonly dungeonCompleted: Scalars['Int']['output'];
  readonly events: Scalars['Int']['output'];
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly itemsMinted: Scalars['Int']['output'];
  readonly reinforcementTokenEarned: Scalars['BigInt']['output'];
  readonly stories: Scalars['Int']['output'];
  readonly tokenEarned: Scalars['BigInt']['output'];
  readonly tokenEarnedByBiome: ReadonlyArray<Scalars['BigInt']['output']>;
};

export type HeroStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroStatEntity_Filter>>>;
  readonly battles?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly battles_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_not?: InputMaybe<Scalars['Int']['input']>;
  readonly battles_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeonCompleted?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeonCompleted_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_not?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonCompleted_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly events?: InputMaybe<Scalars['Int']['input']>;
  readonly events_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly events_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly events_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly events_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly events_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly events_not?: InputMaybe<Scalars['Int']['input']>;
  readonly events_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemsMinted?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemsMinted_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemsMinted_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroStatEntity_Filter>>>;
  readonly reinforcementTokenEarned?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly reinforcementTokenEarned_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reinforcementTokenEarned_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly stories?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stories_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stories_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tokenEarned?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarnedByBiome?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarnedByBiome_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarnedByBiome_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarnedByBiome_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarnedByBiome_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarnedByBiome_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarned_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarned_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarned_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenEarned_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarned_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarned_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly tokenEarned_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum HeroStatEntity_OrderBy {
  Battles = 'battles',
  DungeonCompleted = 'dungeonCompleted',
  Events = 'events',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  ItemsMinted = 'itemsMinted',
  ReinforcementTokenEarned = 'reinforcementTokenEarned',
  Stories = 'stories',
  TokenEarned = 'tokenEarned',
  TokenEarnedByBiome = 'tokenEarnedByBiome'
}

export type HeroTokenEarned = {
  readonly __typename?: 'HeroTokenEarned';
  readonly amount: Scalars['BigInt']['output'];
  readonly biome: Scalars['Int']['output'];
  readonly dungeon: DungeonEntity;
  readonly hero?: Maybe<HeroEntity>;
  readonly id: Scalars['ID']['output'];
  readonly reinforcementStakedFee: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly token: TokenEntity;
};

export type HeroTokenEarned_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokenEarned_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokenEarned_Filter>>>;
  readonly reinforcementStakedFee?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly reinforcementStakedFee_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_not?: InputMaybe<Scalars['Int']['input']>;
  readonly reinforcementStakedFee_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum HeroTokenEarned_OrderBy {
  Amount = 'amount',
  Biome = 'biome',
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  ReinforcementStakedFee = 'reinforcementStakedFee',
  Timestamp = 'timestamp',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply'
}

export type HeroTokensVaultEntity = {
  readonly __typename?: 'HeroTokensVaultEntity';
  readonly createdAtBlock: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
};

export type HeroTokensVaultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultEntity_Filter>>>;
  readonly createdAtBlock?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly createdAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultEntity_Filter>>>;
};

export enum HeroTokensVaultEntity_OrderBy {
  CreatedAtBlock = 'createdAtBlock',
  Id = 'id'
}

export type HeroTokensVaultHistoryEntity = {
  readonly __typename?: 'HeroTokensVaultHistoryEntity';
  readonly amount: Scalars['BigInt']['output'];
  readonly from: UserEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly toBurn: Scalars['BigInt']['output'];
  readonly toGov: Scalars['BigInt']['output'];
  readonly toTreasury: Scalars['BigInt']['output'];
  readonly token: TokenEntity;
};

export type HeroTokensVaultHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultHistoryEntity_Filter>>>;
  readonly from?: InputMaybe<Scalars['String']['input']>;
  readonly from_?: InputMaybe<UserEntity_Filter>;
  readonly from_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_gt?: InputMaybe<Scalars['String']['input']>;
  readonly from_gte?: InputMaybe<Scalars['String']['input']>;
  readonly from_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_lt?: InputMaybe<Scalars['String']['input']>;
  readonly from_lte?: InputMaybe<Scalars['String']['input']>;
  readonly from_not?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toBurn?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toBurn_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toGov?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toGov_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toTreasury?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toTreasury_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum HeroTokensVaultHistoryEntity_OrderBy {
  Amount = 'amount',
  From = 'from',
  FromGamePoints = 'from__gamePoints',
  FromId = 'from__id',
  FromLastActionBlock = 'from__lastActionBlock',
  FromLastActionTs = 'from__lastActionTs',
  FromMaxNgLvl = 'from__maxNgLvl',
  FromName = 'from__name',
  FromTimestamp = 'from__timestamp',
  FromUri = 'from__uri',
  Id = 'id',
  Timestamp = 'timestamp',
  ToBurn = 'toBurn',
  ToGov = 'toGov',
  ToTreasury = 'toTreasury',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply'
}

export type HeroTokensVaultStatisticEntity = {
  readonly __typename?: 'HeroTokensVaultStatisticEntity';
  readonly amount: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly toBurn: Scalars['BigInt']['output'];
  readonly toGov: Scalars['BigInt']['output'];
  readonly toTreasury: Scalars['BigInt']['output'];
};

export type HeroTokensVaultStatisticEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultStatisticEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<HeroTokensVaultStatisticEntity_Filter>>>;
  readonly toBurn?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toBurn_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toBurn_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toGov?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toGov_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toGov_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toTreasury?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly toTreasury_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly toTreasury_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum HeroTokensVaultStatisticEntity_OrderBy {
  Amount = 'amount',
  Id = 'id',
  ToBurn = 'toBurn',
  ToGov = 'toGov',
  ToTreasury = 'toTreasury'
}

export type ItemActionEntity = {
  readonly __typename?: 'ItemActionEntity';
  readonly action: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly user?: Maybe<UserEntity>;
  readonly values: ReadonlyArray<Scalars['String']['output']>;
};

export type ItemActionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly action?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly action_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemActionEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemActionEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum ItemActionEntity_OrderBy {
  Action = 'action',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  Timestamp = 'timestamp',
  Tx = 'tx',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Values = 'values'
}

export type ItemBuffInfoEntity = {
  readonly __typename?: 'ItemBuffInfoEntity';
  readonly casterAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly item?: Maybe<ItemEntity>;
  readonly manaConsumption: Scalars['Int']['output'];
  readonly targetAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
};

export type ItemBuffInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemBuffInfoEntity_Filter>>>;
  readonly casterAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly casterAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly casterAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly casterAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly casterAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly casterAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly manaConsumption?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumption_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaConsumption_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemBuffInfoEntity_Filter>>>;
  readonly targetAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly targetAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly targetAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly targetAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly targetAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly targetAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum ItemBuffInfoEntity_OrderBy {
  CasterAttributes = 'casterAttributes',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  ManaConsumption = 'manaConsumption',
  TargetAttributes = 'targetAttributes'
}

export type ItemConsumableInfoEntity = {
  readonly __typename?: 'ItemConsumableInfoEntity';
  readonly attributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly buffStats: StatsEntity;
  readonly id: Scalars['ID']['output'];
  readonly item?: Maybe<ItemEntity>;
};

export type ItemConsumableInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemConsumableInfoEntity_Filter>>>;
  readonly attributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly buffStats?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_?: InputMaybe<StatsEntity_Filter>;
  readonly buffStats_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_gt?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_gte?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buffStats_lt?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_lte?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buffStats_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffStats_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemConsumableInfoEntity_Filter>>>;
};

export enum ItemConsumableInfoEntity_OrderBy {
  Attributes = 'attributes',
  BuffStats = 'buffStats',
  BuffStatsExperience = 'buffStats__experience',
  BuffStatsId = 'buffStats__id',
  BuffStatsLevel = 'buffStats__level',
  BuffStatsLife = 'buffStats__life',
  BuffStatsLifeChances = 'buffStats__lifeChances',
  BuffStatsMana = 'buffStats__mana',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri'
}

export type ItemEntity = {
  readonly __typename?: 'ItemEntity';
  readonly actions: ReadonlyArray<ItemActionEntity>;
  readonly attributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly augmentationLevel: Scalars['Int']['output'];
  readonly buffInfo?: Maybe<ItemBuffInfoEntity>;
  readonly burned: Scalars['Boolean']['output'];
  readonly chamber?: Maybe<OpenedChamberEntity>;
  readonly consumableInfo?: Maybe<ItemConsumableInfoEntity>;
  readonly dungeon?: Maybe<DungeonEntity>;
  readonly durability: Scalars['Int']['output'];
  readonly durabilityPercent: Scalars['Int']['output'];
  readonly equipped: Scalars['Boolean']['output'];
  readonly equippedSlot?: Maybe<Scalars['Int']['output']>;
  readonly fragility: Scalars['BigInt']['output'];
  readonly hero?: Maybe<HeroEntity>;
  readonly heroSandbox?: Maybe<HeroEntity>;
  readonly id: Scalars['ID']['output'];
  readonly itemId: Scalars['Int']['output'];
  readonly itemSandBoxMode?: Maybe<Scalars['Int']['output']>;
  readonly magicAttackInfo?: Maybe<ItemMagicAttackInfoEntity>;
  readonly meta: ItemMetaEntity;
  readonly rarity: Scalars['Int']['output'];
  readonly score: Scalars['Int']['output'];
  readonly timestamp?: Maybe<Scalars['BigInt']['output']>;
  readonly uniqUri?: Maybe<Scalars['String']['output']>;
  readonly user?: Maybe<UserEntity>;
};


export type ItemEntityActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemActionEntity_Filter>;
};

export type ItemEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly actions_?: InputMaybe<ItemActionEntity_Filter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemEntity_Filter>>>;
  readonly attributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly attributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly augmentationLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly augmentationLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly augmentationLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly buffInfo?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_?: InputMaybe<ItemBuffInfoEntity_Filter>;
  readonly buffInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buffInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buffInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buffInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly burned?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly burned_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burned_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_?: InputMaybe<ItemConsumableInfoEntity_Filter>;
  readonly consumableInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly durability?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly durabilityPercent_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_not?: InputMaybe<Scalars['Int']['input']>;
  readonly durabilityPercent_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly durability_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly durability_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_not?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly equipped?: InputMaybe<Scalars['Boolean']['input']>;
  readonly equippedSlot?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly equippedSlot_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_not?: InputMaybe<Scalars['Int']['input']>;
  readonly equippedSlot_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly equipped_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly equipped_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly equipped_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly fragility?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly fragility_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly fragility_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_?: InputMaybe<HeroEntity_Filter>;
  readonly heroSandbox_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroSandbox_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroSandbox_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroSandbox_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemId?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemSandBoxMode?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemSandBoxMode_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemSandBoxMode_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly magicAttackInfo?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_?: InputMaybe<ItemMagicAttackInfoEntity_Filter>;
  readonly magicAttackInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly magicAttackInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly magicAttackInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly magicAttackInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta?: InputMaybe<Scalars['String']['input']>;
  readonly meta_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly meta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly meta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly meta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly meta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly meta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly meta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly meta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly meta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly meta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemEntity_Filter>>>;
  readonly rarity?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly rarity_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_not?: InputMaybe<Scalars['Int']['input']>;
  readonly rarity_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly score?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly score_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly score_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not?: InputMaybe<Scalars['Int']['input']>;
  readonly score_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly uniqUri?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uniqUri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uniqUri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ItemEntity_OrderBy {
  Actions = 'actions',
  Attributes = 'attributes',
  AugmentationLevel = 'augmentationLevel',
  BuffInfo = 'buffInfo',
  BuffInfoId = 'buffInfo__id',
  BuffInfoManaConsumption = 'buffInfo__manaConsumption',
  Burned = 'burned',
  Chamber = 'chamber',
  ChamberCompleted = 'chamber__completed',
  ChamberHeroAdr = 'chamber__heroAdr',
  ChamberHeroId = 'chamber__heroId',
  ChamberId = 'chamber__id',
  ChamberIteration = 'chamber__iteration',
  ChamberStage = 'chamber__stage',
  ChamberTimestamp = 'chamber__timestamp',
  ChamberTx = 'chamber__tx',
  ConsumableInfo = 'consumableInfo',
  ConsumableInfoId = 'consumableInfo__id',
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  Durability = 'durability',
  DurabilityPercent = 'durabilityPercent',
  Equipped = 'equipped',
  EquippedSlot = 'equippedSlot',
  Fragility = 'fragility',
  Hero = 'hero',
  HeroSandbox = 'heroSandbox',
  HeroSandboxBiome = 'heroSandbox__biome',
  HeroSandboxBurned = 'heroSandbox__burned',
  HeroSandboxCreatedAtBlock = 'heroSandbox__createdAtBlock',
  HeroSandboxDead = 'heroSandbox__dead',
  HeroSandboxHeroId = 'heroSandbox__heroId',
  HeroSandboxId = 'heroSandbox__id',
  HeroSandboxLastFightTs = 'heroSandbox__lastFightTs',
  HeroSandboxLastTransfer = 'heroSandbox__lastTransfer',
  HeroSandboxMaxBiomeCompleted = 'heroSandbox__maxBiomeCompleted',
  HeroSandboxNextLevelExperienceRequire = 'heroSandbox__nextLevelExperienceRequire',
  HeroSandboxNgLevel = 'heroSandbox__ngLevel',
  HeroSandboxNgLevelStarted = 'heroSandbox__ngLevelStarted',
  HeroSandboxPreviousLevelExperienceRequire = 'heroSandbox__previousLevelExperienceRequire',
  HeroSandboxRebornAllowed = 'heroSandbox__rebornAllowed',
  HeroSandboxRefCode = 'heroSandbox__refCode',
  HeroSandboxSandBoxMode = 'heroSandbox__sandBoxMode',
  HeroSandboxScore = 'heroSandbox__score',
  HeroSandboxStaked = 'heroSandbox__staked',
  HeroSandboxStakedFee = 'heroSandbox__stakedFee',
  HeroSandboxStakedFeeV2 = 'heroSandbox__stakedFeeV2',
  HeroSandboxStakedGuild = 'heroSandbox__stakedGuild',
  HeroSandboxTier = 'heroSandbox__tier',
  HeroSandboxTimestamp = 'heroSandbox__timestamp',
  HeroSandboxTx = 'heroSandbox__tx',
  HeroSandboxUniqName = 'heroSandbox__uniqName',
  HeroSandboxUniqUri = 'heroSandbox__uniqUri',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  ItemId = 'itemId',
  ItemSandBoxMode = 'itemSandBoxMode',
  MagicAttackInfo = 'magicAttackInfo',
  MagicAttackInfoAttackType = 'magicAttackInfo__attackType',
  MagicAttackInfoId = 'magicAttackInfo__id',
  MagicAttackInfoMaxDmg = 'magicAttackInfo__maxDmg',
  MagicAttackInfoMinDmg = 'magicAttackInfo__minDmg',
  Meta = 'meta',
  MetaConsumableActionMask = 'meta__consumableActionMask',
  MetaDurability = 'meta__durability',
  MetaId = 'meta__id',
  MetaIsAttackItem = 'meta__isAttackItem',
  MetaIsBuffItem = 'meta__isBuffItem',
  MetaIsConsumableItem = 'meta__isConsumableItem',
  MetaItemType = 'meta__itemType',
  MetaLevel = 'meta__level',
  MetaManaCost = 'meta__manaCost',
  MetaMetaData = 'meta__metaData',
  MetaName = 'meta__name',
  MetaRemoved = 'meta__removed',
  MetaSymbol = 'meta__symbol',
  MetaUri = 'meta__uri',
  MetaValid = 'meta__valid',
  Rarity = 'rarity',
  Score = 'score',
  Timestamp = 'timestamp',
  UniqUri = 'uniqUri',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type ItemMagicAttackInfoEntity = {
  readonly __typename?: 'ItemMagicAttackInfoEntity';
  readonly attackType: Scalars['Int']['output'];
  readonly attributesFactor: CoreAttributesEntity;
  readonly id: Scalars['ID']['output'];
  readonly item?: Maybe<ItemEntity>;
  readonly maxDmg: Scalars['Int']['output'];
  readonly minDmg: Scalars['Int']['output'];
};

export type ItemMagicAttackInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMagicAttackInfoEntity_Filter>>>;
  readonly attackType?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attackType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributesFactor?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly attributesFactor_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributesFactor_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributesFactor_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributesFactor_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly maxDmg?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxDmg_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDmg_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minDmg?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minDmg_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_not?: InputMaybe<Scalars['Int']['input']>;
  readonly minDmg_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMagicAttackInfoEntity_Filter>>>;
};

export enum ItemMagicAttackInfoEntity_OrderBy {
  AttackType = 'attackType',
  AttributesFactor = 'attributesFactor',
  AttributesFactorDexterity = 'attributesFactor__dexterity',
  AttributesFactorEnergy = 'attributesFactor__energy',
  AttributesFactorId = 'attributesFactor__id',
  AttributesFactorStrength = 'attributesFactor__strength',
  AttributesFactorVitality = 'attributesFactor__vitality',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  MaxDmg = 'maxDmg',
  MinDmg = 'minDmg'
}

export type ItemMetaConsumableInfoAttributeEntity = {
  readonly __typename?: 'ItemMetaConsumableInfoAttributeEntity';
  readonly id: Scalars['ID']['output'];
  readonly ids: ReadonlyArray<Scalars['Int']['output']>;
  readonly values: ReadonlyArray<Scalars['Int']['output']>;
};

export type ItemMetaConsumableInfoAttributeEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaConsumableInfoAttributeEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaConsumableInfoAttributeEntity_Filter>>>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum ItemMetaConsumableInfoAttributeEntity_OrderBy {
  Id = 'id',
  Ids = 'ids',
  Values = 'values'
}

export type ItemMetaEntity = {
  readonly __typename?: 'ItemMetaEntity';
  readonly consumableActionMask: Scalars['BigInt']['output'];
  readonly controllable: ControllableEntity;
  readonly controller: ControllerEntity;
  readonly durability: Scalars['Int']['output'];
  readonly feeToken?: Maybe<TokenAmountEntity>;
  readonly id: Scalars['ID']['output'];
  readonly isAttackItem: Scalars['Boolean']['output'];
  readonly isBuffItem: Scalars['Boolean']['output'];
  readonly isConsumableItem: Scalars['Boolean']['output'];
  readonly itemType: Scalars['Int']['output'];
  readonly level: Scalars['Int']['output'];
  readonly manaCost: Scalars['Int']['output'];
  readonly metaData?: Maybe<Scalars['Bytes']['output']>;
  readonly name: Scalars['String']['output'];
  readonly params?: Maybe<ItemMetaParamsEntity>;
  readonly pawnshopItemStat: ReadonlyArray<PawnshopPositionItemStatEntity>;
  readonly removed: Scalars['Boolean']['output'];
  readonly requirements: CoreAttributesEntity;
  readonly symbol: Scalars['String']['output'];
  readonly uri: Scalars['String']['output'];
  readonly valid: Scalars['Boolean']['output'];
};


export type ItemMetaEntityPawnshopItemStatArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionItemStatEntity_Filter>;
};

export type ItemMetaEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaEntity_Filter>>>;
  readonly consumableActionMask?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly consumableActionMask_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly consumableActionMask_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly controllable?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_?: InputMaybe<ControllableEntity_Filter>;
  readonly controllable_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controllable_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controllable_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly durability?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly durability_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_not?: InputMaybe<Scalars['Int']['input']>;
  readonly durability_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly feeToken?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly feeToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isAttackItem?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isAttackItem_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isAttackItem_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isAttackItem_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isBuffItem?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isBuffItem_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isBuffItem_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isBuffItem_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isConsumableItem?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isConsumableItem_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isConsumableItem_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isConsumableItem_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly itemType?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaCost?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaCost_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_not?: InputMaybe<Scalars['Int']['input']>;
  readonly manaCost_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly metaData?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_contains?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_gt?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_gte?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_in?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly metaData_lt?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_lte?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_not?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_not_contains?: InputMaybe<Scalars['Bytes']['input']>;
  readonly metaData_not_in?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly name?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_gt?: InputMaybe<Scalars['String']['input']>;
  readonly name_gte?: InputMaybe<Scalars['String']['input']>;
  readonly name_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_lt?: InputMaybe<Scalars['String']['input']>;
  readonly name_lte?: InputMaybe<Scalars['String']['input']>;
  readonly name_not?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaEntity_Filter>>>;
  readonly params?: InputMaybe<Scalars['String']['input']>;
  readonly params_?: InputMaybe<ItemMetaParamsEntity_Filter>;
  readonly params_contains?: InputMaybe<Scalars['String']['input']>;
  readonly params_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly params_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly params_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly params_gt?: InputMaybe<Scalars['String']['input']>;
  readonly params_gte?: InputMaybe<Scalars['String']['input']>;
  readonly params_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly params_lt?: InputMaybe<Scalars['String']['input']>;
  readonly params_lte?: InputMaybe<Scalars['String']['input']>;
  readonly params_not?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly params_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly params_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly params_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly params_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshopItemStat_?: InputMaybe<PawnshopPositionItemStatEntity_Filter>;
  readonly removed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly removed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly removed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly removed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requirements?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly requirements_contains?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_gt?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_gte?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requirements_lt?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_lte?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requirements_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_lt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_lte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum ItemMetaEntity_OrderBy {
  ConsumableActionMask = 'consumableActionMask',
  Controllable = 'controllable',
  ControllableController = 'controllable__controller',
  ControllableCreatedBlock = 'controllable__createdBlock',
  ControllableCreatedTs = 'controllable__createdTs',
  ControllableId = 'controllable__id',
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  Durability = 'durability',
  FeeToken = 'feeToken',
  FeeTokenAmount = 'feeToken__amount',
  FeeTokenId = 'feeToken__id',
  Id = 'id',
  IsAttackItem = 'isAttackItem',
  IsBuffItem = 'isBuffItem',
  IsConsumableItem = 'isConsumableItem',
  ItemType = 'itemType',
  Level = 'level',
  ManaCost = 'manaCost',
  MetaData = 'metaData',
  Name = 'name',
  Params = 'params',
  ParamsAugmentAmount = 'params__augmentAmount',
  ParamsAugmentToken = 'params__augmentToken',
  ParamsId = 'params__id',
  PawnshopItemStat = 'pawnshopItemStat',
  Removed = 'removed',
  Requirements = 'requirements',
  RequirementsDexterity = 'requirements__dexterity',
  RequirementsEnergy = 'requirements__energy',
  RequirementsId = 'requirements__id',
  RequirementsStrength = 'requirements__strength',
  RequirementsVitality = 'requirements__vitality',
  Symbol = 'symbol',
  Uri = 'uri',
  Valid = 'valid'
}

export type ItemMetaGeneralParamsEntity = {
  readonly __typename?: 'ItemMetaGeneralParamsEntity';
  readonly baseDurability: Scalars['Int']['output'];
  readonly defaultRarity: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly itemLevel: Scalars['Int']['output'];
  readonly itemMetaType: Scalars['Int']['output'];
  readonly itemType: Scalars['Int']['output'];
  readonly manaCost: Scalars['BigInt']['output'];
  readonly maxRandomAttributes: Scalars['Int']['output'];
  readonly minRandomAttributes: Scalars['Int']['output'];
  readonly requirements: CoreAttributesEntity;
};

export type ItemMetaGeneralParamsEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaGeneralParamsEntity_Filter>>>;
  readonly baseDurability?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly baseDurability_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_not?: InputMaybe<Scalars['Int']['input']>;
  readonly baseDurability_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly defaultRarity?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly defaultRarity_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_not?: InputMaybe<Scalars['Int']['input']>;
  readonly defaultRarity_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemMetaType?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemMetaType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemMetaType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemType?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly itemType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly itemType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaCost?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly manaCost_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly manaCost_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly maxRandomAttributes?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxRandomAttributes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxRandomAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minRandomAttributes?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly minRandomAttributes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly minRandomAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaGeneralParamsEntity_Filter>>>;
  readonly requirements?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly requirements_contains?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_gt?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_gte?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requirements_lt?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_lte?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requirements_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly requirements_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ItemMetaGeneralParamsEntity_OrderBy {
  BaseDurability = 'baseDurability',
  DefaultRarity = 'defaultRarity',
  Id = 'id',
  ItemLevel = 'itemLevel',
  ItemMetaType = 'itemMetaType',
  ItemType = 'itemType',
  ManaCost = 'manaCost',
  MaxRandomAttributes = 'maxRandomAttributes',
  MinRandomAttributes = 'minRandomAttributes',
  Requirements = 'requirements',
  RequirementsDexterity = 'requirements__dexterity',
  RequirementsEnergy = 'requirements__energy',
  RequirementsId = 'requirements__id',
  RequirementsStrength = 'requirements__strength',
  RequirementsVitality = 'requirements__vitality'
}

export type ItemMetaGenerateInfo = {
  readonly __typename?: 'ItemMetaGenerateInfo';
  readonly chances: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly ids: ReadonlyArray<Scalars['Int']['output']>;
  readonly maxs: ReadonlyArray<Scalars['Int']['output']>;
  readonly mins: ReadonlyArray<Scalars['Int']['output']>;
};

export type ItemMetaGenerateInfo_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaGenerateInfo_Filter>>>;
  readonly chances?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly chances_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly chances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly chances_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly chances_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly chances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxs_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mins_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaGenerateInfo_Filter>>>;
};

export enum ItemMetaGenerateInfo_OrderBy {
  Chances = 'chances',
  Id = 'id',
  Ids = 'ids',
  Maxs = 'maxs',
  Mins = 'mins'
}

export type ItemMetaMagicAttackInfoEntity = {
  readonly __typename?: 'ItemMetaMagicAttackInfoEntity';
  readonly aType: Scalars['Int']['output'];
  readonly attributeFactors: CoreAttributesEntity;
  readonly id: Scalars['ID']['output'];
  readonly max: Scalars['Int']['output'];
  readonly min: Scalars['Int']['output'];
};

export type ItemMetaMagicAttackInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly aType?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly aType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly aType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaMagicAttackInfoEntity_Filter>>>;
  readonly attributeFactors?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_?: InputMaybe<CoreAttributesEntity_Filter>;
  readonly attributeFactors_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeFactors_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeFactors_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attributeFactors_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly max?: InputMaybe<Scalars['Int']['input']>;
  readonly max_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly max_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly max_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly max_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly max_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly max_not?: InputMaybe<Scalars['Int']['input']>;
  readonly max_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly min?: InputMaybe<Scalars['Int']['input']>;
  readonly min_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly min_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly min_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly min_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly min_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly min_not?: InputMaybe<Scalars['Int']['input']>;
  readonly min_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaMagicAttackInfoEntity_Filter>>>;
};

export enum ItemMetaMagicAttackInfoEntity_OrderBy {
  AType = 'aType',
  AttributeFactors = 'attributeFactors',
  AttributeFactorsDexterity = 'attributeFactors__dexterity',
  AttributeFactorsEnergy = 'attributeFactors__energy',
  AttributeFactorsId = 'attributeFactors__id',
  AttributeFactorsStrength = 'attributeFactors__strength',
  AttributeFactorsVitality = 'attributeFactors__vitality',
  Id = 'id',
  Max = 'max',
  Min = 'min'
}

export type ItemMetaParamsEntity = {
  readonly __typename?: 'ItemMetaParamsEntity';
  readonly augmentAmount: Scalars['BigInt']['output'];
  readonly augmentToken: Scalars['String']['output'];
  readonly casterAttributes: ItemMetaGenerateInfo;
  readonly commonAttributes: ItemMetaGenerateInfo;
  readonly consumableAttributes: ItemMetaConsumableInfoAttributeEntity;
  readonly consumableStats: StatsMetaEntity;
  readonly genAttackInfo: ItemMetaMagicAttackInfoEntity;
  readonly id: Scalars['ID']['output'];
  readonly itemMeta: ItemMetaGeneralParamsEntity;
  readonly targetAttributes: ItemMetaGenerateInfo;
};

export type ItemMetaParamsEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaParamsEntity_Filter>>>;
  readonly augmentAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly augmentAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly augmentAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly augmentToken?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly augmentToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly augmentToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly augmentToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_?: InputMaybe<ItemMetaGenerateInfo_Filter>;
  readonly casterAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly casterAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly casterAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly casterAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_?: InputMaybe<ItemMetaGenerateInfo_Filter>;
  readonly commonAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly commonAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly commonAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly commonAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_?: InputMaybe<ItemMetaConsumableInfoAttributeEntity_Filter>;
  readonly consumableAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_?: InputMaybe<StatsMetaEntity_Filter>;
  readonly consumableStats_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_gt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_gte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableStats_lt?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_lte?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly consumableStats_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly consumableStats_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_?: InputMaybe<ItemMetaMagicAttackInfoEntity_Filter>;
  readonly genAttackInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly genAttackInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly genAttackInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly genAttackInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemMeta?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_?: InputMaybe<ItemMetaGeneralParamsEntity_Filter>;
  readonly itemMeta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemMeta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemMeta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemMeta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemMetaParamsEntity_Filter>>>;
  readonly targetAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_?: InputMaybe<ItemMetaGenerateInfo_Filter>;
  readonly targetAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly targetAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly targetAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly targetAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ItemMetaParamsEntity_OrderBy {
  AugmentAmount = 'augmentAmount',
  AugmentToken = 'augmentToken',
  CasterAttributes = 'casterAttributes',
  CasterAttributesId = 'casterAttributes__id',
  CommonAttributes = 'commonAttributes',
  CommonAttributesId = 'commonAttributes__id',
  ConsumableAttributes = 'consumableAttributes',
  ConsumableAttributesId = 'consumableAttributes__id',
  ConsumableStats = 'consumableStats',
  ConsumableStatsExperience = 'consumableStats__experience',
  ConsumableStatsId = 'consumableStats__id',
  ConsumableStatsLevel = 'consumableStats__level',
  ConsumableStatsLife = 'consumableStats__life',
  ConsumableStatsLifeChances = 'consumableStats__lifeChances',
  ConsumableStatsMana = 'consumableStats__mana',
  GenAttackInfo = 'genAttackInfo',
  GenAttackInfoAType = 'genAttackInfo__aType',
  GenAttackInfoId = 'genAttackInfo__id',
  GenAttackInfoMax = 'genAttackInfo__max',
  GenAttackInfoMin = 'genAttackInfo__min',
  Id = 'id',
  ItemMeta = 'itemMeta',
  ItemMetaBaseDurability = 'itemMeta__baseDurability',
  ItemMetaDefaultRarity = 'itemMeta__defaultRarity',
  ItemMetaId = 'itemMeta__id',
  ItemMetaItemLevel = 'itemMeta__itemLevel',
  ItemMetaItemMetaType = 'itemMeta__itemMetaType',
  ItemMetaItemType = 'itemMeta__itemType',
  ItemMetaManaCost = 'itemMeta__manaCost',
  ItemMetaMaxRandomAttributes = 'itemMeta__maxRandomAttributes',
  ItemMetaMinRandomAttributes = 'itemMeta__minRandomAttributes',
  TargetAttributes = 'targetAttributes',
  TargetAttributesId = 'targetAttributes__id'
}

export type ItemUnionEntity = {
  readonly __typename?: 'ItemUnionEntity';
  readonly count: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly itemToMint?: Maybe<ItemMetaEntity>;
  readonly items: ReadonlyArray<ItemMetaEntity>;
};


export type ItemUnionEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemMetaEntity_Filter>;
};

export type ItemUnionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemUnionEntity_Filter>>>;
  readonly count?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly count_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly count_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly count_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly count_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly count_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemToMint?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly itemToMint_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_gt?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_gte?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemToMint_lt?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_lte?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemToMint_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemToMint_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly items?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly items_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemUnionEntity_Filter>>>;
};

export enum ItemUnionEntity_OrderBy {
  Count = 'count',
  Id = 'id',
  ItemToMint = 'itemToMint',
  ItemToMintConsumableActionMask = 'itemToMint__consumableActionMask',
  ItemToMintDurability = 'itemToMint__durability',
  ItemToMintId = 'itemToMint__id',
  ItemToMintIsAttackItem = 'itemToMint__isAttackItem',
  ItemToMintIsBuffItem = 'itemToMint__isBuffItem',
  ItemToMintIsConsumableItem = 'itemToMint__isConsumableItem',
  ItemToMintItemType = 'itemToMint__itemType',
  ItemToMintLevel = 'itemToMint__level',
  ItemToMintManaCost = 'itemToMint__manaCost',
  ItemToMintMetaData = 'itemToMint__metaData',
  ItemToMintName = 'itemToMint__name',
  ItemToMintRemoved = 'itemToMint__removed',
  ItemToMintSymbol = 'itemToMint__symbol',
  ItemToMintUri = 'itemToMint__uri',
  ItemToMintValid = 'itemToMint__valid',
  Items = 'items'
}

export type ItemUsedEntity = {
  readonly __typename?: 'ItemUsedEntity';
  readonly chamber: OpenedChamberEntity;
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type ItemUsedEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemUsedEntity_Filter>>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemUsedEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ItemUsedEntity_OrderBy {
  Chamber = 'chamber',
  ChamberCompleted = 'chamber__completed',
  ChamberHeroAdr = 'chamber__heroAdr',
  ChamberHeroId = 'chamber__heroId',
  ChamberId = 'chamber__id',
  ChamberIteration = 'chamber__iteration',
  ChamberStage = 'chamber__stage',
  ChamberTimestamp = 'chamber__timestamp',
  ChamberTx = 'chamber__tx',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type ItemsBurntResultEntity = {
  readonly __typename?: 'ItemsBurntResultEntity';
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
  readonly result: ChamberActionResultEntity;
};

export type ItemsBurntResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ItemsBurntResultEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ItemsBurntResultEntity_Filter>>>;
  readonly result?: InputMaybe<Scalars['String']['input']>;
  readonly result_?: InputMaybe<ChamberActionResultEntity_Filter>;
  readonly result_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_gt?: InputMaybe<Scalars['String']['input']>;
  readonly result_gte?: InputMaybe<Scalars['String']['input']>;
  readonly result_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_lt?: InputMaybe<Scalars['String']['input']>;
  readonly result_lte?: InputMaybe<Scalars['String']['input']>;
  readonly result_not?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ItemsBurntResultEntity_OrderBy {
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  Result = 'result',
  ResultCompleted = 'result__completed',
  ResultDamage = 'result__damage',
  ResultData = 'result__data',
  ResultExperience = 'result__experience',
  ResultHeal = 'result__heal',
  ResultId = 'result__id',
  ResultKill = 'result__kill',
  ResultLifeChancesRecovered = 'result__lifeChancesRecovered',
  ResultManaConsumed = 'result__manaConsumed',
  ResultManaRegen = 'result__manaRegen',
  ResultTurn = 'result__turn',
  ResultTx = 'result__tx'
}

export type LootBoxEntity = {
  readonly __typename?: 'LootBoxEntity';
  readonly id: Scalars['ID']['output'];
  readonly maxDropItems: Scalars['BigInt']['output'];
  readonly mintItems: ReadonlyArray<ItemMetaEntity>;
  readonly mintItemsChances: ReadonlyArray<Scalars['BigInt']['output']>;
};


export type LootBoxEntityMintItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemMetaEntity_Filter>;
};

export type LootBoxEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<LootBoxEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly maxDropItems?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly maxDropItems_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly maxDropItems_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItems_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<LootBoxEntity_Filter>>>;
};

export enum LootBoxEntity_OrderBy {
  Id = 'id',
  MaxDropItems = 'maxDropItems',
  MintItems = 'mintItems',
  MintItemsChances = 'mintItemsChances'
}

export type LootBoxOpenedHistoryEntity = {
  readonly __typename?: 'LootBoxOpenedHistoryEntity';
  readonly id: Scalars['ID']['output'];
  readonly items: ReadonlyArray<ItemEntity>;
  readonly lootBox: LootBoxEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};


export type LootBoxOpenedHistoryEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};

export type LootBoxOpenedHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<LootBoxOpenedHistoryEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly items?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_?: InputMaybe<ItemEntity_Filter>;
  readonly items_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lootBox?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_?: InputMaybe<LootBoxEntity_Filter>;
  readonly lootBox_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_gt?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_gte?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lootBox_lt?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_lte?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly lootBox_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly lootBox_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<LootBoxOpenedHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum LootBoxOpenedHistoryEntity_OrderBy {
  Id = 'id',
  Items = 'items',
  LootBox = 'lootBox',
  LootBoxId = 'lootBox__id',
  LootBoxMaxDropItems = 'lootBox__maxDropItems',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type MonsterGenerateAttackInfoData = {
  readonly __typename?: 'MonsterGenerateAttackInfoData';
  readonly attackToken?: Maybe<Scalars['String']['output']>;
  readonly attackTokenId?: Maybe<Scalars['BigInt']['output']>;
  readonly attackType: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly mintItems: ReadonlyArray<Scalars['String']['output']>;
  readonly mintItemsChances: ReadonlyArray<Scalars['BigInt']['output']>;
};

export type MonsterGenerateAttackInfoData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<MonsterGenerateAttackInfoData_Filter>>>;
  readonly attackToken?: InputMaybe<Scalars['String']['input']>;
  readonly attackTokenId?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly attackTokenId_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly attackTokenId_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly attackToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackType?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attackType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly attackType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<MonsterGenerateAttackInfoData_Filter>>>;
};

export enum MonsterGenerateAttackInfoData_OrderBy {
  AttackToken = 'attackToken',
  AttackTokenId = 'attackTokenId',
  AttackType = 'attackType',
  Id = 'id',
  MintItems = 'mintItems',
  MintItemsChances = 'mintItemsChances'
}

export type MonsterGenerateInfoData = {
  readonly __typename?: 'MonsterGenerateInfoData';
  readonly attackInfo: MonsterGenerateAttackInfoData;
  readonly biome: Scalars['Int']['output'];
  readonly experience?: Maybe<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly ids: ReadonlyArray<Scalars['Int']['output']>;
  readonly level?: Maybe<Scalars['Int']['output']>;
  readonly maxDropItems: Scalars['Int']['output'];
  readonly monsterId: Scalars['Int']['output'];
  readonly race: Scalars['Int']['output'];
  readonly subType: Scalars['Int']['output'];
  readonly values: ReadonlyArray<Scalars['Int']['output']>;
};

export type MonsterGenerateInfoData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<MonsterGenerateInfoData_Filter>>>;
  readonly attackInfo?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_?: InputMaybe<MonsterGenerateAttackInfoData_Filter>;
  readonly attackInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ids_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxDropItems?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxDropItems_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxDropItems_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly monsterId?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly monsterId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly monsterId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<MonsterGenerateInfoData_Filter>>>;
  readonly race?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly race_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly subType?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly subType_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_not?: InputMaybe<Scalars['Int']['input']>;
  readonly subType_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum MonsterGenerateInfoData_OrderBy {
  AttackInfo = 'attackInfo',
  AttackInfoAttackToken = 'attackInfo__attackToken',
  AttackInfoAttackTokenId = 'attackInfo__attackTokenId',
  AttackInfoAttackType = 'attackInfo__attackType',
  AttackInfoId = 'attackInfo__id',
  Biome = 'biome',
  Experience = 'experience',
  Id = 'id',
  Ids = 'ids',
  Level = 'level',
  MaxDropItems = 'maxDropItems',
  MonsterId = 'monsterId',
  Race = 'race',
  SubType = 'subType',
  Values = 'values'
}

export type MonsterInfoEntity = {
  readonly __typename?: 'MonsterInfoEntity';
  readonly attackInfo?: Maybe<AttackInfoEntity>;
  readonly currentHp: Scalars['BigDecimal']['output'];
  readonly experience: Scalars['Int']['output'];
  readonly generated: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly level: Scalars['Int']['output'];
  readonly monsterAttributes: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly race: Scalars['Int']['output'];
  readonly rarity: Scalars['BigDecimal']['output'];
  readonly turn: Scalars['Int']['output'];
};

export type MonsterInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<MonsterInfoEntity_Filter>>>;
  readonly attackInfo?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_?: InputMaybe<AttackInfoEntity_Filter>;
  readonly attackInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attackInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly attackInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly currentHp?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly currentHp_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly currentHp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly experience?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly generated?: InputMaybe<Scalars['Boolean']['input']>;
  readonly generated_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly generated_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly generated_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly monsterAttributes?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly monsterAttributes_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly monsterAttributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly monsterAttributes_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly monsterAttributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly monsterAttributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<MonsterInfoEntity_Filter>>>;
  readonly race?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly race_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly race_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not?: InputMaybe<Scalars['Int']['input']>;
  readonly race_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly rarity?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly rarity_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly rarity_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly turn?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly turn_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_not?: InputMaybe<Scalars['Int']['input']>;
  readonly turn_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum MonsterInfoEntity_OrderBy {
  AttackInfo = 'attackInfo',
  AttackInfoAttackType = 'attackInfo__attackType',
  AttackInfoId = 'attackInfo__id',
  CurrentHp = 'currentHp',
  Experience = 'experience',
  Generated = 'generated',
  Id = 'id',
  Level = 'level',
  MonsterAttributes = 'monsterAttributes',
  Race = 'race',
  Rarity = 'rarity',
  Turn = 'turn'
}

export type MonsterMintItemData = {
  readonly __typename?: 'MonsterMintItemData';
  readonly id: Scalars['ID']['output'];
  readonly mintItems: ReadonlyArray<Scalars['String']['output']>;
  readonly mintItemsChanges: ReadonlyArray<Scalars['BigInt']['output']>;
};

export type MonsterMintItemData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<MonsterMintItemData_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChanges?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChanges_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChanges_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChanges_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChanges_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItemsChanges_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<MonsterMintItemData_Filter>>>;
};

export enum MonsterMintItemData_OrderBy {
  Id = 'id',
  MintItems = 'mintItems',
  MintItemsChanges = 'mintItemsChanges'
}

export type OpenedChamberEntity = {
  readonly __typename?: 'OpenedChamberEntity';
  readonly actions: ReadonlyArray<ChamberActionResultEntity>;
  readonly chamber: ChamberEntity;
  readonly completed: Scalars['Boolean']['output'];
  readonly dungeon: DungeonEntity;
  readonly enteredHero: HeroEntity;
  readonly event?: Maybe<EventResultEntity>;
  readonly heroAdr: Scalars['String']['output'];
  readonly heroHistory: HeroHistoryEntity;
  readonly heroId: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly iteration: Scalars['Int']['output'];
  readonly monster?: Maybe<MonsterInfoEntity>;
  readonly pages: ReadonlyArray<StoryPageEntity>;
  readonly stage: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly usedItems: ReadonlyArray<ItemUsedEntity>;
};


export type OpenedChamberEntityActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ChamberActionResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ChamberActionResultEntity_Filter>;
};


export type OpenedChamberEntityPagesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryPageEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoryPageEntity_Filter>;
};


export type OpenedChamberEntityUsedItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemUsedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemUsedEntity_Filter>;
};

export type OpenedChamberEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly actions_?: InputMaybe<ChamberActionResultEntity_Filter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<OpenedChamberEntity_Filter>>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<ChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly completed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly completed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly dungeon?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_?: InputMaybe<DungeonEntity_Filter>;
  readonly dungeon_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_gte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_lt?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_lte?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dungeon_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly dungeon_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_?: InputMaybe<HeroEntity_Filter>;
  readonly enteredHero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly enteredHero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly enteredHero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly enteredHero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event?: InputMaybe<Scalars['String']['input']>;
  readonly event_?: InputMaybe<EventResultEntity_Filter>;
  readonly event_contains?: InputMaybe<Scalars['String']['input']>;
  readonly event_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly event_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event_gt?: InputMaybe<Scalars['String']['input']>;
  readonly event_gte?: InputMaybe<Scalars['String']['input']>;
  readonly event_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly event_lt?: InputMaybe<Scalars['String']['input']>;
  readonly event_lte?: InputMaybe<Scalars['String']['input']>;
  readonly event_not?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly event_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly event_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly event_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly event_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroAdr_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroAdr_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_?: InputMaybe<HeroHistoryEntity_Filter>;
  readonly heroHistory_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistory_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistory_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistory_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroId?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly iteration?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly iteration_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_not?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly monster?: InputMaybe<Scalars['String']['input']>;
  readonly monster_?: InputMaybe<MonsterInfoEntity_Filter>;
  readonly monster_contains?: InputMaybe<Scalars['String']['input']>;
  readonly monster_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly monster_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly monster_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly monster_gt?: InputMaybe<Scalars['String']['input']>;
  readonly monster_gte?: InputMaybe<Scalars['String']['input']>;
  readonly monster_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly monster_lt?: InputMaybe<Scalars['String']['input']>;
  readonly monster_lte?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly monster_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly monster_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly monster_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly monster_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<OpenedChamberEntity_Filter>>>;
  readonly pages_?: InputMaybe<StoryPageEntity_Filter>;
  readonly stage?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly usedItems_?: InputMaybe<ItemUsedEntity_Filter>;
};

export enum OpenedChamberEntity_OrderBy {
  Actions = 'actions',
  Chamber = 'chamber',
  ChamberBiome = 'chamber__biome',
  ChamberChamberName = 'chamber__chamberName',
  ChamberChamberSymbol = 'chamber__chamberSymbol',
  ChamberChamberType = 'chamber__chamberType',
  ChamberId = 'chamber__id',
  ChamberIsBattle = 'chamber__isBattle',
  ChamberIsEvent = 'chamber__isEvent',
  ChamberIsStory = 'chamber__isStory',
  ChamberUri = 'chamber__uri',
  ChamberValid = 'chamber__valid',
  Completed = 'completed',
  Dungeon = 'dungeon',
  DungeonCurrentChamberIndex = 'dungeon__currentChamberIndex',
  DungeonId = 'dungeon__id',
  DungeonIsCompleted = 'dungeon__isCompleted',
  DungeonValid = 'dungeon__valid',
  EnteredHero = 'enteredHero',
  EnteredHeroBiome = 'enteredHero__biome',
  EnteredHeroBurned = 'enteredHero__burned',
  EnteredHeroCreatedAtBlock = 'enteredHero__createdAtBlock',
  EnteredHeroDead = 'enteredHero__dead',
  EnteredHeroHeroId = 'enteredHero__heroId',
  EnteredHeroId = 'enteredHero__id',
  EnteredHeroLastFightTs = 'enteredHero__lastFightTs',
  EnteredHeroLastTransfer = 'enteredHero__lastTransfer',
  EnteredHeroMaxBiomeCompleted = 'enteredHero__maxBiomeCompleted',
  EnteredHeroNextLevelExperienceRequire = 'enteredHero__nextLevelExperienceRequire',
  EnteredHeroNgLevel = 'enteredHero__ngLevel',
  EnteredHeroNgLevelStarted = 'enteredHero__ngLevelStarted',
  EnteredHeroPreviousLevelExperienceRequire = 'enteredHero__previousLevelExperienceRequire',
  EnteredHeroRebornAllowed = 'enteredHero__rebornAllowed',
  EnteredHeroRefCode = 'enteredHero__refCode',
  EnteredHeroSandBoxMode = 'enteredHero__sandBoxMode',
  EnteredHeroScore = 'enteredHero__score',
  EnteredHeroStaked = 'enteredHero__staked',
  EnteredHeroStakedFee = 'enteredHero__stakedFee',
  EnteredHeroStakedFeeV2 = 'enteredHero__stakedFeeV2',
  EnteredHeroStakedGuild = 'enteredHero__stakedGuild',
  EnteredHeroTier = 'enteredHero__tier',
  EnteredHeroTimestamp = 'enteredHero__timestamp',
  EnteredHeroTx = 'enteredHero__tx',
  EnteredHeroUniqName = 'enteredHero__uniqName',
  EnteredHeroUniqUri = 'enteredHero__uniqUri',
  Event = 'event',
  EventDamage = 'event__damage',
  EventExperience = 'event__experience',
  EventHeal = 'event__heal',
  EventId = 'event__id',
  EventLifeChancesRecovered = 'event__lifeChancesRecovered',
  EventManaConsumed = 'event__manaConsumed',
  EventManaRegen = 'event__manaRegen',
  EventTx = 'event__tx',
  HeroAdr = 'heroAdr',
  HeroHistory = 'heroHistory',
  HeroHistoryBiome = 'heroHistory__biome',
  HeroHistoryBurned = 'heroHistory__burned',
  HeroHistoryDead = 'heroHistory__dead',
  HeroHistoryId = 'heroHistory__id',
  HeroHistoryLastFightTs = 'heroHistory__lastFightTs',
  HeroHistoryLastTransfer = 'heroHistory__lastTransfer',
  HeroHistoryMaxBiomeCompleted = 'heroHistory__maxBiomeCompleted',
  HeroHistoryNextLevelExperienceRequire = 'heroHistory__nextLevelExperienceRequire',
  HeroHistoryNgLevel = 'heroHistory__ngLevel',
  HeroHistoryPreviousLevelExperienceRequire = 'heroHistory__previousLevelExperienceRequire',
  HeroHistoryRebornAllowed = 'heroHistory__rebornAllowed',
  HeroHistoryScore = 'heroHistory__score',
  HeroHistoryStaked = 'heroHistory__staked',
  HeroHistoryStakedFee = 'heroHistory__stakedFee',
  HeroHistoryStakedFeeV2 = 'heroHistory__stakedFeeV2',
  HeroHistoryTier = 'heroHistory__tier',
  HeroHistoryTimestamp = 'heroHistory__timestamp',
  HeroHistoryTx = 'heroHistory__tx',
  HeroHistoryUniqName = 'heroHistory__uniqName',
  HeroHistoryUniqUri = 'heroHistory__uniqUri',
  HeroId = 'heroId',
  Id = 'id',
  Iteration = 'iteration',
  Monster = 'monster',
  MonsterCurrentHp = 'monster__currentHp',
  MonsterExperience = 'monster__experience',
  MonsterGenerated = 'monster__generated',
  MonsterId = 'monster__id',
  MonsterLevel = 'monster__level',
  MonsterRace = 'monster__race',
  MonsterRarity = 'monster__rarity',
  MonsterTurn = 'monster__turn',
  Pages = 'pages',
  Stage = 'stage',
  Timestamp = 'timestamp',
  Tx = 'tx',
  UsedItems = 'usedItems'
}

/** Defines the order direction, either ascending or descending */
export enum OrderDirection {
  Asc = 'asc',
  Desc = 'desc'
}

export type PawnshopEntity = {
  readonly __typename?: 'PawnshopEntity';
  readonly feeRecipient: Scalars['String']['output'];
  readonly id: Scalars['ID']['output'];
  readonly owner: Scalars['String']['output'];
  readonly platformFee: Scalars['Int']['output'];
  readonly positionDepositAmount: Scalars['BigDecimal']['output'];
  readonly positionDepositToken?: Maybe<TokenEntity>;
  readonly positions: ReadonlyArray<PawnshopPositionEntity>;
};


export type PawnshopEntityPositionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionEntity_Filter>;
};

export type PawnshopEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopEntity_Filter>>>;
  readonly feeRecipient?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_gt?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_gte?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeRecipient_lt?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_lte?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly feeRecipient_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly feeRecipient_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopEntity_Filter>>>;
  readonly owner?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_gte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_lt?: InputMaybe<Scalars['String']['input']>;
  readonly owner_lte?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly owner_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly owner_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly platformFee?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly platformFee_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_not?: InputMaybe<Scalars['Int']['input']>;
  readonly platformFee_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly positionDepositAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly positionDepositAmount_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly positionDepositAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly positionDepositToken?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_?: InputMaybe<TokenEntity_Filter>;
  readonly positionDepositToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly positionDepositToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly positionDepositToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly positionDepositToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly positions_?: InputMaybe<PawnshopPositionEntity_Filter>;
};

export enum PawnshopEntity_OrderBy {
  FeeRecipient = 'feeRecipient',
  Id = 'id',
  Owner = 'owner',
  PlatformFee = 'platformFee',
  PositionDepositAmount = 'positionDepositAmount',
  PositionDepositToken = 'positionDepositToken',
  PositionDepositTokenDecimals = 'positionDepositToken__decimals',
  PositionDepositTokenId = 'positionDepositToken__id',
  PositionDepositTokenLastPriceUpdateTimestamp = 'positionDepositToken__lastPriceUpdateTimestamp',
  PositionDepositTokenName = 'positionDepositToken__name',
  PositionDepositTokenPrice = 'positionDepositToken__price',
  PositionDepositTokenSymbol = 'positionDepositToken__symbol',
  PositionDepositTokenTotalSupply = 'positionDepositToken__totalSupply',
  Positions = 'positions'
}

export type PawnshopPositionEntity = {
  readonly __typename?: 'PawnshopPositionEntity';
  readonly acquiredAmount: Scalars['BigDecimal']['output'];
  readonly acquiredToken: TokenEntity;
  readonly actions: ReadonlyArray<PawnshopPositionHistoryEntity>;
  readonly borrower?: Maybe<PawnshopUserEntity>;
  readonly collateralAmount?: Maybe<Scalars['BigDecimal']['output']>;
  readonly collateralHero?: Maybe<HeroEntity>;
  readonly collateralItem?: Maybe<ItemEntity>;
  readonly collateralNft?: Maybe<Scalars['String']['output']>;
  readonly collateralNftId?: Maybe<Scalars['BigDecimal']['output']>;
  readonly collateralToken?: Maybe<TokenEntity>;
  readonly createdBlock: Scalars['Int']['output'];
  readonly createdTs: Scalars['Int']['output'];
  readonly depositAmount?: Maybe<Scalars['BigDecimal']['output']>;
  readonly depositToken?: Maybe<TokenEntity>;
  readonly executionLender?: Maybe<PawnshopUserEntity>;
  readonly executionPosEndBlock?: Maybe<Scalars['Int']['output']>;
  readonly executionPosEndTs?: Maybe<Scalars['Int']['output']>;
  readonly executionPosStartBlock?: Maybe<Scalars['Int']['output']>;
  readonly executionPosStartTs?: Maybe<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly open: Scalars['Boolean']['output'];
  readonly pawnshop: PawnshopEntity;
  readonly posDurationBlocks: Scalars['Int']['output'];
  readonly posFee: Scalars['Int']['output'];
  readonly posId: Scalars['Int']['output'];
};


export type PawnshopPositionEntityActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
};

export type PawnshopPositionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly acquiredAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly acquiredAmount_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly acquiredAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly acquiredToken?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_?: InputMaybe<TokenEntity_Filter>;
  readonly acquiredToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly acquiredToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly acquiredToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly acquiredToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly actions_?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionEntity_Filter>>>;
  readonly borrower?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_?: InputMaybe<PawnshopUserEntity_Filter>;
  readonly borrower_contains?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_gt?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_gte?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly borrower_lt?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_lte?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly borrower_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly borrower_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly collateralAmount_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly collateralHero?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_?: InputMaybe<HeroEntity_Filter>;
  readonly collateralHero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralHero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralHero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralHero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_?: InputMaybe<ItemEntity_Filter>;
  readonly collateralItem_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_gt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_gte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralItem_lt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_lte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralItem_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralItem_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNftId?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly collateralNftId_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly collateralNftId_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly collateralNft_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_gt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_gte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralNft_lt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_lte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralNft_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralNft_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_?: InputMaybe<TokenEntity_Filter>;
  readonly collateralToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly collateralToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly collateralToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly createdBlock?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_not?: InputMaybe<Scalars['Int']['input']>;
  readonly createdBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdTs?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly createdTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly createdTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly depositAmount?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly depositAmount_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly depositAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly depositToken?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_?: InputMaybe<TokenEntity_Filter>;
  readonly depositToken_contains?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_gt?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_gte?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly depositToken_lt?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_lte?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly depositToken_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly depositToken_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_?: InputMaybe<PawnshopUserEntity_Filter>;
  readonly executionLender_contains?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_gt?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_gte?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly executionLender_lt?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_lte?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly executionLender_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly executionLender_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly executionPosEndBlock?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosEndBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_not?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosEndTs?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosEndTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosEndTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosStartBlock?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosStartBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_not?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosStartTs?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly executionPosStartTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly executionPosStartTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly open?: InputMaybe<Scalars['Boolean']['input']>;
  readonly open_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly open_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly open_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionEntity_Filter>>>;
  readonly pawnshop?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_?: InputMaybe<PawnshopEntity_Filter>;
  readonly pawnshop_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_gt?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_gte?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pawnshop_lt?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_lte?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pawnshop_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pawnshop_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly posDurationBlocks?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly posDurationBlocks_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_not?: InputMaybe<Scalars['Int']['input']>;
  readonly posDurationBlocks_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly posFee?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly posFee_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_not?: InputMaybe<Scalars['Int']['input']>;
  readonly posFee_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly posId?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly posId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly posId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum PawnshopPositionEntity_OrderBy {
  AcquiredAmount = 'acquiredAmount',
  AcquiredToken = 'acquiredToken',
  AcquiredTokenDecimals = 'acquiredToken__decimals',
  AcquiredTokenId = 'acquiredToken__id',
  AcquiredTokenLastPriceUpdateTimestamp = 'acquiredToken__lastPriceUpdateTimestamp',
  AcquiredTokenName = 'acquiredToken__name',
  AcquiredTokenPrice = 'acquiredToken__price',
  AcquiredTokenSymbol = 'acquiredToken__symbol',
  AcquiredTokenTotalSupply = 'acquiredToken__totalSupply',
  Actions = 'actions',
  Borrower = 'borrower',
  BorrowerId = 'borrower__id',
  CollateralAmount = 'collateralAmount',
  CollateralHero = 'collateralHero',
  CollateralHeroBiome = 'collateralHero__biome',
  CollateralHeroBurned = 'collateralHero__burned',
  CollateralHeroCreatedAtBlock = 'collateralHero__createdAtBlock',
  CollateralHeroDead = 'collateralHero__dead',
  CollateralHeroHeroId = 'collateralHero__heroId',
  CollateralHeroId = 'collateralHero__id',
  CollateralHeroLastFightTs = 'collateralHero__lastFightTs',
  CollateralHeroLastTransfer = 'collateralHero__lastTransfer',
  CollateralHeroMaxBiomeCompleted = 'collateralHero__maxBiomeCompleted',
  CollateralHeroNextLevelExperienceRequire = 'collateralHero__nextLevelExperienceRequire',
  CollateralHeroNgLevel = 'collateralHero__ngLevel',
  CollateralHeroNgLevelStarted = 'collateralHero__ngLevelStarted',
  CollateralHeroPreviousLevelExperienceRequire = 'collateralHero__previousLevelExperienceRequire',
  CollateralHeroRebornAllowed = 'collateralHero__rebornAllowed',
  CollateralHeroRefCode = 'collateralHero__refCode',
  CollateralHeroSandBoxMode = 'collateralHero__sandBoxMode',
  CollateralHeroScore = 'collateralHero__score',
  CollateralHeroStaked = 'collateralHero__staked',
  CollateralHeroStakedFee = 'collateralHero__stakedFee',
  CollateralHeroStakedFeeV2 = 'collateralHero__stakedFeeV2',
  CollateralHeroStakedGuild = 'collateralHero__stakedGuild',
  CollateralHeroTier = 'collateralHero__tier',
  CollateralHeroTimestamp = 'collateralHero__timestamp',
  CollateralHeroTx = 'collateralHero__tx',
  CollateralHeroUniqName = 'collateralHero__uniqName',
  CollateralHeroUniqUri = 'collateralHero__uniqUri',
  CollateralItem = 'collateralItem',
  CollateralItemAugmentationLevel = 'collateralItem__augmentationLevel',
  CollateralItemBurned = 'collateralItem__burned',
  CollateralItemDurability = 'collateralItem__durability',
  CollateralItemDurabilityPercent = 'collateralItem__durabilityPercent',
  CollateralItemEquipped = 'collateralItem__equipped',
  CollateralItemEquippedSlot = 'collateralItem__equippedSlot',
  CollateralItemFragility = 'collateralItem__fragility',
  CollateralItemId = 'collateralItem__id',
  CollateralItemItemId = 'collateralItem__itemId',
  CollateralItemItemSandBoxMode = 'collateralItem__itemSandBoxMode',
  CollateralItemRarity = 'collateralItem__rarity',
  CollateralItemScore = 'collateralItem__score',
  CollateralItemTimestamp = 'collateralItem__timestamp',
  CollateralItemUniqUri = 'collateralItem__uniqUri',
  CollateralNft = 'collateralNft',
  CollateralNftId = 'collateralNftId',
  CollateralToken = 'collateralToken',
  CollateralTokenDecimals = 'collateralToken__decimals',
  CollateralTokenId = 'collateralToken__id',
  CollateralTokenLastPriceUpdateTimestamp = 'collateralToken__lastPriceUpdateTimestamp',
  CollateralTokenName = 'collateralToken__name',
  CollateralTokenPrice = 'collateralToken__price',
  CollateralTokenSymbol = 'collateralToken__symbol',
  CollateralTokenTotalSupply = 'collateralToken__totalSupply',
  CreatedBlock = 'createdBlock',
  CreatedTs = 'createdTs',
  DepositAmount = 'depositAmount',
  DepositToken = 'depositToken',
  DepositTokenDecimals = 'depositToken__decimals',
  DepositTokenId = 'depositToken__id',
  DepositTokenLastPriceUpdateTimestamp = 'depositToken__lastPriceUpdateTimestamp',
  DepositTokenName = 'depositToken__name',
  DepositTokenPrice = 'depositToken__price',
  DepositTokenSymbol = 'depositToken__symbol',
  DepositTokenTotalSupply = 'depositToken__totalSupply',
  ExecutionLender = 'executionLender',
  ExecutionLenderId = 'executionLender__id',
  ExecutionPosEndBlock = 'executionPosEndBlock',
  ExecutionPosEndTs = 'executionPosEndTs',
  ExecutionPosStartBlock = 'executionPosStartBlock',
  ExecutionPosStartTs = 'executionPosStartTs',
  Id = 'id',
  Open = 'open',
  Pawnshop = 'pawnshop',
  PawnshopFeeRecipient = 'pawnshop__feeRecipient',
  PawnshopId = 'pawnshop__id',
  PawnshopOwner = 'pawnshop__owner',
  PawnshopPlatformFee = 'pawnshop__platformFee',
  PawnshopPositionDepositAmount = 'pawnshop__positionDepositAmount',
  PosDurationBlocks = 'posDurationBlocks',
  PosFee = 'posFee',
  PosId = 'posId'
}

export type PawnshopPositionHistoryEntity = {
  readonly __typename?: 'PawnshopPositionHistoryEntity';
  readonly action: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly item?: Maybe<ItemMetaEntity>;
  readonly position: PawnshopPositionEntity;
  readonly timestamp: Scalars['Int']['output'];
  readonly tx: Scalars['String']['output'];
  readonly user?: Maybe<UserEntity>;
  readonly values: ReadonlyArray<Scalars['String']['output']>;
};

export type PawnshopPositionHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly action?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly action_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly action_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not?: InputMaybe<Scalars['Int']['input']>;
  readonly action_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionHistoryEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionHistoryEntity_Filter>>>;
  readonly position?: InputMaybe<Scalars['String']['input']>;
  readonly position_?: InputMaybe<PawnshopPositionEntity_Filter>;
  readonly position_contains?: InputMaybe<Scalars['String']['input']>;
  readonly position_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly position_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly position_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly position_gt?: InputMaybe<Scalars['String']['input']>;
  readonly position_gte?: InputMaybe<Scalars['String']['input']>;
  readonly position_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly position_lt?: InputMaybe<Scalars['String']['input']>;
  readonly position_lte?: InputMaybe<Scalars['String']['input']>;
  readonly position_not?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly position_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly position_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly position_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly position_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['Int']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum PawnshopPositionHistoryEntity_OrderBy {
  Action = 'action',
  Id = 'id',
  Item = 'item',
  ItemConsumableActionMask = 'item__consumableActionMask',
  ItemDurability = 'item__durability',
  ItemId = 'item__id',
  ItemIsAttackItem = 'item__isAttackItem',
  ItemIsBuffItem = 'item__isBuffItem',
  ItemIsConsumableItem = 'item__isConsumableItem',
  ItemItemType = 'item__itemType',
  ItemLevel = 'item__level',
  ItemManaCost = 'item__manaCost',
  ItemMetaData = 'item__metaData',
  ItemName = 'item__name',
  ItemRemoved = 'item__removed',
  ItemSymbol = 'item__symbol',
  ItemUri = 'item__uri',
  ItemValid = 'item__valid',
  Position = 'position',
  PositionAcquiredAmount = 'position__acquiredAmount',
  PositionCollateralAmount = 'position__collateralAmount',
  PositionCollateralNft = 'position__collateralNft',
  PositionCollateralNftId = 'position__collateralNftId',
  PositionCreatedBlock = 'position__createdBlock',
  PositionCreatedTs = 'position__createdTs',
  PositionDepositAmount = 'position__depositAmount',
  PositionExecutionPosEndBlock = 'position__executionPosEndBlock',
  PositionExecutionPosEndTs = 'position__executionPosEndTs',
  PositionExecutionPosStartBlock = 'position__executionPosStartBlock',
  PositionExecutionPosStartTs = 'position__executionPosStartTs',
  PositionId = 'position__id',
  PositionOpen = 'position__open',
  PositionPosDurationBlocks = 'position__posDurationBlocks',
  PositionPosFee = 'position__posFee',
  PositionPosId = 'position__posId',
  Timestamp = 'timestamp',
  Tx = 'tx',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Values = 'values'
}

export type PawnshopPositionItemPriceStatEntity = {
  readonly __typename?: 'PawnshopPositionItemPriceStatEntity';
  readonly id: Scalars['ID']['output'];
  readonly itemStat: PawnshopPositionItemStatEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly value: Scalars['BigDecimal']['output'];
};

export type PawnshopPositionItemPriceStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemStat?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_?: InputMaybe<PawnshopPositionItemStatEntity_Filter>;
  readonly itemStat_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_gt?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_gte?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemStat_lt?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_lte?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly itemStat_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly itemStat_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly value?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly value_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly value_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum PawnshopPositionItemPriceStatEntity_OrderBy {
  Id = 'id',
  ItemStat = 'itemStat',
  ItemStatAvg = 'itemStat__avg',
  ItemStatId = 'itemStat__id',
  ItemStatMax = 'itemStat__max',
  ItemStatMin = 'itemStat__min',
  ItemStatTotalTrades = 'itemStat__totalTrades',
  Timestamp = 'timestamp',
  Value = 'value'
}

export type PawnshopPositionItemStatEntity = {
  readonly __typename?: 'PawnshopPositionItemStatEntity';
  readonly avg: Scalars['BigDecimal']['output'];
  readonly id: Scalars['ID']['output'];
  readonly item: ItemMetaEntity;
  readonly max: Scalars['BigDecimal']['output'];
  readonly min: Scalars['BigDecimal']['output'];
  readonly priceHistory: ReadonlyArray<PawnshopPositionItemPriceStatEntity>;
  readonly prices: ReadonlyArray<Scalars['BigDecimal']['output']>;
  readonly totalTrades: Scalars['Int']['output'];
};


export type PawnshopPositionItemStatEntityPriceHistoryArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemPriceStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>;
};

export type PawnshopPositionItemStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionItemStatEntity_Filter>>>;
  readonly avg?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly avg_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avg_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly max?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly max_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly max_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly min?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly min_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly min_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopPositionItemStatEntity_Filter>>>;
  readonly priceHistory_?: InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>;
  readonly prices?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly prices_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly prices_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly prices_not?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly prices_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly prices_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly totalTrades?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly totalTrades_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_not?: InputMaybe<Scalars['Int']['input']>;
  readonly totalTrades_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum PawnshopPositionItemStatEntity_OrderBy {
  Avg = 'avg',
  Id = 'id',
  Item = 'item',
  ItemConsumableActionMask = 'item__consumableActionMask',
  ItemDurability = 'item__durability',
  ItemId = 'item__id',
  ItemIsAttackItem = 'item__isAttackItem',
  ItemIsBuffItem = 'item__isBuffItem',
  ItemIsConsumableItem = 'item__isConsumableItem',
  ItemItemType = 'item__itemType',
  ItemLevel = 'item__level',
  ItemManaCost = 'item__manaCost',
  ItemMetaData = 'item__metaData',
  ItemName = 'item__name',
  ItemRemoved = 'item__removed',
  ItemSymbol = 'item__symbol',
  ItemUri = 'item__uri',
  ItemValid = 'item__valid',
  Max = 'max',
  Min = 'min',
  PriceHistory = 'priceHistory',
  Prices = 'prices',
  TotalTrades = 'totalTrades'
}

export type PawnshopStatisticEntity = {
  readonly __typename?: 'PawnshopStatisticEntity';
  readonly avgClosePrice: Scalars['BigDecimal']['output'];
  readonly fees: Scalars['BigDecimal']['output'];
  readonly heroes: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly items: Scalars['Int']['output'];
  readonly maxClosePrice: Scalars['BigDecimal']['output'];
  readonly minClosePrice: Scalars['BigDecimal']['output'];
  readonly totalPosition: Scalars['Int']['output'];
  readonly volume: Scalars['BigDecimal']['output'];
};

export type PawnshopStatisticEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopStatisticEntity_Filter>>>;
  readonly avgClosePrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly avgClosePrice_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly avgClosePrice_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fees?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly fees_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly fees_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly heroes?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly items?: InputMaybe<Scalars['Int']['input']>;
  readonly items_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly items_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly items_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly items_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly items_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly items_not?: InputMaybe<Scalars['Int']['input']>;
  readonly items_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxClosePrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly maxClosePrice_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly maxClosePrice_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly minClosePrice?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly minClosePrice_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly minClosePrice_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopStatisticEntity_Filter>>>;
  readonly totalPosition?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly totalPosition_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_not?: InputMaybe<Scalars['Int']['input']>;
  readonly totalPosition_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly volume?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly volume_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly volume_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum PawnshopStatisticEntity_OrderBy {
  AvgClosePrice = 'avgClosePrice',
  Fees = 'fees',
  Heroes = 'heroes',
  Id = 'id',
  Items = 'items',
  MaxClosePrice = 'maxClosePrice',
  MinClosePrice = 'minClosePrice',
  TotalPosition = 'totalPosition',
  Volume = 'volume'
}

export type PawnshopUserEntity = {
  readonly __typename?: 'PawnshopUserEntity';
  readonly id: Scalars['ID']['output'];
  readonly openedPositions: ReadonlyArray<PawnshopPositionEntity>;
};


export type PawnshopUserEntityOpenedPositionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionEntity_Filter>;
};

export type PawnshopUserEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopUserEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly openedPositions_?: InputMaybe<PawnshopPositionEntity_Filter>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PawnshopUserEntity_Filter>>>;
};

export enum PawnshopUserEntity_OrderBy {
  Id = 'id',
  OpenedPositions = 'openedPositions'
}

export type PvpFightEntity = {
  readonly __typename?: 'PvpFightEntity';
  readonly completed: Scalars['Boolean']['output'];
  readonly fightTurns: ReadonlyArray<PvpFightTurnEntity>;
  readonly heroA: PvpGuildHeroEntity;
  readonly heroB: PvpGuildHeroEntity;
  readonly heroHistoryA: HeroHistoryEntity;
  readonly heroHistoryB: HeroHistoryEntity;
  readonly id: Scalars['ID']['output'];
  readonly isWinnerA: Scalars['Boolean']['output'];
  readonly prizePvpPointsA: Scalars['BigInt']['output'];
  readonly prizePvpPointsB: Scalars['BigInt']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly userA: UserEntity;
  readonly userB: UserEntity;
};


export type PvpFightEntityFightTurnsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightTurnEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PvpFightTurnEntity_Filter>;
};

export type PvpFightEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PvpFightEntity_Filter>>>;
  readonly completed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly completed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly completed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly fightTurns_?: InputMaybe<PvpFightTurnEntity_Filter>;
  readonly heroA?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_?: InputMaybe<PvpGuildHeroEntity_Filter>;
  readonly heroA_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroA_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroA_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroA_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_?: InputMaybe<PvpGuildHeroEntity_Filter>;
  readonly heroB_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroB_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroB_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroB_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_?: InputMaybe<HeroHistoryEntity_Filter>;
  readonly heroHistoryA_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistoryA_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistoryA_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryA_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_?: InputMaybe<HeroHistoryEntity_Filter>;
  readonly heroHistoryB_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistoryB_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroHistoryB_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroHistoryB_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly isWinnerA?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isWinnerA_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly isWinnerA_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly isWinnerA_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PvpFightEntity_Filter>>>;
  readonly prizePvpPointsA?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly prizePvpPointsA_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsA_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly prizePvpPointsB?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly prizePvpPointsB_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly prizePvpPointsB_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly userA?: InputMaybe<Scalars['String']['input']>;
  readonly userA_?: InputMaybe<UserEntity_Filter>;
  readonly userA_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userA_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userA_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userA_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userA_gt?: InputMaybe<Scalars['String']['input']>;
  readonly userA_gte?: InputMaybe<Scalars['String']['input']>;
  readonly userA_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userA_lt?: InputMaybe<Scalars['String']['input']>;
  readonly userA_lte?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userA_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userA_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userA_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userA_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB?: InputMaybe<Scalars['String']['input']>;
  readonly userB_?: InputMaybe<UserEntity_Filter>;
  readonly userB_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userB_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userB_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB_gt?: InputMaybe<Scalars['String']['input']>;
  readonly userB_gte?: InputMaybe<Scalars['String']['input']>;
  readonly userB_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userB_lt?: InputMaybe<Scalars['String']['input']>;
  readonly userB_lte?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userB_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userB_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userB_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userB_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum PvpFightEntity_OrderBy {
  Completed = 'completed',
  FightTurns = 'fightTurns',
  HeroA = 'heroA',
  HeroAActive = 'heroA__active',
  HeroAId = 'heroA__id',
  HeroAPvpPoints = 'heroA__pvpPoints',
  HeroAWeek = 'heroA__week',
  HeroB = 'heroB',
  HeroBActive = 'heroB__active',
  HeroBId = 'heroB__id',
  HeroBPvpPoints = 'heroB__pvpPoints',
  HeroBWeek = 'heroB__week',
  HeroHistoryA = 'heroHistoryA',
  HeroHistoryABiome = 'heroHistoryA__biome',
  HeroHistoryABurned = 'heroHistoryA__burned',
  HeroHistoryADead = 'heroHistoryA__dead',
  HeroHistoryAId = 'heroHistoryA__id',
  HeroHistoryALastFightTs = 'heroHistoryA__lastFightTs',
  HeroHistoryALastTransfer = 'heroHistoryA__lastTransfer',
  HeroHistoryAMaxBiomeCompleted = 'heroHistoryA__maxBiomeCompleted',
  HeroHistoryANextLevelExperienceRequire = 'heroHistoryA__nextLevelExperienceRequire',
  HeroHistoryANgLevel = 'heroHistoryA__ngLevel',
  HeroHistoryAPreviousLevelExperienceRequire = 'heroHistoryA__previousLevelExperienceRequire',
  HeroHistoryARebornAllowed = 'heroHistoryA__rebornAllowed',
  HeroHistoryAScore = 'heroHistoryA__score',
  HeroHistoryAStaked = 'heroHistoryA__staked',
  HeroHistoryAStakedFee = 'heroHistoryA__stakedFee',
  HeroHistoryAStakedFeeV2 = 'heroHistoryA__stakedFeeV2',
  HeroHistoryATier = 'heroHistoryA__tier',
  HeroHistoryATimestamp = 'heroHistoryA__timestamp',
  HeroHistoryATx = 'heroHistoryA__tx',
  HeroHistoryAUniqName = 'heroHistoryA__uniqName',
  HeroHistoryAUniqUri = 'heroHistoryA__uniqUri',
  HeroHistoryB = 'heroHistoryB',
  HeroHistoryBBiome = 'heroHistoryB__biome',
  HeroHistoryBBurned = 'heroHistoryB__burned',
  HeroHistoryBDead = 'heroHistoryB__dead',
  HeroHistoryBId = 'heroHistoryB__id',
  HeroHistoryBLastFightTs = 'heroHistoryB__lastFightTs',
  HeroHistoryBLastTransfer = 'heroHistoryB__lastTransfer',
  HeroHistoryBMaxBiomeCompleted = 'heroHistoryB__maxBiomeCompleted',
  HeroHistoryBNextLevelExperienceRequire = 'heroHistoryB__nextLevelExperienceRequire',
  HeroHistoryBNgLevel = 'heroHistoryB__ngLevel',
  HeroHistoryBPreviousLevelExperienceRequire = 'heroHistoryB__previousLevelExperienceRequire',
  HeroHistoryBRebornAllowed = 'heroHistoryB__rebornAllowed',
  HeroHistoryBScore = 'heroHistoryB__score',
  HeroHistoryBStaked = 'heroHistoryB__staked',
  HeroHistoryBStakedFee = 'heroHistoryB__stakedFee',
  HeroHistoryBStakedFeeV2 = 'heroHistoryB__stakedFeeV2',
  HeroHistoryBTier = 'heroHistoryB__tier',
  HeroHistoryBTimestamp = 'heroHistoryB__timestamp',
  HeroHistoryBTx = 'heroHistoryB__tx',
  HeroHistoryBUniqName = 'heroHistoryB__uniqName',
  HeroHistoryBUniqUri = 'heroHistoryB__uniqUri',
  Id = 'id',
  IsWinnerA = 'isWinnerA',
  PrizePvpPointsA = 'prizePvpPointsA',
  PrizePvpPointsB = 'prizePvpPointsB',
  Timestamp = 'timestamp',
  UserA = 'userA',
  UserAGamePoints = 'userA__gamePoints',
  UserAId = 'userA__id',
  UserALastActionBlock = 'userA__lastActionBlock',
  UserALastActionTs = 'userA__lastActionTs',
  UserAMaxNgLvl = 'userA__maxNgLvl',
  UserAName = 'userA__name',
  UserATimestamp = 'userA__timestamp',
  UserAUri = 'userA__uri',
  UserB = 'userB',
  UserBGamePoints = 'userB__gamePoints',
  UserBId = 'userB__id',
  UserBLastActionBlock = 'userB__lastActionBlock',
  UserBLastActionTs = 'userB__lastActionTs',
  UserBMaxNgLvl = 'userB__maxNgLvl',
  UserBName = 'userB__name',
  UserBTimestamp = 'userB__timestamp',
  UserBUri = 'userB__uri'
}

export type PvpFightTurnEntity = {
  readonly __typename?: 'PvpFightTurnEntity';
  readonly fight: PvpFightEntity;
  readonly heroStateA: FighterTurnResultEntity;
  readonly heroStateB: FighterTurnResultEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly turn: Scalars['BigInt']['output'];
};

export type PvpFightTurnEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PvpFightTurnEntity_Filter>>>;
  readonly fight?: InputMaybe<Scalars['String']['input']>;
  readonly fight_?: InputMaybe<PvpFightEntity_Filter>;
  readonly fight_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fight_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fight_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fight_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fight_gt?: InputMaybe<Scalars['String']['input']>;
  readonly fight_gte?: InputMaybe<Scalars['String']['input']>;
  readonly fight_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fight_lt?: InputMaybe<Scalars['String']['input']>;
  readonly fight_lte?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly fight_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fight_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly fight_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly fight_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_?: InputMaybe<FighterTurnResultEntity_Filter>;
  readonly heroStateA_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStateA_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStateA_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateA_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_?: InputMaybe<FighterTurnResultEntity_Filter>;
  readonly heroStateB_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStateB_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroStateB_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroStateB_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PvpFightTurnEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly turn?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly turn_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly turn_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum PvpFightTurnEntity_OrderBy {
  Fight = 'fight',
  FightCompleted = 'fight__completed',
  FightId = 'fight__id',
  FightIsWinnerA = 'fight__isWinnerA',
  FightPrizePvpPointsA = 'fight__prizePvpPointsA',
  FightPrizePvpPointsB = 'fight__prizePvpPointsB',
  FightTimestamp = 'fight__timestamp',
  HeroStateA = 'heroStateA',
  HeroStateADamage = 'heroStateA__damage',
  HeroStateADamagePoison = 'heroStateA__damagePoison',
  HeroStateADamageReflect = 'heroStateA__damageReflect',
  HeroStateAHealth = 'heroStateA__health',
  HeroStateAId = 'heroStateA__id',
  HeroStateAManaConsumed = 'heroStateA__manaConsumed',
  HeroStateATx = 'heroStateA__tx',
  HeroStateB = 'heroStateB',
  HeroStateBDamage = 'heroStateB__damage',
  HeroStateBDamagePoison = 'heroStateB__damagePoison',
  HeroStateBDamageReflect = 'heroStateB__damageReflect',
  HeroStateBHealth = 'heroStateB__health',
  HeroStateBId = 'heroStateB__id',
  HeroStateBManaConsumed = 'heroStateB__manaConsumed',
  HeroStateBTx = 'heroStateB__tx',
  Id = 'id',
  Timestamp = 'timestamp',
  Turn = 'turn'
}

export type PvpGuildEntity = {
  readonly __typename?: 'PvpGuildEntity';
  readonly biome: Scalars['Int']['output'];
  readonly epochWeek: Scalars['BigInt']['output'];
  readonly guild: GuildEntity;
  readonly id: Scalars['ID']['output'];
  readonly pvpGuildHeroes: ReadonlyArray<PvpGuildHeroEntity>;
  readonly pvpPoint: Scalars['BigInt']['output'];
};


export type PvpGuildEntityPvpGuildHeroesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpGuildHeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PvpGuildHeroEntity_Filter>;
};

export type PvpGuildEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PvpGuildEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly epochWeek?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly epochWeek_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochWeek_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PvpGuildEntity_Filter>>>;
  readonly pvpGuildHeroes_?: InputMaybe<PvpGuildHeroEntity_Filter>;
  readonly pvpPoint?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly pvpPoint_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoint_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum PvpGuildEntity_OrderBy {
  Biome = 'biome',
  EpochWeek = 'epochWeek',
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Id = 'id',
  PvpGuildHeroes = 'pvpGuildHeroes',
  PvpPoint = 'pvpPoint'
}

export type PvpGuildHeroEntity = {
  readonly __typename?: 'PvpGuildHeroEntity';
  readonly active: Scalars['Boolean']['output'];
  readonly fightsA: ReadonlyArray<PvpFightEntity>;
  readonly fightsB: ReadonlyArray<PvpFightEntity>;
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly pvpGuild: PvpGuildEntity;
  readonly pvpPoints: Scalars['BigInt']['output'];
  readonly user: UserEntity;
  readonly week: Scalars['BigInt']['output'];
};


export type PvpGuildHeroEntityFightsAArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PvpFightEntity_Filter>;
};


export type PvpGuildHeroEntityFightsBArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PvpFightEntity_Filter>;
};

export type PvpGuildHeroEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly active?: InputMaybe<Scalars['Boolean']['input']>;
  readonly active_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly active_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly active_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<PvpGuildHeroEntity_Filter>>>;
  readonly fightsA_?: InputMaybe<PvpFightEntity_Filter>;
  readonly fightsB_?: InputMaybe<PvpFightEntity_Filter>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<PvpGuildHeroEntity_Filter>>>;
  readonly pvpGuild?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_?: InputMaybe<PvpGuildEntity_Filter>;
  readonly pvpGuild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pvpGuild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly pvpGuild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly pvpGuild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly pvpPoints?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly pvpPoints_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pvpPoints_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly week?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly week_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum PvpGuildHeroEntity_OrderBy {
  Active = 'active',
  FightsA = 'fightsA',
  FightsB = 'fightsB',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  PvpGuild = 'pvpGuild',
  PvpGuildBiome = 'pvpGuild__biome',
  PvpGuildEpochWeek = 'pvpGuild__epochWeek',
  PvpGuildId = 'pvpGuild__id',
  PvpGuildPvpPoint = 'pvpGuild__pvpPoint',
  PvpPoints = 'pvpPoints',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Week = 'week'
}

export type Query = {
  readonly __typename?: 'Query';
  /** Access to subgraph metadata */
  readonly _meta?: Maybe<_Meta_>;
  readonly answerAttributes?: Maybe<AnswerAttributes>;
  readonly answerAttributes_collection: ReadonlyArray<AnswerAttributes>;
  readonly answerBurnRandomItemMeta?: Maybe<AnswerBurnRandomItemMeta>;
  readonly answerBurnRandomItemMetas: ReadonlyArray<AnswerBurnRandomItemMeta>;
  readonly attackInfoEntities: ReadonlyArray<AttackInfoEntity>;
  readonly attackInfoEntity?: Maybe<AttackInfoEntity>;
  readonly attributeGenerateInfo?: Maybe<AttributeGenerateInfo>;
  readonly attributeGenerateInfos: ReadonlyArray<AttributeGenerateInfo>;
  readonly burnHistoryEntities: ReadonlyArray<BurnHistoryEntity>;
  readonly burnHistoryEntity?: Maybe<BurnHistoryEntity>;
  readonly chamberActionResultEntities: ReadonlyArray<ChamberActionResultEntity>;
  readonly chamberActionResultEntity?: Maybe<ChamberActionResultEntity>;
  readonly chamberEntities: ReadonlyArray<ChamberEntity>;
  readonly chamberEntity?: Maybe<ChamberEntity>;
  readonly controllableEntities: ReadonlyArray<ControllableEntity>;
  readonly controllableEntity?: Maybe<ControllableEntity>;
  readonly controllerEntities: ReadonlyArray<ControllerEntity>;
  readonly controllerEntity?: Maybe<ControllerEntity>;
  readonly coreAttributesEntities: ReadonlyArray<CoreAttributesEntity>;
  readonly coreAttributesEntity?: Maybe<CoreAttributesEntity>;
  readonly dailyActivityCompletedEntities: ReadonlyArray<DailyActivityCompletedEntity>;
  readonly dailyActivityCompletedEntity?: Maybe<DailyActivityCompletedEntity>;
  readonly daustatisticEntities: ReadonlyArray<DauStatisticEntity>;
  readonly daustatisticEntity?: Maybe<DauStatisticEntity>;
  readonly dungeonChamberMeta?: Maybe<DungeonChamberMeta>;
  readonly dungeonChamberMetas: ReadonlyArray<DungeonChamberMeta>;
  readonly dungeonEntities: ReadonlyArray<DungeonEntity>;
  readonly dungeonEntity?: Maybe<DungeonEntity>;
  readonly dungeonFactoryEntities: ReadonlyArray<DungeonFactoryEntity>;
  readonly dungeonFactoryEntity?: Maybe<DungeonFactoryEntity>;
  readonly dungeonLogicEntities: ReadonlyArray<DungeonLogicEntity>;
  readonly dungeonLogicEntity?: Maybe<DungeonLogicEntity>;
  readonly dungeonRequirements?: Maybe<DungeonRequirements>;
  readonly dungeonRequirements_collection: ReadonlyArray<DungeonRequirements>;
  readonly dungeonRunCounterEntities: ReadonlyArray<DungeonRunCounterEntity>;
  readonly dungeonRunCounterEntity?: Maybe<DungeonRunCounterEntity>;
  readonly dungeonTreasuryTokenEntities: ReadonlyArray<DungeonTreasuryTokenEntity>;
  readonly dungeonTreasuryTokenEntity?: Maybe<DungeonTreasuryTokenEntity>;
  readonly eventGenerateInfoData?: Maybe<EventGenerateInfoData>;
  readonly eventGenerateInfoDatas: ReadonlyArray<EventGenerateInfoData>;
  readonly eventGenerateInfoNegativeStatData?: Maybe<EventGenerateInfoNegativeStatData>;
  readonly eventGenerateInfoNegativeStatDatas: ReadonlyArray<EventGenerateInfoNegativeStatData>;
  readonly eventGenerateInfoPositiveStatData?: Maybe<EventGenerateInfoPositiveStatData>;
  readonly eventGenerateInfoPositiveStatDatas: ReadonlyArray<EventGenerateInfoPositiveStatData>;
  readonly eventResultEntities: ReadonlyArray<EventResultEntity>;
  readonly eventResultEntity?: Maybe<EventResultEntity>;
  readonly fightResultEntities: ReadonlyArray<FightResultEntity>;
  readonly fightResultEntity?: Maybe<FightResultEntity>;
  readonly fighterInfoEntities: ReadonlyArray<FighterInfoEntity>;
  readonly fighterInfoEntity?: Maybe<FighterInfoEntity>;
  readonly fighterTurnResultEntities: ReadonlyArray<FighterTurnResultEntity>;
  readonly fighterTurnResultEntity?: Maybe<FighterTurnResultEntity>;
  readonly firstBossCompletedEntities: ReadonlyArray<FirstBossCompletedEntity>;
  readonly firstBossCompletedEntity?: Maybe<FirstBossCompletedEntity>;
  readonly generalHeroTokenEarned?: Maybe<GeneralHeroTokenEarned>;
  readonly generalHeroTokenEarneds: ReadonlyArray<GeneralHeroTokenEarned>;
  readonly generalTokenomicsEntities: ReadonlyArray<GeneralTokenomicsEntity>;
  readonly generalTokenomicsEntity?: Maybe<GeneralTokenomicsEntity>;
  readonly globalCustomDataEntities: ReadonlyArray<GlobalCustomDataEntity>;
  readonly globalCustomDataEntity?: Maybe<GlobalCustomDataEntity>;
  readonly guildActionEntities: ReadonlyArray<GuildActionEntity>;
  readonly guildActionEntity?: Maybe<GuildActionEntity>;
  readonly guildEntities: ReadonlyArray<GuildEntity>;
  readonly guildEntity?: Maybe<GuildEntity>;
  readonly guildMemberEntities: ReadonlyArray<GuildMemberEntity>;
  readonly guildMemberEntity?: Maybe<GuildMemberEntity>;
  readonly guildReinforcementEntities: ReadonlyArray<GuildReinforcementEntity>;
  readonly guildReinforcementEntity?: Maybe<GuildReinforcementEntity>;
  readonly guildRequestEntities: ReadonlyArray<GuildRequestEntity>;
  readonly guildRequestEntity?: Maybe<GuildRequestEntity>;
  readonly heroAction?: Maybe<HeroAction>;
  readonly heroActions: ReadonlyArray<HeroAction>;
  readonly heroCustomData?: Maybe<HeroCustomData>;
  readonly heroCustomDatas: ReadonlyArray<HeroCustomData>;
  readonly heroEntities: ReadonlyArray<HeroEntity>;
  readonly heroEntity?: Maybe<HeroEntity>;
  readonly heroHistoryEntities: ReadonlyArray<HeroHistoryEntity>;
  readonly heroHistoryEntity?: Maybe<HeroHistoryEntity>;
  readonly heroItemEarned?: Maybe<HeroItemEarned>;
  readonly heroItemEarneds: ReadonlyArray<HeroItemEarned>;
  readonly heroMetaEntities: ReadonlyArray<HeroMetaEntity>;
  readonly heroMetaEntity?: Maybe<HeroMetaEntity>;
  readonly heroStatEntities: ReadonlyArray<HeroStatEntity>;
  readonly heroStatEntity?: Maybe<HeroStatEntity>;
  readonly heroTokenEarned?: Maybe<HeroTokenEarned>;
  readonly heroTokenEarneds: ReadonlyArray<HeroTokenEarned>;
  readonly heroTokensVaultEntities: ReadonlyArray<HeroTokensVaultEntity>;
  readonly heroTokensVaultEntity?: Maybe<HeroTokensVaultEntity>;
  readonly heroTokensVaultHistoryEntities: ReadonlyArray<HeroTokensVaultHistoryEntity>;
  readonly heroTokensVaultHistoryEntity?: Maybe<HeroTokensVaultHistoryEntity>;
  readonly heroTokensVaultStatisticEntities: ReadonlyArray<HeroTokensVaultStatisticEntity>;
  readonly heroTokensVaultStatisticEntity?: Maybe<HeroTokensVaultStatisticEntity>;
  readonly itemActionEntities: ReadonlyArray<ItemActionEntity>;
  readonly itemActionEntity?: Maybe<ItemActionEntity>;
  readonly itemBuffInfoEntities: ReadonlyArray<ItemBuffInfoEntity>;
  readonly itemBuffInfoEntity?: Maybe<ItemBuffInfoEntity>;
  readonly itemConsumableInfoEntities: ReadonlyArray<ItemConsumableInfoEntity>;
  readonly itemConsumableInfoEntity?: Maybe<ItemConsumableInfoEntity>;
  readonly itemEntities: ReadonlyArray<ItemEntity>;
  readonly itemEntity?: Maybe<ItemEntity>;
  readonly itemMagicAttackInfoEntities: ReadonlyArray<ItemMagicAttackInfoEntity>;
  readonly itemMagicAttackInfoEntity?: Maybe<ItemMagicAttackInfoEntity>;
  readonly itemMetaConsumableInfoAttributeEntities: ReadonlyArray<ItemMetaConsumableInfoAttributeEntity>;
  readonly itemMetaConsumableInfoAttributeEntity?: Maybe<ItemMetaConsumableInfoAttributeEntity>;
  readonly itemMetaEntities: ReadonlyArray<ItemMetaEntity>;
  readonly itemMetaEntity?: Maybe<ItemMetaEntity>;
  readonly itemMetaGeneralParamsEntities: ReadonlyArray<ItemMetaGeneralParamsEntity>;
  readonly itemMetaGeneralParamsEntity?: Maybe<ItemMetaGeneralParamsEntity>;
  readonly itemMetaGenerateInfo?: Maybe<ItemMetaGenerateInfo>;
  readonly itemMetaGenerateInfos: ReadonlyArray<ItemMetaGenerateInfo>;
  readonly itemMetaMagicAttackInfoEntities: ReadonlyArray<ItemMetaMagicAttackInfoEntity>;
  readonly itemMetaMagicAttackInfoEntity?: Maybe<ItemMetaMagicAttackInfoEntity>;
  readonly itemMetaParamsEntities: ReadonlyArray<ItemMetaParamsEntity>;
  readonly itemMetaParamsEntity?: Maybe<ItemMetaParamsEntity>;
  readonly itemUnionEntities: ReadonlyArray<ItemUnionEntity>;
  readonly itemUnionEntity?: Maybe<ItemUnionEntity>;
  readonly itemUsedEntities: ReadonlyArray<ItemUsedEntity>;
  readonly itemUsedEntity?: Maybe<ItemUsedEntity>;
  readonly itemsBurntResultEntities: ReadonlyArray<ItemsBurntResultEntity>;
  readonly itemsBurntResultEntity?: Maybe<ItemsBurntResultEntity>;
  readonly lootBoxEntities: ReadonlyArray<LootBoxEntity>;
  readonly lootBoxEntity?: Maybe<LootBoxEntity>;
  readonly lootBoxOpenedHistoryEntities: ReadonlyArray<LootBoxOpenedHistoryEntity>;
  readonly lootBoxOpenedHistoryEntity?: Maybe<LootBoxOpenedHistoryEntity>;
  readonly monsterGenerateAttackInfoData?: Maybe<MonsterGenerateAttackInfoData>;
  readonly monsterGenerateAttackInfoDatas: ReadonlyArray<MonsterGenerateAttackInfoData>;
  readonly monsterGenerateInfoData?: Maybe<MonsterGenerateInfoData>;
  readonly monsterGenerateInfoDatas: ReadonlyArray<MonsterGenerateInfoData>;
  readonly monsterInfoEntities: ReadonlyArray<MonsterInfoEntity>;
  readonly monsterInfoEntity?: Maybe<MonsterInfoEntity>;
  readonly monsterMintItemData?: Maybe<MonsterMintItemData>;
  readonly monsterMintItemDatas: ReadonlyArray<MonsterMintItemData>;
  readonly openedChamberEntities: ReadonlyArray<OpenedChamberEntity>;
  readonly openedChamberEntity?: Maybe<OpenedChamberEntity>;
  readonly pawnshopEntities: ReadonlyArray<PawnshopEntity>;
  readonly pawnshopEntity?: Maybe<PawnshopEntity>;
  readonly pawnshopPositionEntities: ReadonlyArray<PawnshopPositionEntity>;
  readonly pawnshopPositionEntity?: Maybe<PawnshopPositionEntity>;
  readonly pawnshopPositionHistoryEntities: ReadonlyArray<PawnshopPositionHistoryEntity>;
  readonly pawnshopPositionHistoryEntity?: Maybe<PawnshopPositionHistoryEntity>;
  readonly pawnshopPositionItemPriceStatEntities: ReadonlyArray<PawnshopPositionItemPriceStatEntity>;
  readonly pawnshopPositionItemPriceStatEntity?: Maybe<PawnshopPositionItemPriceStatEntity>;
  readonly pawnshopPositionItemStatEntities: ReadonlyArray<PawnshopPositionItemStatEntity>;
  readonly pawnshopPositionItemStatEntity?: Maybe<PawnshopPositionItemStatEntity>;
  readonly pawnshopStatisticEntities: ReadonlyArray<PawnshopStatisticEntity>;
  readonly pawnshopStatisticEntity?: Maybe<PawnshopStatisticEntity>;
  readonly pawnshopUserEntities: ReadonlyArray<PawnshopUserEntity>;
  readonly pawnshopUserEntity?: Maybe<PawnshopUserEntity>;
  readonly pvpFightEntities: ReadonlyArray<PvpFightEntity>;
  readonly pvpFightEntity?: Maybe<PvpFightEntity>;
  readonly pvpFightTurnEntities: ReadonlyArray<PvpFightTurnEntity>;
  readonly pvpFightTurnEntity?: Maybe<PvpFightTurnEntity>;
  readonly pvpGuildEntities: ReadonlyArray<PvpGuildEntity>;
  readonly pvpGuildEntity?: Maybe<PvpGuildEntity>;
  readonly pvpGuildHeroEntities: ReadonlyArray<PvpGuildHeroEntity>;
  readonly pvpGuildHeroEntity?: Maybe<PvpGuildHeroEntity>;
  readonly registeredNameEntities: ReadonlyArray<RegisteredNameEntity>;
  readonly registeredNameEntity?: Maybe<RegisteredNameEntity>;
  readonly reinforcementRewardItemEntities: ReadonlyArray<ReinforcementRewardItemEntity>;
  readonly reinforcementRewardItemEntity?: Maybe<ReinforcementRewardItemEntity>;
  readonly reinforcementRewardItemHistoryEntities: ReadonlyArray<ReinforcementRewardItemHistoryEntity>;
  readonly reinforcementRewardItemHistoryEntity?: Maybe<ReinforcementRewardItemHistoryEntity>;
  readonly reinforcementRewardTokenEntities: ReadonlyArray<ReinforcementRewardTokenEntity>;
  readonly reinforcementRewardTokenEntity?: Maybe<ReinforcementRewardTokenEntity>;
  readonly reinforcementRewardTokenHistoryEntities: ReadonlyArray<ReinforcementRewardTokenHistoryEntity>;
  readonly reinforcementRewardTokenHistoryEntity?: Maybe<ReinforcementRewardTokenHistoryEntity>;
  readonly rewardEntities: ReadonlyArray<RewardEntity>;
  readonly rewardEntity?: Maybe<RewardEntity>;
  readonly rewardPoolEntities: ReadonlyArray<RewardPoolEntity>;
  readonly rewardPoolEntity?: Maybe<RewardPoolEntity>;
  readonly shelterAuctionBidEntities: ReadonlyArray<ShelterAuctionBidEntity>;
  readonly shelterAuctionBidEntity?: Maybe<ShelterAuctionBidEntity>;
  readonly shelterAuctionEntities: ReadonlyArray<ShelterAuctionEntity>;
  readonly shelterAuctionEntity?: Maybe<ShelterAuctionEntity>;
  readonly shelterEntities: ReadonlyArray<ShelterEntity>;
  readonly shelterEntity?: Maybe<ShelterEntity>;
  readonly shelterItemEntities: ReadonlyArray<ShelterItemEntity>;
  readonly shelterItemEntity?: Maybe<ShelterItemEntity>;
  readonly shelterItemLimitEntities: ReadonlyArray<ShelterItemLimitEntity>;
  readonly shelterItemLimitEntity?: Maybe<ShelterItemLimitEntity>;
  readonly statsEntities: ReadonlyArray<StatsEntity>;
  readonly statsEntity?: Maybe<StatsEntity>;
  readonly statsMetaEntities: ReadonlyArray<StatsMetaEntity>;
  readonly statsMetaEntity?: Maybe<StatsMetaEntity>;
  readonly statusesEntities: ReadonlyArray<StatusesEntity>;
  readonly statusesEntity?: Maybe<StatusesEntity>;
  readonly storyEntities: ReadonlyArray<StoryEntity>;
  readonly storyEntity?: Maybe<StoryEntity>;
  readonly storyMetaAnswerAttributeRequirements?: Maybe<StoryMetaAnswerAttributeRequirements>;
  readonly storyMetaAnswerAttributeRequirements_collection: ReadonlyArray<StoryMetaAnswerAttributeRequirements>;
  readonly storyMetaAnswerDataRequirement?: Maybe<StoryMetaAnswerDataRequirement>;
  readonly storyMetaAnswerDataRequirements: ReadonlyArray<StoryMetaAnswerDataRequirement>;
  readonly storyMetaAnswerItemRequirements?: Maybe<StoryMetaAnswerItemRequirements>;
  readonly storyMetaAnswerItemRequirements_collection: ReadonlyArray<StoryMetaAnswerItemRequirements>;
  readonly storyMetaAnswerNextPage?: Maybe<StoryMetaAnswerNextPage>;
  readonly storyMetaAnswerNextPages: ReadonlyArray<StoryMetaAnswerNextPage>;
  readonly storyMetaAnswerTokenRequirements?: Maybe<StoryMetaAnswerTokenRequirements>;
  readonly storyMetaAnswerTokenRequirements_collection: ReadonlyArray<StoryMetaAnswerTokenRequirements>;
  readonly storyMetaAnswers?: Maybe<StoryMetaAnswers>;
  readonly storyMetaAnswers_collection: ReadonlyArray<StoryMetaAnswers>;
  readonly storyMetaHeroCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly storyMetaHeroCustomDatas: ReadonlyArray<StoryMetaHeroCustomData>;
  readonly storyMetaInfo?: Maybe<StoryMetaInfo>;
  readonly storyMetaInfos: ReadonlyArray<StoryMetaInfo>;
  readonly storyMetaObjectsRewrite?: Maybe<StoryMetaObjectsRewrite>;
  readonly storyMetaObjectsRewrites: ReadonlyArray<StoryMetaObjectsRewrite>;
  readonly storyPageEntities: ReadonlyArray<StoryPageEntity>;
  readonly storyPageEntity?: Maybe<StoryPageEntity>;
  readonly storyResultEntities: ReadonlyArray<StoryResultEntity>;
  readonly storyResultEntity?: Maybe<StoryResultEntity>;
  readonly tierEntities: ReadonlyArray<TierEntity>;
  readonly tierEntity?: Maybe<TierEntity>;
  readonly tokenAmountEntities: ReadonlyArray<TokenAmountEntity>;
  readonly tokenAmountEntity?: Maybe<TokenAmountEntity>;
  readonly tokenEntities: ReadonlyArray<TokenEntity>;
  readonly tokenEntity?: Maybe<TokenEntity>;
  readonly tokenTransactionEntities: ReadonlyArray<TokenTransactionEntity>;
  readonly tokenTransactionEntity?: Maybe<TokenTransactionEntity>;
  readonly totalSupplyEntities: ReadonlyArray<TotalSupplyEntity>;
  readonly totalSupplyEntity?: Maybe<TotalSupplyEntity>;
  readonly totalSupplyHistoryEntities: ReadonlyArray<TotalSupplyHistoryEntity>;
  readonly totalSupplyHistoryEntity?: Maybe<TotalSupplyHistoryEntity>;
  readonly totalTxStatisticEntities: ReadonlyArray<TotalTxStatisticEntity>;
  readonly totalTxStatisticEntity?: Maybe<TotalTxStatisticEntity>;
  readonly transactionEntities: ReadonlyArray<TransactionEntity>;
  readonly transactionEntity?: Maybe<TransactionEntity>;
  readonly treasuryEntities: ReadonlyArray<TreasuryEntity>;
  readonly treasuryEntity?: Maybe<TreasuryEntity>;
  readonly treasuryTokenEntities: ReadonlyArray<TreasuryTokenEntity>;
  readonly treasuryTokenEntity?: Maybe<TreasuryTokenEntity>;
  readonly treasuryTokenInfoEntities: ReadonlyArray<TreasuryTokenInfoEntity>;
  readonly treasuryTokenInfoEntity?: Maybe<TreasuryTokenInfoEntity>;
  readonly userBossCompletedEntities: ReadonlyArray<UserBossCompletedEntity>;
  readonly userBossCompletedEntity?: Maybe<UserBossCompletedEntity>;
  readonly userEntities: ReadonlyArray<UserEntity>;
  readonly userEntity?: Maybe<UserEntity>;
  readonly userFameHallEntities: ReadonlyArray<UserFameHallEntity>;
  readonly userFameHallEntity?: Maybe<UserFameHallEntity>;
  readonly userSkipEntities: ReadonlyArray<UserSkipEntity>;
  readonly userSkipEntity?: Maybe<UserSkipEntity>;
  readonly userStatEntities: ReadonlyArray<UserStatEntity>;
  readonly userStatEntity?: Maybe<UserStatEntity>;
  readonly waustatisticEntities: ReadonlyArray<WauStatisticEntity>;
  readonly waustatisticEntity?: Maybe<WauStatisticEntity>;
  readonly weekAirdropRootEntities: ReadonlyArray<WeekAirdropRootEntity>;
  readonly weekAirdropRootEntity?: Maybe<WeekAirdropRootEntity>;
  readonly weekGasAirdropRootEntities: ReadonlyArray<WeekGasAirdropRootEntity>;
  readonly weekGasAirdropRootEntity?: Maybe<WeekGasAirdropRootEntity>;
  readonly weekGasUserAirdropStatEntities: ReadonlyArray<WeekGasUserAirdropStatEntity>;
  readonly weekGasUserAirdropStatEntity?: Maybe<WeekGasUserAirdropStatEntity>;
  readonly weekTotalAirdropEntities: ReadonlyArray<WeekTotalAirdropEntity>;
  readonly weekTotalAirdropEntity?: Maybe<WeekTotalAirdropEntity>;
  readonly weekUserAirdropStatEntities: ReadonlyArray<WeekUserAirdropStatEntity>;
  readonly weekUserAirdropStatEntity?: Maybe<WeekUserAirdropStatEntity>;
};


export type Query_MetaArgs = {
  block?: InputMaybe<Block_Height>;
};


export type QueryAnswerAttributesArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryAnswerAttributes_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AnswerAttributes_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AnswerAttributes_Filter>;
};


export type QueryAnswerBurnRandomItemMetaArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryAnswerBurnRandomItemMetasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AnswerBurnRandomItemMeta_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AnswerBurnRandomItemMeta_Filter>;
};


export type QueryAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AttackInfoEntity_Filter>;
};


export type QueryAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryAttributeGenerateInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryAttributeGenerateInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AttributeGenerateInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AttributeGenerateInfo_Filter>;
};


export type QueryBurnHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<BurnHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<BurnHistoryEntity_Filter>;
};


export type QueryBurnHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryChamberActionResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ChamberActionResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ChamberActionResultEntity_Filter>;
};


export type QueryChamberActionResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryChamberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ChamberEntity_Filter>;
};


export type QueryChamberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryControllableEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ControllableEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ControllableEntity_Filter>;
};


export type QueryControllableEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryControllerEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ControllerEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ControllerEntity_Filter>;
};


export type QueryControllerEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryCoreAttributesEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<CoreAttributesEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<CoreAttributesEntity_Filter>;
};


export type QueryCoreAttributesEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDailyActivityCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DailyActivityCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DailyActivityCompletedEntity_Filter>;
};


export type QueryDailyActivityCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDaustatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DauStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DauStatisticEntity_Filter>;
};


export type QueryDaustatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonChamberMetaArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonChamberMetasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonChamberMeta_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonChamberMeta_Filter>;
};


export type QueryDungeonEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonEntity_Filter>;
};


export type QueryDungeonEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonFactoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonFactoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonFactoryEntity_Filter>;
};


export type QueryDungeonFactoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonLogicEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonLogicEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonLogicEntity_Filter>;
};


export type QueryDungeonLogicEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonRequirements_Filter>;
};


export type QueryDungeonRunCounterEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonRunCounterEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonRunCounterEntity_Filter>;
};


export type QueryDungeonRunCounterEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryDungeonTreasuryTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonTreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonTreasuryTokenEntity_Filter>;
};


export type QueryDungeonTreasuryTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryEventGenerateInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryEventGenerateInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoData_Filter>;
};


export type QueryEventGenerateInfoNegativeStatDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryEventGenerateInfoNegativeStatDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoNegativeStatData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoNegativeStatData_Filter>;
};


export type QueryEventGenerateInfoPositiveStatDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryEventGenerateInfoPositiveStatDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoPositiveStatData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoPositiveStatData_Filter>;
};


export type QueryEventResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventResultEntity_Filter>;
};


export type QueryEventResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryFightResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FightResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FightResultEntity_Filter>;
};


export type QueryFightResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryFighterInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FighterInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FighterInfoEntity_Filter>;
};


export type QueryFighterInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryFighterTurnResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FighterTurnResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FighterTurnResultEntity_Filter>;
};


export type QueryFighterTurnResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryFirstBossCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FirstBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FirstBossCompletedEntity_Filter>;
};


export type QueryFirstBossCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGeneralHeroTokenEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGeneralHeroTokenEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GeneralHeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GeneralHeroTokenEarned_Filter>;
};


export type QueryGeneralTokenomicsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GeneralTokenomicsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GeneralTokenomicsEntity_Filter>;
};


export type QueryGeneralTokenomicsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGlobalCustomDataEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GlobalCustomDataEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GlobalCustomDataEntity_Filter>;
};


export type QueryGlobalCustomDataEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGuildActionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildActionEntity_Filter>;
};


export type QueryGuildActionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGuildEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildEntity_Filter>;
};


export type QueryGuildEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGuildMemberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildMemberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildMemberEntity_Filter>;
};


export type QueryGuildMemberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGuildReinforcementEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildReinforcementEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildReinforcementEntity_Filter>;
};


export type QueryGuildReinforcementEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryGuildRequestEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildRequestEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildRequestEntity_Filter>;
};


export type QueryGuildRequestEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroActionArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroActionsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroAction_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroAction_Filter>;
};


export type QueryHeroCustomDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroCustomDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroCustomData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroCustomData_Filter>;
};


export type QueryHeroEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroEntity_Filter>;
};


export type QueryHeroEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroHistoryEntity_Filter>;
};


export type QueryHeroHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroItemEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroItemEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroItemEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroItemEarned_Filter>;
};


export type QueryHeroMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroMetaEntity_Filter>;
};


export type QueryHeroMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroStatEntity_Filter>;
};


export type QueryHeroStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroTokenEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroTokenEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokenEarned_Filter>;
};


export type QueryHeroTokensVaultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultEntity_Filter>;
};


export type QueryHeroTokensVaultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroTokensVaultHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultHistoryEntity_Filter>;
};


export type QueryHeroTokensVaultHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryHeroTokensVaultStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultStatisticEntity_Filter>;
};


export type QueryHeroTokensVaultStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemActionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemActionEntity_Filter>;
};


export type QueryItemActionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemBuffInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemBuffInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemBuffInfoEntity_Filter>;
};


export type QueryItemBuffInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemConsumableInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemConsumableInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemConsumableInfoEntity_Filter>;
};


export type QueryItemConsumableInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type QueryItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMagicAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMagicAttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMagicAttackInfoEntity_Filter>;
};


export type QueryItemMagicAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaConsumableInfoAttributeEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaConsumableInfoAttributeEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaConsumableInfoAttributeEntity_Filter>;
};


export type QueryItemMetaConsumableInfoAttributeEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaEntity_Filter>;
};


export type QueryItemMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaGeneralParamsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaGeneralParamsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaGeneralParamsEntity_Filter>;
};


export type QueryItemMetaGeneralParamsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaGenerateInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaGenerateInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaGenerateInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaGenerateInfo_Filter>;
};


export type QueryItemMetaMagicAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaMagicAttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaMagicAttackInfoEntity_Filter>;
};


export type QueryItemMetaMagicAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemMetaParamsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaParamsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaParamsEntity_Filter>;
};


export type QueryItemMetaParamsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemUnionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemUnionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemUnionEntity_Filter>;
};


export type QueryItemUnionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemUsedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemUsedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemUsedEntity_Filter>;
};


export type QueryItemUsedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryItemsBurntResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemsBurntResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemsBurntResultEntity_Filter>;
};


export type QueryItemsBurntResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryLootBoxEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<LootBoxEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<LootBoxEntity_Filter>;
};


export type QueryLootBoxEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryLootBoxOpenedHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<LootBoxOpenedHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<LootBoxOpenedHistoryEntity_Filter>;
};


export type QueryLootBoxOpenedHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryMonsterGenerateAttackInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryMonsterGenerateAttackInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterGenerateAttackInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterGenerateAttackInfoData_Filter>;
};


export type QueryMonsterGenerateInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryMonsterGenerateInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterGenerateInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterGenerateInfoData_Filter>;
};


export type QueryMonsterInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterInfoEntity_Filter>;
};


export type QueryMonsterInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryMonsterMintItemDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryMonsterMintItemDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterMintItemData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterMintItemData_Filter>;
};


export type QueryOpenedChamberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<OpenedChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<OpenedChamberEntity_Filter>;
};


export type QueryOpenedChamberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopEntity_Filter>;
};


export type QueryPawnshopEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopPositionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionEntity_Filter>;
};


export type QueryPawnshopPositionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopPositionHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
};


export type QueryPawnshopPositionHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopPositionItemPriceStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemPriceStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>;
};


export type QueryPawnshopPositionItemPriceStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopPositionItemStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionItemStatEntity_Filter>;
};


export type QueryPawnshopPositionItemStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopStatisticEntity_Filter>;
};


export type QueryPawnshopStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPawnshopUserEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopUserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopUserEntity_Filter>;
};


export type QueryPawnshopUserEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPvpFightEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpFightEntity_Filter>;
};


export type QueryPvpFightEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPvpFightTurnEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightTurnEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpFightTurnEntity_Filter>;
};


export type QueryPvpFightTurnEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPvpGuildEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpGuildEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpGuildEntity_Filter>;
};


export type QueryPvpGuildEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryPvpGuildHeroEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpGuildHeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpGuildHeroEntity_Filter>;
};


export type QueryPvpGuildHeroEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryRegisteredNameEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RegisteredNameEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RegisteredNameEntity_Filter>;
};


export type QueryRegisteredNameEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryReinforcementRewardItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardItemEntity_Filter>;
};


export type QueryReinforcementRewardItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryReinforcementRewardItemHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardItemHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardItemHistoryEntity_Filter>;
};


export type QueryReinforcementRewardItemHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryReinforcementRewardTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardTokenEntity_Filter>;
};


export type QueryReinforcementRewardTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryReinforcementRewardTokenHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardTokenHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardTokenHistoryEntity_Filter>;
};


export type QueryReinforcementRewardTokenHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryRewardEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RewardEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RewardEntity_Filter>;
};


export type QueryRewardEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryRewardPoolEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RewardPoolEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RewardPoolEntity_Filter>;
};


export type QueryRewardPoolEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryShelterAuctionBidEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterAuctionBidEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterAuctionBidEntity_Filter>;
};


export type QueryShelterAuctionBidEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryShelterAuctionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterAuctionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterAuctionEntity_Filter>;
};


export type QueryShelterAuctionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryShelterEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterEntity_Filter>;
};


export type QueryShelterEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryShelterItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterItemEntity_Filter>;
};


export type QueryShelterItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryShelterItemLimitEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterItemLimitEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterItemLimitEntity_Filter>;
};


export type QueryShelterItemLimitEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStatsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatsEntity_Filter>;
};


export type QueryStatsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStatsMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatsMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatsMetaEntity_Filter>;
};


export type QueryStatsMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStatusesEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatusesEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatusesEntity_Filter>;
};


export type QueryStatusesEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryEntity_Filter>;
};


export type QueryStoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerAttributeRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerAttributeRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerAttributeRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerAttributeRequirements_Filter>;
};


export type QueryStoryMetaAnswerDataRequirementArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerDataRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerDataRequirement_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerDataRequirement_Filter>;
};


export type QueryStoryMetaAnswerItemRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerItemRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerItemRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerItemRequirements_Filter>;
};


export type QueryStoryMetaAnswerNextPageArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerNextPagesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerNextPage_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerNextPage_Filter>;
};


export type QueryStoryMetaAnswerTokenRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswerTokenRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerTokenRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerTokenRequirements_Filter>;
};


export type QueryStoryMetaAnswersArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaAnswers_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswers_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswers_Filter>;
};


export type QueryStoryMetaHeroCustomDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaHeroCustomDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaHeroCustomData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaHeroCustomData_Filter>;
};


export type QueryStoryMetaInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaInfo_Filter>;
};


export type QueryStoryMetaObjectsRewriteArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryMetaObjectsRewritesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaObjectsRewrite_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaObjectsRewrite_Filter>;
};


export type QueryStoryPageEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryPageEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryPageEntity_Filter>;
};


export type QueryStoryPageEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryStoryResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryResultEntity_Filter>;
};


export type QueryStoryResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTierEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TierEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TierEntity_Filter>;
};


export type QueryTierEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTokenAmountEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenAmountEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenAmountEntity_Filter>;
};


export type QueryTokenAmountEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenEntity_Filter>;
};


export type QueryTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTokenTransactionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenTransactionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenTransactionEntity_Filter>;
};


export type QueryTokenTransactionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTotalSupplyEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalSupplyEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalSupplyEntity_Filter>;
};


export type QueryTotalSupplyEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTotalSupplyHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalSupplyHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalSupplyHistoryEntity_Filter>;
};


export type QueryTotalSupplyHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTotalTxStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalTxStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalTxStatisticEntity_Filter>;
};


export type QueryTotalTxStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTransactionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TransactionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TransactionEntity_Filter>;
};


export type QueryTransactionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTreasuryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryEntity_Filter>;
};


export type QueryTreasuryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTreasuryTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryTokenEntity_Filter>;
};


export type QueryTreasuryTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryTreasuryTokenInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryTokenInfoEntity_Filter>;
};


export type QueryTreasuryTokenInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryUserBossCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserBossCompletedEntity_Filter>;
};


export type QueryUserBossCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryUserEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserEntity_Filter>;
};


export type QueryUserEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryUserFameHallEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserFameHallEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserFameHallEntity_Filter>;
};


export type QueryUserFameHallEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryUserSkipEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserSkipEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserSkipEntity_Filter>;
};


export type QueryUserSkipEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryUserStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserStatEntity_Filter>;
};


export type QueryUserStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWaustatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WauStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WauStatisticEntity_Filter>;
};


export type QueryWaustatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWeekAirdropRootEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekAirdropRootEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekAirdropRootEntity_Filter>;
};


export type QueryWeekAirdropRootEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWeekGasAirdropRootEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekGasAirdropRootEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekGasAirdropRootEntity_Filter>;
};


export type QueryWeekGasAirdropRootEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWeekGasUserAirdropStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekGasUserAirdropStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekGasUserAirdropStatEntity_Filter>;
};


export type QueryWeekGasUserAirdropStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWeekTotalAirdropEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekTotalAirdropEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekTotalAirdropEntity_Filter>;
};


export type QueryWeekTotalAirdropEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type QueryWeekUserAirdropStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekUserAirdropStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekUserAirdropStatEntity_Filter>;
};


export type QueryWeekUserAirdropStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};

export type RegisteredNameEntity = {
  readonly __typename?: 'RegisteredNameEntity';
  readonly controller: ControllerEntity;
  readonly id: Scalars['ID']['output'];
};

export type RegisteredNameEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<RegisteredNameEntity_Filter>>>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<RegisteredNameEntity_Filter>>>;
};

export enum RegisteredNameEntity_OrderBy {
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  Id = 'id'
}

export type ReinforcementRewardItemEntity = {
  readonly __typename?: 'ReinforcementRewardItemEntity';
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
};

export type ReinforcementRewardItemEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardItemEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardItemEntity_Filter>>>;
};

export enum ReinforcementRewardItemEntity_OrderBy {
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri'
}

export type ReinforcementRewardItemHistoryEntity = {
  readonly __typename?: 'ReinforcementRewardItemHistoryEntity';
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly item: ItemEntity;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
  readonly user: UserEntity;
};

export type ReinforcementRewardItemHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardItemHistoryEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardItemHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ReinforcementRewardItemHistoryEntity_OrderBy {
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Item = 'item',
  ItemAugmentationLevel = 'item__augmentationLevel',
  ItemBurned = 'item__burned',
  ItemDurability = 'item__durability',
  ItemDurabilityPercent = 'item__durabilityPercent',
  ItemEquipped = 'item__equipped',
  ItemEquippedSlot = 'item__equippedSlot',
  ItemFragility = 'item__fragility',
  ItemId = 'item__id',
  ItemItemId = 'item__itemId',
  ItemItemSandBoxMode = 'item__itemSandBoxMode',
  ItemRarity = 'item__rarity',
  ItemScore = 'item__score',
  ItemTimestamp = 'item__timestamp',
  ItemUniqUri = 'item__uniqUri',
  Timestamp = 'timestamp',
  Tx = 'tx',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type ReinforcementRewardTokenEntity = {
  readonly __typename?: 'ReinforcementRewardTokenEntity';
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly tokenInfo: TokenAmountEntity;
};

export type ReinforcementRewardTokenEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardTokenEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardTokenEntity_Filter>>>;
  readonly tokenInfo?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly tokenInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tokenInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tokenInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ReinforcementRewardTokenEntity_OrderBy {
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  TokenInfo = 'tokenInfo',
  TokenInfoAmount = 'tokenInfo__amount',
  TokenInfoId = 'tokenInfo__id'
}

export type ReinforcementRewardTokenHistoryEntity = {
  readonly __typename?: 'ReinforcementRewardTokenHistoryEntity';
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tokenInfo: TokenAmountEntity;
  readonly tx: Scalars['String']['output'];
  readonly user: UserEntity;
};

export type ReinforcementRewardTokenHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardTokenHistoryEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ReinforcementRewardTokenHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tokenInfo?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly tokenInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tokenInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tokenInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tokenInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ReinforcementRewardTokenHistoryEntity_OrderBy {
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  Timestamp = 'timestamp',
  TokenInfo = 'tokenInfo',
  TokenInfoAmount = 'tokenInfo__amount',
  TokenInfoId = 'tokenInfo__id',
  Tx = 'tx',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type RewardEntity = {
  readonly __typename?: 'RewardEntity';
  readonly hasRewards: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly reward: Scalars['BigInt']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly token: TokenEntity;
  readonly user: UserEntity;
};

export type RewardEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<RewardEntity_Filter>>>;
  readonly hasRewards?: InputMaybe<Scalars['Boolean']['input']>;
  readonly hasRewards_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly hasRewards_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly hasRewards_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<RewardEntity_Filter>>>;
  readonly reward?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly reward_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly reward_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum RewardEntity_OrderBy {
  HasRewards = 'hasRewards',
  Id = 'id',
  Reward = 'reward',
  Timestamp = 'timestamp',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type RewardPoolEntity = {
  readonly __typename?: 'RewardPoolEntity';
  readonly baseAmount: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly lastChangeTimestamp: Scalars['BigInt']['output'];
};

export type RewardPoolEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<RewardPoolEntity_Filter>>>;
  readonly baseAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly baseAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly baseAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lastChangeTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly lastChangeTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastChangeTimestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<RewardPoolEntity_Filter>>>;
};

export enum RewardPoolEntity_OrderBy {
  BaseAmount = 'baseAmount',
  Id = 'id',
  LastChangeTimestamp = 'lastChangeTimestamp'
}

export type ShelterAuctionBidEntity = {
  readonly __typename?: 'ShelterAuctionBidEntity';
  readonly amount: Scalars['BigInt']['output'];
  readonly auction: ShelterAuctionEntity;
  readonly buyerGuild: GuildEntity;
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
};

export type ShelterAuctionBidEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ShelterAuctionBidEntity_Filter>>>;
  readonly auction?: InputMaybe<Scalars['String']['input']>;
  readonly auction_?: InputMaybe<ShelterAuctionEntity_Filter>;
  readonly auction_contains?: InputMaybe<Scalars['String']['input']>;
  readonly auction_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly auction_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly auction_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly auction_gt?: InputMaybe<Scalars['String']['input']>;
  readonly auction_gte?: InputMaybe<Scalars['String']['input']>;
  readonly auction_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly auction_lt?: InputMaybe<Scalars['String']['input']>;
  readonly auction_lte?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly auction_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly auction_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly auction_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly auction_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_?: InputMaybe<GuildEntity_Filter>;
  readonly buyerGuild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buyerGuild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly buyerGuild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly buyerGuild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ShelterAuctionBidEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum ShelterAuctionBidEntity_OrderBy {
  Amount = 'amount',
  Auction = 'auction',
  AuctionId = 'auction__id',
  AuctionMinPrice = 'auction__minPrice',
  AuctionOpen = 'auction__open',
  AuctionTimestamp = 'auction__timestamp',
  BuyerGuild = 'buyerGuild',
  BuyerGuildBiomeDominationRequest = 'buyerGuild__biomeDominationRequest',
  BuyerGuildDescription = 'buyerGuild__description',
  BuyerGuildEpochWeekRequest = 'buyerGuild__epochWeekRequest',
  BuyerGuildHelperRatio = 'buyerGuild__helperRatio',
  BuyerGuildId = 'buyerGuild__id',
  BuyerGuildLevel = 'buyerGuild__level',
  BuyerGuildName = 'buyerGuild__name',
  BuyerGuildPvpPoints = 'buyerGuild__pvpPoints',
  BuyerGuildRequestDepositAmount = 'buyerGuild__requestDepositAmount',
  BuyerGuildTimestamp = 'buyerGuild__timestamp',
  BuyerGuildUri = 'buyerGuild__uri',
  Id = 'id',
  Timestamp = 'timestamp'
}

export type ShelterAuctionEntity = {
  readonly __typename?: 'ShelterAuctionEntity';
  readonly bids: ReadonlyArray<ShelterAuctionBidEntity>;
  readonly id: Scalars['ID']['output'];
  readonly minPrice: Scalars['BigInt']['output'];
  readonly open: Scalars['Boolean']['output'];
  readonly sellerGuild: GuildEntity;
  readonly shelter: ShelterEntity;
  readonly timestamp: Scalars['BigInt']['output'];
};


export type ShelterAuctionEntityBidsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterAuctionBidEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ShelterAuctionBidEntity_Filter>;
};

export type ShelterAuctionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ShelterAuctionEntity_Filter>>>;
  readonly bids_?: InputMaybe<ShelterAuctionBidEntity_Filter>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly minPrice?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly minPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minPrice_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly open?: InputMaybe<Scalars['Boolean']['input']>;
  readonly open_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly open_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly open_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ShelterAuctionEntity_Filter>>>;
  readonly sellerGuild?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_?: InputMaybe<GuildEntity_Filter>;
  readonly sellerGuild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly sellerGuild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly sellerGuild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly sellerGuild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_?: InputMaybe<ShelterEntity_Filter>;
  readonly shelter_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_lt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_lte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum ShelterAuctionEntity_OrderBy {
  Bids = 'bids',
  Id = 'id',
  MinPrice = 'minPrice',
  Open = 'open',
  SellerGuild = 'sellerGuild',
  SellerGuildBiomeDominationRequest = 'sellerGuild__biomeDominationRequest',
  SellerGuildDescription = 'sellerGuild__description',
  SellerGuildEpochWeekRequest = 'sellerGuild__epochWeekRequest',
  SellerGuildHelperRatio = 'sellerGuild__helperRatio',
  SellerGuildId = 'sellerGuild__id',
  SellerGuildLevel = 'sellerGuild__level',
  SellerGuildName = 'sellerGuild__name',
  SellerGuildPvpPoints = 'sellerGuild__pvpPoints',
  SellerGuildRequestDepositAmount = 'sellerGuild__requestDepositAmount',
  SellerGuildTimestamp = 'sellerGuild__timestamp',
  SellerGuildUri = 'sellerGuild__uri',
  Shelter = 'shelter',
  ShelterBiome = 'shelter__biome',
  ShelterId = 'shelter__id',
  ShelterIndex = 'shelter__index',
  ShelterLevel = 'shelter__level',
  ShelterPrice = 'shelter__price',
  Timestamp = 'timestamp'
}

export type ShelterEntity = {
  readonly __typename?: 'ShelterEntity';
  readonly biome: Scalars['Int']['output'];
  readonly guild?: Maybe<GuildEntity>;
  readonly id: Scalars['ID']['output'];
  readonly index: Scalars['Int']['output'];
  readonly items: ReadonlyArray<ShelterItemEntity>;
  readonly level: Scalars['Int']['output'];
  readonly price: Scalars['BigInt']['output'];
  readonly shelterItemsId: ReadonlyArray<Scalars['String']['output']>;
};


export type ShelterEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ShelterItemEntity_Filter>;
};

export type ShelterEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ShelterEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly index?: InputMaybe<Scalars['Int']['input']>;
  readonly index_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly index_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly index_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly index_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly index_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly index_not?: InputMaybe<Scalars['Int']['input']>;
  readonly index_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly items_?: InputMaybe<ShelterItemEntity_Filter>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ShelterEntity_Filter>>>;
  readonly price?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly price_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly price_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly shelterItemsId?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterItemsId_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterItemsId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterItemsId_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterItemsId_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelterItemsId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum ShelterEntity_OrderBy {
  Biome = 'biome',
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Id = 'id',
  Index = 'index',
  Items = 'items',
  Level = 'level',
  Price = 'price',
  ShelterItemsId = 'shelterItemsId'
}

export type ShelterItemEntity = {
  readonly __typename?: 'ShelterItemEntity';
  readonly id: Scalars['ID']['output'];
  readonly item: ItemMetaEntity;
  readonly maxLimitPerDay: Scalars['Int']['output'];
  readonly pricePvpPoints: Scalars['BigInt']['output'];
  readonly priceToken: Scalars['BigInt']['output'];
  readonly shelter: ShelterEntity;
};

export type ShelterItemEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ShelterItemEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly maxLimitPerDay?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxLimitPerDay_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxLimitPerDay_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ShelterItemEntity_Filter>>>;
  readonly pricePvpPoints?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly pricePvpPoints_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly pricePvpPoints_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly priceToken?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly priceToken_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly priceToken_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly shelter?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_?: InputMaybe<ShelterEntity_Filter>;
  readonly shelter_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_lt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_lte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ShelterItemEntity_OrderBy {
  Id = 'id',
  Item = 'item',
  ItemConsumableActionMask = 'item__consumableActionMask',
  ItemDurability = 'item__durability',
  ItemId = 'item__id',
  ItemIsAttackItem = 'item__isAttackItem',
  ItemIsBuffItem = 'item__isBuffItem',
  ItemIsConsumableItem = 'item__isConsumableItem',
  ItemItemType = 'item__itemType',
  ItemLevel = 'item__level',
  ItemManaCost = 'item__manaCost',
  ItemMetaData = 'item__metaData',
  ItemName = 'item__name',
  ItemRemoved = 'item__removed',
  ItemSymbol = 'item__symbol',
  ItemUri = 'item__uri',
  ItemValid = 'item__valid',
  MaxLimitPerDay = 'maxLimitPerDay',
  PricePvpPoints = 'pricePvpPoints',
  PriceToken = 'priceToken',
  Shelter = 'shelter',
  ShelterBiome = 'shelter__biome',
  ShelterId = 'shelter__id',
  ShelterIndex = 'shelter__index',
  ShelterLevel = 'shelter__level',
  ShelterPrice = 'shelter__price'
}

export type ShelterItemLimitEntity = {
  readonly __typename?: 'ShelterItemLimitEntity';
  readonly count: Scalars['Int']['output'];
  readonly epochDay: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly item: ItemMetaEntity;
  readonly shelter: ShelterEntity;
};

export type ShelterItemLimitEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<ShelterItemLimitEntity_Filter>>>;
  readonly count?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly count_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly epochDay?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly epochDay_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly epochDay_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly item?: InputMaybe<Scalars['String']['input']>;
  readonly item_?: InputMaybe<ItemMetaEntity_Filter>;
  readonly item_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_gt?: InputMaybe<Scalars['String']['input']>;
  readonly item_gte?: InputMaybe<Scalars['String']['input']>;
  readonly item_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_lt?: InputMaybe<Scalars['String']['input']>;
  readonly item_lte?: InputMaybe<Scalars['String']['input']>;
  readonly item_not?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly item_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly item_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<ShelterItemLimitEntity_Filter>>>;
  readonly shelter?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_?: InputMaybe<ShelterEntity_Filter>;
  readonly shelter_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_gte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_lt?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_lte?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly shelter_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly shelter_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum ShelterItemLimitEntity_OrderBy {
  Count = 'count',
  EpochDay = 'epochDay',
  Id = 'id',
  Item = 'item',
  ItemConsumableActionMask = 'item__consumableActionMask',
  ItemDurability = 'item__durability',
  ItemId = 'item__id',
  ItemIsAttackItem = 'item__isAttackItem',
  ItemIsBuffItem = 'item__isBuffItem',
  ItemIsConsumableItem = 'item__isConsumableItem',
  ItemItemType = 'item__itemType',
  ItemLevel = 'item__level',
  ItemManaCost = 'item__manaCost',
  ItemMetaData = 'item__metaData',
  ItemName = 'item__name',
  ItemRemoved = 'item__removed',
  ItemSymbol = 'item__symbol',
  ItemUri = 'item__uri',
  ItemValid = 'item__valid',
  Shelter = 'shelter',
  ShelterBiome = 'shelter__biome',
  ShelterId = 'shelter__id',
  ShelterIndex = 'shelter__index',
  ShelterLevel = 'shelter__level',
  ShelterPrice = 'shelter__price'
}

export type StatsEntity = {
  readonly __typename?: 'StatsEntity';
  readonly experience: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly level: Scalars['Int']['output'];
  readonly life: Scalars['Int']['output'];
  readonly lifeChances: Scalars['Int']['output'];
  readonly mana: Scalars['Int']['output'];
};

export type StatsEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StatsEntity_Filter>>>;
  readonly experience?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not?: InputMaybe<Scalars['Int']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly level?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly level_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not?: InputMaybe<Scalars['Int']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly life?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChances_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lifeChances_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly life_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly life_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly life_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly life_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly life_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly life_not?: InputMaybe<Scalars['Int']['input']>;
  readonly life_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mana?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mana_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_not?: InputMaybe<Scalars['Int']['input']>;
  readonly mana_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StatsEntity_Filter>>>;
};

export enum StatsEntity_OrderBy {
  Experience = 'experience',
  Id = 'id',
  Level = 'level',
  Life = 'life',
  LifeChances = 'lifeChances',
  Mana = 'mana'
}

export type StatsMetaEntity = {
  readonly __typename?: 'StatsMetaEntity';
  readonly experience?: Maybe<Scalars['BigInt']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly level?: Maybe<Scalars['BigInt']['output']>;
  readonly life?: Maybe<Scalars['BigInt']['output']>;
  readonly lifeChances?: Maybe<Scalars['BigInt']['output']>;
  readonly mana?: Maybe<Scalars['BigInt']['output']>;
};

export type StatsMetaEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StatsMetaEntity_Filter>>>;
  readonly experience?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly experience_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly level?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly level_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly level_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly life?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly lifeChances_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lifeChances_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly life_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly life_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly life_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly life_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly life_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly life_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly life_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mana?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly mana_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly mana_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StatsMetaEntity_Filter>>>;
};

export enum StatsMetaEntity_OrderBy {
  Experience = 'experience',
  Id = 'id',
  Level = 'level',
  Life = 'life',
  LifeChances = 'lifeChances',
  Mana = 'mana'
}

export type StatusesEntity = {
  readonly __typename?: 'StatusesEntity';
  readonly burn: Scalars['Boolean']['output'];
  readonly confuse: Scalars['Boolean']['output'];
  readonly curse: Scalars['Boolean']['output'];
  readonly freeze: Scalars['Boolean']['output'];
  readonly gotCriticalHit: Scalars['Boolean']['output'];
  readonly hitBlocked: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly missed: Scalars['Boolean']['output'];
  readonly poison: Scalars['Boolean']['output'];
  readonly stun: Scalars['Boolean']['output'];
};

export type StatusesEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StatusesEntity_Filter>>>;
  readonly burn?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burn_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly burn_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly burn_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly confuse?: InputMaybe<Scalars['Boolean']['input']>;
  readonly confuse_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly confuse_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly confuse_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly curse?: InputMaybe<Scalars['Boolean']['input']>;
  readonly curse_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly curse_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly curse_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly freeze?: InputMaybe<Scalars['Boolean']['input']>;
  readonly freeze_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly freeze_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly freeze_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly gotCriticalHit?: InputMaybe<Scalars['Boolean']['input']>;
  readonly gotCriticalHit_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly gotCriticalHit_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly gotCriticalHit_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly hitBlocked?: InputMaybe<Scalars['Boolean']['input']>;
  readonly hitBlocked_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly hitBlocked_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly hitBlocked_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly missed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly missed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly missed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly missed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StatusesEntity_Filter>>>;
  readonly poison?: InputMaybe<Scalars['Boolean']['input']>;
  readonly poison_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly poison_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly poison_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly stun?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stun_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly stun_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly stun_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum StatusesEntity_OrderBy {
  Burn = 'burn',
  Confuse = 'confuse',
  Curse = 'curse',
  Freeze = 'freeze',
  GotCriticalHit = 'gotCriticalHit',
  HitBlocked = 'hitBlocked',
  Id = 'id',
  Missed = 'missed',
  Poison = 'poison',
  Stun = 'stun'
}

export type StoryEntity = {
  readonly __typename?: 'StoryEntity';
  readonly answerAttributeRequirements?: Maybe<StoryMetaAnswerAttributeRequirements>;
  readonly answerAttributes?: Maybe<AnswerAttributes>;
  readonly answerBurnRandomItemMeta?: Maybe<AnswerBurnRandomItemMeta>;
  readonly answerGlobalCustomDataRequirement?: Maybe<StoryMetaAnswerDataRequirement>;
  readonly answerHeroCustomDataRequirement?: Maybe<StoryMetaAnswerDataRequirement>;
  readonly answerItemRequirements?: Maybe<StoryMetaAnswerItemRequirements>;
  readonly answerNextPage?: Maybe<StoryMetaAnswerNextPage>;
  readonly answerTokenRequirements?: Maybe<StoryMetaAnswerTokenRequirements>;
  readonly answersMeta?: Maybe<StoryMetaAnswers>;
  readonly failGlobalCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly failHeroCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly failInfo?: Maybe<StoryMetaInfo>;
  readonly id: Scalars['ID']['output'];
  readonly minLevel?: Maybe<Scalars['BigInt']['output']>;
  readonly nextObjRewriteMeta?: Maybe<StoryMetaObjectsRewrite>;
  readonly requiredCustomDataIndex: ReadonlyArray<Scalars['Bytes']['output']>;
  readonly requiredCustomDataIsHero: ReadonlyArray<Scalars['Boolean']['output']>;
  readonly requiredCustomDataMaxValue: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly requiredCustomDataMinValue: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly storyId: Scalars['String']['output'];
  readonly successGlobalCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly successHeroCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly successInfo?: Maybe<StoryMetaInfo>;
};

export type StoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryEntity_Filter>>>;
  readonly answerAttributeRequirements?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_?: InputMaybe<StoryMetaAnswerAttributeRequirements_Filter>;
  readonly answerAttributeRequirements_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerAttributeRequirements_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerAttributeRequirements_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributeRequirements_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_?: InputMaybe<AnswerAttributes_Filter>;
  readonly answerAttributes_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerAttributes_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerAttributes_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerAttributes_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_?: InputMaybe<AnswerBurnRandomItemMeta_Filter>;
  readonly answerBurnRandomItemMeta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerBurnRandomItemMeta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerBurnRandomItemMeta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerBurnRandomItemMeta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_?: InputMaybe<StoryMetaAnswerDataRequirement_Filter>;
  readonly answerGlobalCustomDataRequirement_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerGlobalCustomDataRequirement_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerGlobalCustomDataRequirement_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerGlobalCustomDataRequirement_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_?: InputMaybe<StoryMetaAnswerDataRequirement_Filter>;
  readonly answerHeroCustomDataRequirement_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerHeroCustomDataRequirement_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerHeroCustomDataRequirement_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerHeroCustomDataRequirement_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_?: InputMaybe<StoryMetaAnswerItemRequirements_Filter>;
  readonly answerItemRequirements_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerItemRequirements_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerItemRequirements_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerItemRequirements_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_?: InputMaybe<StoryMetaAnswerNextPage_Filter>;
  readonly answerNextPage_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPage_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPage_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerNextPage_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_?: InputMaybe<StoryMetaAnswerTokenRequirements_Filter>;
  readonly answerTokenRequirements_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerTokenRequirements_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerTokenRequirements_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answerTokenRequirements_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_?: InputMaybe<StoryMetaAnswers_Filter>;
  readonly answersMeta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answersMeta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answersMeta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly answersMeta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_?: InputMaybe<StoryMetaHeroCustomData_Filter>;
  readonly failGlobalCustomData_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_gt?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_gte?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failGlobalCustomData_lt?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_lte?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failGlobalCustomData_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failGlobalCustomData_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_?: InputMaybe<StoryMetaHeroCustomData_Filter>;
  readonly failHeroCustomData_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_gt?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_gte?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failHeroCustomData_lt?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_lte?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failHeroCustomData_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failHeroCustomData_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_?: InputMaybe<StoryMetaInfo_Filter>;
  readonly failInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly failInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly failInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly minLevel?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly minLevel_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly minLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly nextObjRewriteMeta?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_?: InputMaybe<StoryMetaObjectsRewrite_Filter>;
  readonly nextObjRewriteMeta_contains?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_gt?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_gte?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjRewriteMeta_lt?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_lte?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjRewriteMeta_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly nextObjRewriteMeta_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryEntity_Filter>>>;
  readonly requiredCustomDataIndex?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIndex_contains?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIndex_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIndex_not?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIndex_not_contains?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIndex_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly requiredCustomDataIsHero?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataIsHero_contains?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataIsHero_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataIsHero_not?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataIsHero_not_contains?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataIsHero_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly requiredCustomDataMaxValue?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMaxValue_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMaxValue_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMaxValue_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMaxValue_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMaxValue_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly requiredCustomDataMinValue_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly storyId?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_contains?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_gt?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_gte?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly storyId_lt?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_lte?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly storyId_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly storyId_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_?: InputMaybe<StoryMetaHeroCustomData_Filter>;
  readonly successGlobalCustomData_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_gt?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_gte?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successGlobalCustomData_lt?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_lte?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successGlobalCustomData_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successGlobalCustomData_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_?: InputMaybe<StoryMetaHeroCustomData_Filter>;
  readonly successHeroCustomData_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_gt?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_gte?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successHeroCustomData_lt?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_lte?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successHeroCustomData_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successHeroCustomData_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_?: InputMaybe<StoryMetaInfo_Filter>;
  readonly successInfo_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_gt?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_gte?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successInfo_lt?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_lte?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly successInfo_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly successInfo_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum StoryEntity_OrderBy {
  AnswerAttributeRequirements = 'answerAttributeRequirements',
  AnswerAttributeRequirementsId = 'answerAttributeRequirements__id',
  AnswerAttributes = 'answerAttributes',
  AnswerAttributesId = 'answerAttributes__id',
  AnswerBurnRandomItemMeta = 'answerBurnRandomItemMeta',
  AnswerBurnRandomItemMetaId = 'answerBurnRandomItemMeta__id',
  AnswerGlobalCustomDataRequirement = 'answerGlobalCustomDataRequirement',
  AnswerGlobalCustomDataRequirementId = 'answerGlobalCustomDataRequirement__id',
  AnswerHeroCustomDataRequirement = 'answerHeroCustomDataRequirement',
  AnswerHeroCustomDataRequirementId = 'answerHeroCustomDataRequirement__id',
  AnswerItemRequirements = 'answerItemRequirements',
  AnswerItemRequirementsId = 'answerItemRequirements__id',
  AnswerNextPage = 'answerNextPage',
  AnswerNextPageId = 'answerNextPage__id',
  AnswerTokenRequirements = 'answerTokenRequirements',
  AnswerTokenRequirementsId = 'answerTokenRequirements__id',
  AnswersMeta = 'answersMeta',
  AnswersMetaId = 'answersMeta__id',
  FailGlobalCustomData = 'failGlobalCustomData',
  FailGlobalCustomDataId = 'failGlobalCustomData__id',
  FailHeroCustomData = 'failHeroCustomData',
  FailHeroCustomDataId = 'failHeroCustomData__id',
  FailInfo = 'failInfo',
  FailInfoId = 'failInfo__id',
  Id = 'id',
  MinLevel = 'minLevel',
  NextObjRewriteMeta = 'nextObjRewriteMeta',
  NextObjRewriteMetaId = 'nextObjRewriteMeta__id',
  RequiredCustomDataIndex = 'requiredCustomDataIndex',
  RequiredCustomDataIsHero = 'requiredCustomDataIsHero',
  RequiredCustomDataMaxValue = 'requiredCustomDataMaxValue',
  RequiredCustomDataMinValue = 'requiredCustomDataMinValue',
  StoryId = 'storyId',
  SuccessGlobalCustomData = 'successGlobalCustomData',
  SuccessGlobalCustomDataId = 'successGlobalCustomData__id',
  SuccessHeroCustomData = 'successHeroCustomData',
  SuccessHeroCustomDataId = 'successHeroCustomData__id',
  SuccessInfo = 'successInfo',
  SuccessInfoId = 'successInfo__id'
}

export type StoryMetaAnswerAttributeRequirements = {
  readonly __typename?: 'StoryMetaAnswerAttributeRequirements';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly cores: ReadonlyArray<Scalars['String']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly ids: ReadonlyArray<Scalars['String']['output']>;
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
  readonly values: ReadonlyArray<Scalars['String']['output']>;
};

export type StoryMetaAnswerAttributeRequirements_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerAttributeRequirements_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly cores?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly cores_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly cores_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly cores_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly cores_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly cores_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly ids_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly ids_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly ids_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly ids_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly ids_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerAttributeRequirements_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly values?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly values_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum StoryMetaAnswerAttributeRequirements_OrderBy {
  AnswerId = 'answerId',
  Cores = 'cores',
  HeroClass = 'heroClass',
  Id = 'id',
  Ids = 'ids',
  PageId = 'pageId',
  Values = 'values'
}

export type StoryMetaAnswerDataRequirement = {
  readonly __typename?: 'StoryMetaAnswerDataRequirement';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly dataIndexes: ReadonlyArray<Scalars['String']['output']>;
  readonly dataValuesMax: ReadonlyArray<Scalars['String']['output']>;
  readonly dataValuesMin: ReadonlyArray<Scalars['String']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly mandatory: ReadonlyArray<Scalars['String']['output']>;
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
};

export type StoryMetaAnswerDataRequirement_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerDataRequirement_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dataIndexes?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMax_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValuesMin_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly mandatory?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mandatory_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mandatory_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mandatory_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mandatory_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mandatory_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerDataRequirement_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum StoryMetaAnswerDataRequirement_OrderBy {
  AnswerId = 'answerId',
  DataIndexes = 'dataIndexes',
  DataValuesMax = 'dataValuesMax',
  DataValuesMin = 'dataValuesMin',
  HeroClass = 'heroClass',
  Id = 'id',
  Mandatory = 'mandatory',
  PageId = 'pageId'
}

export type StoryMetaAnswerItemRequirements = {
  readonly __typename?: 'StoryMetaAnswerItemRequirements';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
  readonly requireItemBurn: ReadonlyArray<Scalars['String']['output']>;
  readonly requireItemEquipped: ReadonlyArray<Scalars['String']['output']>;
  readonly requireItems: ReadonlyArray<Scalars['String']['output']>;
};

export type StoryMetaAnswerItemRequirements_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerItemRequirements_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerItemRequirements_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly requireItemBurn?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemBurn_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemBurn_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemBurn_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemBurn_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemBurn_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItemEquipped_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum StoryMetaAnswerItemRequirements_OrderBy {
  AnswerId = 'answerId',
  HeroClass = 'heroClass',
  Id = 'id',
  PageId = 'pageId',
  RequireItemBurn = 'requireItemBurn',
  RequireItemEquipped = 'requireItemEquipped',
  RequireItems = 'requireItems'
}

export type StoryMetaAnswerNextPage = {
  readonly __typename?: 'StoryMetaAnswerNextPage';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly answerNextPageIds: ReadonlyArray<Scalars['String']['output']>;
  readonly answerResultIds: ReadonlyArray<Scalars['Int']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
};

export type StoryMetaAnswerNextPage_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerNextPage_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerNextPageIds?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPageIds_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPageIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPageIds_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPageIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerNextPageIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly answerResultIds?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerResultIds_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerResultIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerResultIds_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerResultIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerResultIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerNextPage_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum StoryMetaAnswerNextPage_OrderBy {
  AnswerId = 'answerId',
  AnswerNextPageIds = 'answerNextPageIds',
  AnswerResultIds = 'answerResultIds',
  HeroClass = 'heroClass',
  Id = 'id',
  PageId = 'pageId'
}

export type StoryMetaAnswerTokenRequirements = {
  readonly __typename?: 'StoryMetaAnswerTokenRequirements';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
  readonly requireAmount: ReadonlyArray<Scalars['String']['output']>;
  readonly requireToken: ReadonlyArray<Scalars['String']['output']>;
  readonly requireTransfer: ReadonlyArray<Scalars['String']['output']>;
};

export type StoryMetaAnswerTokenRequirements_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerTokenRequirements_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswerTokenRequirements_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly requireAmount?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireAmount_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireAmount_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireAmount_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireAmount_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireAmount_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireToken_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly requireTransfer_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum StoryMetaAnswerTokenRequirements_OrderBy {
  AnswerId = 'answerId',
  HeroClass = 'heroClass',
  Id = 'id',
  PageId = 'pageId',
  RequireAmount = 'requireAmount',
  RequireToken = 'requireToken',
  RequireTransfer = 'requireTransfer'
}

export type StoryMetaAnswers = {
  readonly __typename?: 'StoryMetaAnswers';
  readonly answerHeroClasses: ReadonlyArray<Scalars['Int']['output']>;
  readonly answerIds: ReadonlyArray<Scalars['Int']['output']>;
  readonly answerPageIds: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
};

export type StoryMetaAnswers_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswers_Filter>>>;
  readonly answerHeroClasses?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerHeroClasses_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerHeroClasses_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerHeroClasses_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerHeroClasses_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerHeroClasses_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerPageIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaAnswers_Filter>>>;
};

export enum StoryMetaAnswers_OrderBy {
  AnswerHeroClasses = 'answerHeroClasses',
  AnswerIds = 'answerIds',
  AnswerPageIds = 'answerPageIds',
  Id = 'id'
}

export type StoryMetaHeroCustomData = {
  readonly __typename?: 'StoryMetaHeroCustomData';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly dataIndexes: ReadonlyArray<Scalars['String']['output']>;
  readonly dataValues: ReadonlyArray<Scalars['String']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
};

export type StoryMetaHeroCustomData_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaHeroCustomData_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dataIndexes?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataIndexes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly dataValues_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaHeroCustomData_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum StoryMetaHeroCustomData_OrderBy {
  AnswerId = 'answerId',
  DataIndexes = 'dataIndexes',
  DataValues = 'dataValues',
  HeroClass = 'heroClass',
  Id = 'id',
  PageId = 'pageId'
}

export type StoryMetaInfo = {
  readonly __typename?: 'StoryMetaInfo';
  readonly answerId: ReadonlyArray<Scalars['Int']['output']>;
  readonly attributeIds: ReadonlyArray<Scalars['String']['output']>;
  readonly attributeValues: ReadonlyArray<Scalars['String']['output']>;
  readonly damage: ReadonlyArray<Scalars['Int']['output']>;
  readonly experience: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly heal: ReadonlyArray<Scalars['Int']['output']>;
  readonly heroClass: ReadonlyArray<Scalars['Int']['output']>;
  readonly id: Scalars['ID']['output'];
  readonly lifeChancesRecovered: ReadonlyArray<Scalars['Int']['output']>;
  readonly manaConsumed: ReadonlyArray<Scalars['Int']['output']>;
  readonly manaRegen: ReadonlyArray<Scalars['Int']['output']>;
  readonly mintItems: ReadonlyArray<Scalars['String']['output']>;
  readonly mintItemsChances: ReadonlyArray<Scalars['String']['output']>;
  readonly pageId: ReadonlyArray<Scalars['Int']['output']>;
};

export type StoryMetaInfo_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaInfo_Filter>>>;
  readonly answerId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly answerId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributeIds?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeIds_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeIds_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly attributeValues_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly damage?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly damage_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly experience?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly experience_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heal?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heal_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroClass_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lifeChancesRecovered?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lifeChancesRecovered_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaConsumed_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly manaRegen_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly mintItems?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItemsChances_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly mintItems_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaInfo_Filter>>>;
  readonly pageId?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pageId_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum StoryMetaInfo_OrderBy {
  AnswerId = 'answerId',
  AttributeIds = 'attributeIds',
  AttributeValues = 'attributeValues',
  Damage = 'damage',
  Experience = 'experience',
  Heal = 'heal',
  HeroClass = 'heroClass',
  Id = 'id',
  LifeChancesRecovered = 'lifeChancesRecovered',
  ManaConsumed = 'manaConsumed',
  ManaRegen = 'manaRegen',
  MintItems = 'mintItems',
  MintItemsChances = 'mintItemsChances',
  PageId = 'pageId'
}

export type StoryMetaObjectsRewrite = {
  readonly __typename?: 'StoryMetaObjectsRewrite';
  readonly id: Scalars['ID']['output'];
  readonly nextObjHeroClasses: ReadonlyArray<Scalars['Int']['output']>;
  readonly nextObjIds: ReadonlyArray<Scalars['String']['output']>;
  readonly nextObjPageIds: ReadonlyArray<Scalars['Int']['output']>;
};

export type StoryMetaObjectsRewrite_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaObjectsRewrite_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly nextObjHeroClasses?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjHeroClasses_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjHeroClasses_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjHeroClasses_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjHeroClasses_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjHeroClasses_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjIds?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjIds_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjIds_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly nextObjPageIds?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjPageIds_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjPageIds_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjPageIds_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjPageIds_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly nextObjPageIds_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryMetaObjectsRewrite_Filter>>>;
};

export enum StoryMetaObjectsRewrite_OrderBy {
  Id = 'id',
  NextObjHeroClasses = 'nextObjHeroClasses',
  NextObjIds = 'nextObjIds',
  NextObjPageIds = 'nextObjPageIds'
}

export type StoryPageEntity = {
  readonly __typename?: 'StoryPageEntity';
  readonly chamber: ChamberEntity;
  readonly createdAtBlock: Scalars['BigInt']['output'];
  readonly heroAdr: Scalars['String']['output'];
  readonly heroId: Scalars['Int']['output'];
  readonly heroPage: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly openChamber: OpenedChamberEntity;
  readonly storyId: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
};

export type StoryPageEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryPageEntity_Filter>>>;
  readonly chamber?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_?: InputMaybe<ChamberEntity_Filter>;
  readonly chamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly chamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly chamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly createdAtBlock?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly createdAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heroAdr?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_gt?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_gte?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroAdr_lt?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_lte?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly heroAdr_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly heroAdr_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroId?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroPage?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroPage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroPage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly openChamber?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_?: InputMaybe<OpenedChamberEntity_Filter>;
  readonly openChamber_contains?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_gt?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_gte?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly openChamber_lt?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_lte?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly openChamber_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly openChamber_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryPageEntity_Filter>>>;
  readonly storyId?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly storyId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum StoryPageEntity_OrderBy {
  Chamber = 'chamber',
  ChamberBiome = 'chamber__biome',
  ChamberChamberName = 'chamber__chamberName',
  ChamberChamberSymbol = 'chamber__chamberSymbol',
  ChamberChamberType = 'chamber__chamberType',
  ChamberId = 'chamber__id',
  ChamberIsBattle = 'chamber__isBattle',
  ChamberIsEvent = 'chamber__isEvent',
  ChamberIsStory = 'chamber__isStory',
  ChamberUri = 'chamber__uri',
  ChamberValid = 'chamber__valid',
  CreatedAtBlock = 'createdAtBlock',
  HeroAdr = 'heroAdr',
  HeroId = 'heroId',
  HeroPage = 'heroPage',
  Id = 'id',
  OpenChamber = 'openChamber',
  OpenChamberCompleted = 'openChamber__completed',
  OpenChamberHeroAdr = 'openChamber__heroAdr',
  OpenChamberHeroId = 'openChamber__heroId',
  OpenChamberId = 'openChamber__id',
  OpenChamberIteration = 'openChamber__iteration',
  OpenChamberStage = 'openChamber__stage',
  OpenChamberTimestamp = 'openChamber__timestamp',
  OpenChamberTx = 'openChamber__tx',
  StoryId = 'storyId',
  Timestamp = 'timestamp',
  Tx = 'tx'
}

export type StoryResultEntity = {
  readonly __typename?: 'StoryResultEntity';
  readonly attributes: ReadonlyArray<Scalars['Int']['output']>;
  readonly dungeonId: Scalars['Int']['output'];
  readonly hero: Scalars['String']['output'];
  readonly heroId: Scalars['BigDecimal']['output'];
  readonly id: Scalars['ID']['output'];
  readonly iteration: Scalars['Int']['output'];
  readonly objectId: Scalars['Int']['output'];
  readonly result: ChamberActionResultEntity;
  readonly salt: Scalars['Int']['output'];
  readonly stage: Scalars['Int']['output'];
  readonly tx: Scalars['String']['output'];
};

export type StoryResultEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<StoryResultEntity_Filter>>>;
  readonly attributes?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributes_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributes_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributes_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributes_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly attributes_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeonId?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly dungeonId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly dungeonId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly heroId?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly heroId_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly heroId_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly iteration?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly iteration_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_not?: InputMaybe<Scalars['Int']['input']>;
  readonly iteration_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly objectId?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly objectId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly objectId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<StoryResultEntity_Filter>>>;
  readonly result?: InputMaybe<Scalars['String']['input']>;
  readonly result_?: InputMaybe<ChamberActionResultEntity_Filter>;
  readonly result_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_gt?: InputMaybe<Scalars['String']['input']>;
  readonly result_gte?: InputMaybe<Scalars['String']['input']>;
  readonly result_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_lt?: InputMaybe<Scalars['String']['input']>;
  readonly result_lte?: InputMaybe<Scalars['String']['input']>;
  readonly result_not?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly result_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly result_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly salt?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly salt_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_not?: InputMaybe<Scalars['Int']['input']>;
  readonly salt_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stage?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly stage_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_not?: InputMaybe<Scalars['Int']['input']>;
  readonly stage_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum StoryResultEntity_OrderBy {
  Attributes = 'attributes',
  DungeonId = 'dungeonId',
  Hero = 'hero',
  HeroId = 'heroId',
  Id = 'id',
  Iteration = 'iteration',
  ObjectId = 'objectId',
  Result = 'result',
  ResultCompleted = 'result__completed',
  ResultDamage = 'result__damage',
  ResultData = 'result__data',
  ResultExperience = 'result__experience',
  ResultHeal = 'result__heal',
  ResultId = 'result__id',
  ResultKill = 'result__kill',
  ResultLifeChancesRecovered = 'result__lifeChancesRecovered',
  ResultManaConsumed = 'result__manaConsumed',
  ResultManaRegen = 'result__manaRegen',
  ResultTurn = 'result__turn',
  ResultTx = 'result__tx',
  Salt = 'salt',
  Stage = 'stage',
  Tx = 'tx'
}

export type Subscription = {
  readonly __typename?: 'Subscription';
  /** Access to subgraph metadata */
  readonly _meta?: Maybe<_Meta_>;
  readonly answerAttributes?: Maybe<AnswerAttributes>;
  readonly answerAttributes_collection: ReadonlyArray<AnswerAttributes>;
  readonly answerBurnRandomItemMeta?: Maybe<AnswerBurnRandomItemMeta>;
  readonly answerBurnRandomItemMetas: ReadonlyArray<AnswerBurnRandomItemMeta>;
  readonly attackInfoEntities: ReadonlyArray<AttackInfoEntity>;
  readonly attackInfoEntity?: Maybe<AttackInfoEntity>;
  readonly attributeGenerateInfo?: Maybe<AttributeGenerateInfo>;
  readonly attributeGenerateInfos: ReadonlyArray<AttributeGenerateInfo>;
  readonly burnHistoryEntities: ReadonlyArray<BurnHistoryEntity>;
  readonly burnHistoryEntity?: Maybe<BurnHistoryEntity>;
  readonly chamberActionResultEntities: ReadonlyArray<ChamberActionResultEntity>;
  readonly chamberActionResultEntity?: Maybe<ChamberActionResultEntity>;
  readonly chamberEntities: ReadonlyArray<ChamberEntity>;
  readonly chamberEntity?: Maybe<ChamberEntity>;
  readonly controllableEntities: ReadonlyArray<ControllableEntity>;
  readonly controllableEntity?: Maybe<ControllableEntity>;
  readonly controllerEntities: ReadonlyArray<ControllerEntity>;
  readonly controllerEntity?: Maybe<ControllerEntity>;
  readonly coreAttributesEntities: ReadonlyArray<CoreAttributesEntity>;
  readonly coreAttributesEntity?: Maybe<CoreAttributesEntity>;
  readonly dailyActivityCompletedEntities: ReadonlyArray<DailyActivityCompletedEntity>;
  readonly dailyActivityCompletedEntity?: Maybe<DailyActivityCompletedEntity>;
  readonly daustatisticEntities: ReadonlyArray<DauStatisticEntity>;
  readonly daustatisticEntity?: Maybe<DauStatisticEntity>;
  readonly dungeonChamberMeta?: Maybe<DungeonChamberMeta>;
  readonly dungeonChamberMetas: ReadonlyArray<DungeonChamberMeta>;
  readonly dungeonEntities: ReadonlyArray<DungeonEntity>;
  readonly dungeonEntity?: Maybe<DungeonEntity>;
  readonly dungeonFactoryEntities: ReadonlyArray<DungeonFactoryEntity>;
  readonly dungeonFactoryEntity?: Maybe<DungeonFactoryEntity>;
  readonly dungeonLogicEntities: ReadonlyArray<DungeonLogicEntity>;
  readonly dungeonLogicEntity?: Maybe<DungeonLogicEntity>;
  readonly dungeonRequirements?: Maybe<DungeonRequirements>;
  readonly dungeonRequirements_collection: ReadonlyArray<DungeonRequirements>;
  readonly dungeonRunCounterEntities: ReadonlyArray<DungeonRunCounterEntity>;
  readonly dungeonRunCounterEntity?: Maybe<DungeonRunCounterEntity>;
  readonly dungeonTreasuryTokenEntities: ReadonlyArray<DungeonTreasuryTokenEntity>;
  readonly dungeonTreasuryTokenEntity?: Maybe<DungeonTreasuryTokenEntity>;
  readonly eventGenerateInfoData?: Maybe<EventGenerateInfoData>;
  readonly eventGenerateInfoDatas: ReadonlyArray<EventGenerateInfoData>;
  readonly eventGenerateInfoNegativeStatData?: Maybe<EventGenerateInfoNegativeStatData>;
  readonly eventGenerateInfoNegativeStatDatas: ReadonlyArray<EventGenerateInfoNegativeStatData>;
  readonly eventGenerateInfoPositiveStatData?: Maybe<EventGenerateInfoPositiveStatData>;
  readonly eventGenerateInfoPositiveStatDatas: ReadonlyArray<EventGenerateInfoPositiveStatData>;
  readonly eventResultEntities: ReadonlyArray<EventResultEntity>;
  readonly eventResultEntity?: Maybe<EventResultEntity>;
  readonly fightResultEntities: ReadonlyArray<FightResultEntity>;
  readonly fightResultEntity?: Maybe<FightResultEntity>;
  readonly fighterInfoEntities: ReadonlyArray<FighterInfoEntity>;
  readonly fighterInfoEntity?: Maybe<FighterInfoEntity>;
  readonly fighterTurnResultEntities: ReadonlyArray<FighterTurnResultEntity>;
  readonly fighterTurnResultEntity?: Maybe<FighterTurnResultEntity>;
  readonly firstBossCompletedEntities: ReadonlyArray<FirstBossCompletedEntity>;
  readonly firstBossCompletedEntity?: Maybe<FirstBossCompletedEntity>;
  readonly generalHeroTokenEarned?: Maybe<GeneralHeroTokenEarned>;
  readonly generalHeroTokenEarneds: ReadonlyArray<GeneralHeroTokenEarned>;
  readonly generalTokenomicsEntities: ReadonlyArray<GeneralTokenomicsEntity>;
  readonly generalTokenomicsEntity?: Maybe<GeneralTokenomicsEntity>;
  readonly globalCustomDataEntities: ReadonlyArray<GlobalCustomDataEntity>;
  readonly globalCustomDataEntity?: Maybe<GlobalCustomDataEntity>;
  readonly guildActionEntities: ReadonlyArray<GuildActionEntity>;
  readonly guildActionEntity?: Maybe<GuildActionEntity>;
  readonly guildEntities: ReadonlyArray<GuildEntity>;
  readonly guildEntity?: Maybe<GuildEntity>;
  readonly guildMemberEntities: ReadonlyArray<GuildMemberEntity>;
  readonly guildMemberEntity?: Maybe<GuildMemberEntity>;
  readonly guildReinforcementEntities: ReadonlyArray<GuildReinforcementEntity>;
  readonly guildReinforcementEntity?: Maybe<GuildReinforcementEntity>;
  readonly guildRequestEntities: ReadonlyArray<GuildRequestEntity>;
  readonly guildRequestEntity?: Maybe<GuildRequestEntity>;
  readonly heroAction?: Maybe<HeroAction>;
  readonly heroActions: ReadonlyArray<HeroAction>;
  readonly heroCustomData?: Maybe<HeroCustomData>;
  readonly heroCustomDatas: ReadonlyArray<HeroCustomData>;
  readonly heroEntities: ReadonlyArray<HeroEntity>;
  readonly heroEntity?: Maybe<HeroEntity>;
  readonly heroHistoryEntities: ReadonlyArray<HeroHistoryEntity>;
  readonly heroHistoryEntity?: Maybe<HeroHistoryEntity>;
  readonly heroItemEarned?: Maybe<HeroItemEarned>;
  readonly heroItemEarneds: ReadonlyArray<HeroItemEarned>;
  readonly heroMetaEntities: ReadonlyArray<HeroMetaEntity>;
  readonly heroMetaEntity?: Maybe<HeroMetaEntity>;
  readonly heroStatEntities: ReadonlyArray<HeroStatEntity>;
  readonly heroStatEntity?: Maybe<HeroStatEntity>;
  readonly heroTokenEarned?: Maybe<HeroTokenEarned>;
  readonly heroTokenEarneds: ReadonlyArray<HeroTokenEarned>;
  readonly heroTokensVaultEntities: ReadonlyArray<HeroTokensVaultEntity>;
  readonly heroTokensVaultEntity?: Maybe<HeroTokensVaultEntity>;
  readonly heroTokensVaultHistoryEntities: ReadonlyArray<HeroTokensVaultHistoryEntity>;
  readonly heroTokensVaultHistoryEntity?: Maybe<HeroTokensVaultHistoryEntity>;
  readonly heroTokensVaultStatisticEntities: ReadonlyArray<HeroTokensVaultStatisticEntity>;
  readonly heroTokensVaultStatisticEntity?: Maybe<HeroTokensVaultStatisticEntity>;
  readonly itemActionEntities: ReadonlyArray<ItemActionEntity>;
  readonly itemActionEntity?: Maybe<ItemActionEntity>;
  readonly itemBuffInfoEntities: ReadonlyArray<ItemBuffInfoEntity>;
  readonly itemBuffInfoEntity?: Maybe<ItemBuffInfoEntity>;
  readonly itemConsumableInfoEntities: ReadonlyArray<ItemConsumableInfoEntity>;
  readonly itemConsumableInfoEntity?: Maybe<ItemConsumableInfoEntity>;
  readonly itemEntities: ReadonlyArray<ItemEntity>;
  readonly itemEntity?: Maybe<ItemEntity>;
  readonly itemMagicAttackInfoEntities: ReadonlyArray<ItemMagicAttackInfoEntity>;
  readonly itemMagicAttackInfoEntity?: Maybe<ItemMagicAttackInfoEntity>;
  readonly itemMetaConsumableInfoAttributeEntities: ReadonlyArray<ItemMetaConsumableInfoAttributeEntity>;
  readonly itemMetaConsumableInfoAttributeEntity?: Maybe<ItemMetaConsumableInfoAttributeEntity>;
  readonly itemMetaEntities: ReadonlyArray<ItemMetaEntity>;
  readonly itemMetaEntity?: Maybe<ItemMetaEntity>;
  readonly itemMetaGeneralParamsEntities: ReadonlyArray<ItemMetaGeneralParamsEntity>;
  readonly itemMetaGeneralParamsEntity?: Maybe<ItemMetaGeneralParamsEntity>;
  readonly itemMetaGenerateInfo?: Maybe<ItemMetaGenerateInfo>;
  readonly itemMetaGenerateInfos: ReadonlyArray<ItemMetaGenerateInfo>;
  readonly itemMetaMagicAttackInfoEntities: ReadonlyArray<ItemMetaMagicAttackInfoEntity>;
  readonly itemMetaMagicAttackInfoEntity?: Maybe<ItemMetaMagicAttackInfoEntity>;
  readonly itemMetaParamsEntities: ReadonlyArray<ItemMetaParamsEntity>;
  readonly itemMetaParamsEntity?: Maybe<ItemMetaParamsEntity>;
  readonly itemUnionEntities: ReadonlyArray<ItemUnionEntity>;
  readonly itemUnionEntity?: Maybe<ItemUnionEntity>;
  readonly itemUsedEntities: ReadonlyArray<ItemUsedEntity>;
  readonly itemUsedEntity?: Maybe<ItemUsedEntity>;
  readonly itemsBurntResultEntities: ReadonlyArray<ItemsBurntResultEntity>;
  readonly itemsBurntResultEntity?: Maybe<ItemsBurntResultEntity>;
  readonly lootBoxEntities: ReadonlyArray<LootBoxEntity>;
  readonly lootBoxEntity?: Maybe<LootBoxEntity>;
  readonly lootBoxOpenedHistoryEntities: ReadonlyArray<LootBoxOpenedHistoryEntity>;
  readonly lootBoxOpenedHistoryEntity?: Maybe<LootBoxOpenedHistoryEntity>;
  readonly monsterGenerateAttackInfoData?: Maybe<MonsterGenerateAttackInfoData>;
  readonly monsterGenerateAttackInfoDatas: ReadonlyArray<MonsterGenerateAttackInfoData>;
  readonly monsterGenerateInfoData?: Maybe<MonsterGenerateInfoData>;
  readonly monsterGenerateInfoDatas: ReadonlyArray<MonsterGenerateInfoData>;
  readonly monsterInfoEntities: ReadonlyArray<MonsterInfoEntity>;
  readonly monsterInfoEntity?: Maybe<MonsterInfoEntity>;
  readonly monsterMintItemData?: Maybe<MonsterMintItemData>;
  readonly monsterMintItemDatas: ReadonlyArray<MonsterMintItemData>;
  readonly openedChamberEntities: ReadonlyArray<OpenedChamberEntity>;
  readonly openedChamberEntity?: Maybe<OpenedChamberEntity>;
  readonly pawnshopEntities: ReadonlyArray<PawnshopEntity>;
  readonly pawnshopEntity?: Maybe<PawnshopEntity>;
  readonly pawnshopPositionEntities: ReadonlyArray<PawnshopPositionEntity>;
  readonly pawnshopPositionEntity?: Maybe<PawnshopPositionEntity>;
  readonly pawnshopPositionHistoryEntities: ReadonlyArray<PawnshopPositionHistoryEntity>;
  readonly pawnshopPositionHistoryEntity?: Maybe<PawnshopPositionHistoryEntity>;
  readonly pawnshopPositionItemPriceStatEntities: ReadonlyArray<PawnshopPositionItemPriceStatEntity>;
  readonly pawnshopPositionItemPriceStatEntity?: Maybe<PawnshopPositionItemPriceStatEntity>;
  readonly pawnshopPositionItemStatEntities: ReadonlyArray<PawnshopPositionItemStatEntity>;
  readonly pawnshopPositionItemStatEntity?: Maybe<PawnshopPositionItemStatEntity>;
  readonly pawnshopStatisticEntities: ReadonlyArray<PawnshopStatisticEntity>;
  readonly pawnshopStatisticEntity?: Maybe<PawnshopStatisticEntity>;
  readonly pawnshopUserEntities: ReadonlyArray<PawnshopUserEntity>;
  readonly pawnshopUserEntity?: Maybe<PawnshopUserEntity>;
  readonly pvpFightEntities: ReadonlyArray<PvpFightEntity>;
  readonly pvpFightEntity?: Maybe<PvpFightEntity>;
  readonly pvpFightTurnEntities: ReadonlyArray<PvpFightTurnEntity>;
  readonly pvpFightTurnEntity?: Maybe<PvpFightTurnEntity>;
  readonly pvpGuildEntities: ReadonlyArray<PvpGuildEntity>;
  readonly pvpGuildEntity?: Maybe<PvpGuildEntity>;
  readonly pvpGuildHeroEntities: ReadonlyArray<PvpGuildHeroEntity>;
  readonly pvpGuildHeroEntity?: Maybe<PvpGuildHeroEntity>;
  readonly registeredNameEntities: ReadonlyArray<RegisteredNameEntity>;
  readonly registeredNameEntity?: Maybe<RegisteredNameEntity>;
  readonly reinforcementRewardItemEntities: ReadonlyArray<ReinforcementRewardItemEntity>;
  readonly reinforcementRewardItemEntity?: Maybe<ReinforcementRewardItemEntity>;
  readonly reinforcementRewardItemHistoryEntities: ReadonlyArray<ReinforcementRewardItemHistoryEntity>;
  readonly reinforcementRewardItemHistoryEntity?: Maybe<ReinforcementRewardItemHistoryEntity>;
  readonly reinforcementRewardTokenEntities: ReadonlyArray<ReinforcementRewardTokenEntity>;
  readonly reinforcementRewardTokenEntity?: Maybe<ReinforcementRewardTokenEntity>;
  readonly reinforcementRewardTokenHistoryEntities: ReadonlyArray<ReinforcementRewardTokenHistoryEntity>;
  readonly reinforcementRewardTokenHistoryEntity?: Maybe<ReinforcementRewardTokenHistoryEntity>;
  readonly rewardEntities: ReadonlyArray<RewardEntity>;
  readonly rewardEntity?: Maybe<RewardEntity>;
  readonly rewardPoolEntities: ReadonlyArray<RewardPoolEntity>;
  readonly rewardPoolEntity?: Maybe<RewardPoolEntity>;
  readonly shelterAuctionBidEntities: ReadonlyArray<ShelterAuctionBidEntity>;
  readonly shelterAuctionBidEntity?: Maybe<ShelterAuctionBidEntity>;
  readonly shelterAuctionEntities: ReadonlyArray<ShelterAuctionEntity>;
  readonly shelterAuctionEntity?: Maybe<ShelterAuctionEntity>;
  readonly shelterEntities: ReadonlyArray<ShelterEntity>;
  readonly shelterEntity?: Maybe<ShelterEntity>;
  readonly shelterItemEntities: ReadonlyArray<ShelterItemEntity>;
  readonly shelterItemEntity?: Maybe<ShelterItemEntity>;
  readonly shelterItemLimitEntities: ReadonlyArray<ShelterItemLimitEntity>;
  readonly shelterItemLimitEntity?: Maybe<ShelterItemLimitEntity>;
  readonly statsEntities: ReadonlyArray<StatsEntity>;
  readonly statsEntity?: Maybe<StatsEntity>;
  readonly statsMetaEntities: ReadonlyArray<StatsMetaEntity>;
  readonly statsMetaEntity?: Maybe<StatsMetaEntity>;
  readonly statusesEntities: ReadonlyArray<StatusesEntity>;
  readonly statusesEntity?: Maybe<StatusesEntity>;
  readonly storyEntities: ReadonlyArray<StoryEntity>;
  readonly storyEntity?: Maybe<StoryEntity>;
  readonly storyMetaAnswerAttributeRequirements?: Maybe<StoryMetaAnswerAttributeRequirements>;
  readonly storyMetaAnswerAttributeRequirements_collection: ReadonlyArray<StoryMetaAnswerAttributeRequirements>;
  readonly storyMetaAnswerDataRequirement?: Maybe<StoryMetaAnswerDataRequirement>;
  readonly storyMetaAnswerDataRequirements: ReadonlyArray<StoryMetaAnswerDataRequirement>;
  readonly storyMetaAnswerItemRequirements?: Maybe<StoryMetaAnswerItemRequirements>;
  readonly storyMetaAnswerItemRequirements_collection: ReadonlyArray<StoryMetaAnswerItemRequirements>;
  readonly storyMetaAnswerNextPage?: Maybe<StoryMetaAnswerNextPage>;
  readonly storyMetaAnswerNextPages: ReadonlyArray<StoryMetaAnswerNextPage>;
  readonly storyMetaAnswerTokenRequirements?: Maybe<StoryMetaAnswerTokenRequirements>;
  readonly storyMetaAnswerTokenRequirements_collection: ReadonlyArray<StoryMetaAnswerTokenRequirements>;
  readonly storyMetaAnswers?: Maybe<StoryMetaAnswers>;
  readonly storyMetaAnswers_collection: ReadonlyArray<StoryMetaAnswers>;
  readonly storyMetaHeroCustomData?: Maybe<StoryMetaHeroCustomData>;
  readonly storyMetaHeroCustomDatas: ReadonlyArray<StoryMetaHeroCustomData>;
  readonly storyMetaInfo?: Maybe<StoryMetaInfo>;
  readonly storyMetaInfos: ReadonlyArray<StoryMetaInfo>;
  readonly storyMetaObjectsRewrite?: Maybe<StoryMetaObjectsRewrite>;
  readonly storyMetaObjectsRewrites: ReadonlyArray<StoryMetaObjectsRewrite>;
  readonly storyPageEntities: ReadonlyArray<StoryPageEntity>;
  readonly storyPageEntity?: Maybe<StoryPageEntity>;
  readonly storyResultEntities: ReadonlyArray<StoryResultEntity>;
  readonly storyResultEntity?: Maybe<StoryResultEntity>;
  readonly tierEntities: ReadonlyArray<TierEntity>;
  readonly tierEntity?: Maybe<TierEntity>;
  readonly tokenAmountEntities: ReadonlyArray<TokenAmountEntity>;
  readonly tokenAmountEntity?: Maybe<TokenAmountEntity>;
  readonly tokenEntities: ReadonlyArray<TokenEntity>;
  readonly tokenEntity?: Maybe<TokenEntity>;
  readonly tokenTransactionEntities: ReadonlyArray<TokenTransactionEntity>;
  readonly tokenTransactionEntity?: Maybe<TokenTransactionEntity>;
  readonly totalSupplyEntities: ReadonlyArray<TotalSupplyEntity>;
  readonly totalSupplyEntity?: Maybe<TotalSupplyEntity>;
  readonly totalSupplyHistoryEntities: ReadonlyArray<TotalSupplyHistoryEntity>;
  readonly totalSupplyHistoryEntity?: Maybe<TotalSupplyHistoryEntity>;
  readonly totalTxStatisticEntities: ReadonlyArray<TotalTxStatisticEntity>;
  readonly totalTxStatisticEntity?: Maybe<TotalTxStatisticEntity>;
  readonly transactionEntities: ReadonlyArray<TransactionEntity>;
  readonly transactionEntity?: Maybe<TransactionEntity>;
  readonly treasuryEntities: ReadonlyArray<TreasuryEntity>;
  readonly treasuryEntity?: Maybe<TreasuryEntity>;
  readonly treasuryTokenEntities: ReadonlyArray<TreasuryTokenEntity>;
  readonly treasuryTokenEntity?: Maybe<TreasuryTokenEntity>;
  readonly treasuryTokenInfoEntities: ReadonlyArray<TreasuryTokenInfoEntity>;
  readonly treasuryTokenInfoEntity?: Maybe<TreasuryTokenInfoEntity>;
  readonly userBossCompletedEntities: ReadonlyArray<UserBossCompletedEntity>;
  readonly userBossCompletedEntity?: Maybe<UserBossCompletedEntity>;
  readonly userEntities: ReadonlyArray<UserEntity>;
  readonly userEntity?: Maybe<UserEntity>;
  readonly userFameHallEntities: ReadonlyArray<UserFameHallEntity>;
  readonly userFameHallEntity?: Maybe<UserFameHallEntity>;
  readonly userSkipEntities: ReadonlyArray<UserSkipEntity>;
  readonly userSkipEntity?: Maybe<UserSkipEntity>;
  readonly userStatEntities: ReadonlyArray<UserStatEntity>;
  readonly userStatEntity?: Maybe<UserStatEntity>;
  readonly waustatisticEntities: ReadonlyArray<WauStatisticEntity>;
  readonly waustatisticEntity?: Maybe<WauStatisticEntity>;
  readonly weekAirdropRootEntities: ReadonlyArray<WeekAirdropRootEntity>;
  readonly weekAirdropRootEntity?: Maybe<WeekAirdropRootEntity>;
  readonly weekGasAirdropRootEntities: ReadonlyArray<WeekGasAirdropRootEntity>;
  readonly weekGasAirdropRootEntity?: Maybe<WeekGasAirdropRootEntity>;
  readonly weekGasUserAirdropStatEntities: ReadonlyArray<WeekGasUserAirdropStatEntity>;
  readonly weekGasUserAirdropStatEntity?: Maybe<WeekGasUserAirdropStatEntity>;
  readonly weekTotalAirdropEntities: ReadonlyArray<WeekTotalAirdropEntity>;
  readonly weekTotalAirdropEntity?: Maybe<WeekTotalAirdropEntity>;
  readonly weekUserAirdropStatEntities: ReadonlyArray<WeekUserAirdropStatEntity>;
  readonly weekUserAirdropStatEntity?: Maybe<WeekUserAirdropStatEntity>;
};


export type Subscription_MetaArgs = {
  block?: InputMaybe<Block_Height>;
};


export type SubscriptionAnswerAttributesArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionAnswerAttributes_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AnswerAttributes_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AnswerAttributes_Filter>;
};


export type SubscriptionAnswerBurnRandomItemMetaArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionAnswerBurnRandomItemMetasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AnswerBurnRandomItemMeta_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AnswerBurnRandomItemMeta_Filter>;
};


export type SubscriptionAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AttackInfoEntity_Filter>;
};


export type SubscriptionAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionAttributeGenerateInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionAttributeGenerateInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<AttributeGenerateInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<AttributeGenerateInfo_Filter>;
};


export type SubscriptionBurnHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<BurnHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<BurnHistoryEntity_Filter>;
};


export type SubscriptionBurnHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionChamberActionResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ChamberActionResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ChamberActionResultEntity_Filter>;
};


export type SubscriptionChamberActionResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionChamberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ChamberEntity_Filter>;
};


export type SubscriptionChamberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionControllableEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ControllableEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ControllableEntity_Filter>;
};


export type SubscriptionControllableEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionControllerEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ControllerEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ControllerEntity_Filter>;
};


export type SubscriptionControllerEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionCoreAttributesEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<CoreAttributesEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<CoreAttributesEntity_Filter>;
};


export type SubscriptionCoreAttributesEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDailyActivityCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DailyActivityCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DailyActivityCompletedEntity_Filter>;
};


export type SubscriptionDailyActivityCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDaustatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DauStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DauStatisticEntity_Filter>;
};


export type SubscriptionDaustatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonChamberMetaArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonChamberMetasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonChamberMeta_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonChamberMeta_Filter>;
};


export type SubscriptionDungeonEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonEntity_Filter>;
};


export type SubscriptionDungeonEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonFactoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonFactoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonFactoryEntity_Filter>;
};


export type SubscriptionDungeonFactoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonLogicEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonLogicEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonLogicEntity_Filter>;
};


export type SubscriptionDungeonLogicEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonRequirements_Filter>;
};


export type SubscriptionDungeonRunCounterEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonRunCounterEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonRunCounterEntity_Filter>;
};


export type SubscriptionDungeonRunCounterEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionDungeonTreasuryTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<DungeonTreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<DungeonTreasuryTokenEntity_Filter>;
};


export type SubscriptionDungeonTreasuryTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionEventGenerateInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionEventGenerateInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoData_Filter>;
};


export type SubscriptionEventGenerateInfoNegativeStatDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionEventGenerateInfoNegativeStatDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoNegativeStatData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoNegativeStatData_Filter>;
};


export type SubscriptionEventGenerateInfoPositiveStatDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionEventGenerateInfoPositiveStatDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventGenerateInfoPositiveStatData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventGenerateInfoPositiveStatData_Filter>;
};


export type SubscriptionEventResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<EventResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<EventResultEntity_Filter>;
};


export type SubscriptionEventResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionFightResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FightResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FightResultEntity_Filter>;
};


export type SubscriptionFightResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionFighterInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FighterInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FighterInfoEntity_Filter>;
};


export type SubscriptionFighterInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionFighterTurnResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FighterTurnResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FighterTurnResultEntity_Filter>;
};


export type SubscriptionFighterTurnResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionFirstBossCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<FirstBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<FirstBossCompletedEntity_Filter>;
};


export type SubscriptionFirstBossCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGeneralHeroTokenEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGeneralHeroTokenEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GeneralHeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GeneralHeroTokenEarned_Filter>;
};


export type SubscriptionGeneralTokenomicsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GeneralTokenomicsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GeneralTokenomicsEntity_Filter>;
};


export type SubscriptionGeneralTokenomicsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGlobalCustomDataEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GlobalCustomDataEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GlobalCustomDataEntity_Filter>;
};


export type SubscriptionGlobalCustomDataEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGuildActionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildActionEntity_Filter>;
};


export type SubscriptionGuildActionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGuildEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildEntity_Filter>;
};


export type SubscriptionGuildEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGuildMemberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildMemberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildMemberEntity_Filter>;
};


export type SubscriptionGuildMemberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGuildReinforcementEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildReinforcementEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildReinforcementEntity_Filter>;
};


export type SubscriptionGuildReinforcementEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionGuildRequestEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<GuildRequestEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<GuildRequestEntity_Filter>;
};


export type SubscriptionGuildRequestEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroActionArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroActionsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroAction_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroAction_Filter>;
};


export type SubscriptionHeroCustomDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroCustomDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroCustomData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroCustomData_Filter>;
};


export type SubscriptionHeroEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroEntity_Filter>;
};


export type SubscriptionHeroEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroHistoryEntity_Filter>;
};


export type SubscriptionHeroHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroItemEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroItemEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroItemEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroItemEarned_Filter>;
};


export type SubscriptionHeroMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroMetaEntity_Filter>;
};


export type SubscriptionHeroMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroStatEntity_Filter>;
};


export type SubscriptionHeroStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroTokenEarnedArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroTokenEarnedsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokenEarned_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokenEarned_Filter>;
};


export type SubscriptionHeroTokensVaultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultEntity_Filter>;
};


export type SubscriptionHeroTokensVaultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroTokensVaultHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultHistoryEntity_Filter>;
};


export type SubscriptionHeroTokensVaultHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionHeroTokensVaultStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroTokensVaultStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<HeroTokensVaultStatisticEntity_Filter>;
};


export type SubscriptionHeroTokensVaultStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemActionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemActionEntity_Filter>;
};


export type SubscriptionItemActionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemBuffInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemBuffInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemBuffInfoEntity_Filter>;
};


export type SubscriptionItemBuffInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemConsumableInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemConsumableInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemConsumableInfoEntity_Filter>;
};


export type SubscriptionItemConsumableInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type SubscriptionItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMagicAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMagicAttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMagicAttackInfoEntity_Filter>;
};


export type SubscriptionItemMagicAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaConsumableInfoAttributeEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaConsumableInfoAttributeEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaConsumableInfoAttributeEntity_Filter>;
};


export type SubscriptionItemMetaConsumableInfoAttributeEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaEntity_Filter>;
};


export type SubscriptionItemMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaGeneralParamsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaGeneralParamsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaGeneralParamsEntity_Filter>;
};


export type SubscriptionItemMetaGeneralParamsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaGenerateInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaGenerateInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaGenerateInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaGenerateInfo_Filter>;
};


export type SubscriptionItemMetaMagicAttackInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaMagicAttackInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaMagicAttackInfoEntity_Filter>;
};


export type SubscriptionItemMetaMagicAttackInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemMetaParamsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemMetaParamsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemMetaParamsEntity_Filter>;
};


export type SubscriptionItemMetaParamsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemUnionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemUnionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemUnionEntity_Filter>;
};


export type SubscriptionItemUnionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemUsedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemUsedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemUsedEntity_Filter>;
};


export type SubscriptionItemUsedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionItemsBurntResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemsBurntResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ItemsBurntResultEntity_Filter>;
};


export type SubscriptionItemsBurntResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionLootBoxEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<LootBoxEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<LootBoxEntity_Filter>;
};


export type SubscriptionLootBoxEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionLootBoxOpenedHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<LootBoxOpenedHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<LootBoxOpenedHistoryEntity_Filter>;
};


export type SubscriptionLootBoxOpenedHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionMonsterGenerateAttackInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionMonsterGenerateAttackInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterGenerateAttackInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterGenerateAttackInfoData_Filter>;
};


export type SubscriptionMonsterGenerateInfoDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionMonsterGenerateInfoDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterGenerateInfoData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterGenerateInfoData_Filter>;
};


export type SubscriptionMonsterInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterInfoEntity_Filter>;
};


export type SubscriptionMonsterInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionMonsterMintItemDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionMonsterMintItemDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<MonsterMintItemData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<MonsterMintItemData_Filter>;
};


export type SubscriptionOpenedChamberEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<OpenedChamberEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<OpenedChamberEntity_Filter>;
};


export type SubscriptionOpenedChamberEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopEntity_Filter>;
};


export type SubscriptionPawnshopEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopPositionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionEntity_Filter>;
};


export type SubscriptionPawnshopPositionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopPositionHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
};


export type SubscriptionPawnshopPositionHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopPositionItemPriceStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemPriceStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionItemPriceStatEntity_Filter>;
};


export type SubscriptionPawnshopPositionItemPriceStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopPositionItemStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionItemStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopPositionItemStatEntity_Filter>;
};


export type SubscriptionPawnshopPositionItemStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopStatisticEntity_Filter>;
};


export type SubscriptionPawnshopStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPawnshopUserEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopUserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PawnshopUserEntity_Filter>;
};


export type SubscriptionPawnshopUserEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPvpFightEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpFightEntity_Filter>;
};


export type SubscriptionPvpFightEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPvpFightTurnEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpFightTurnEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpFightTurnEntity_Filter>;
};


export type SubscriptionPvpFightTurnEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPvpGuildEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpGuildEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpGuildEntity_Filter>;
};


export type SubscriptionPvpGuildEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionPvpGuildHeroEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PvpGuildHeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<PvpGuildHeroEntity_Filter>;
};


export type SubscriptionPvpGuildHeroEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionRegisteredNameEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RegisteredNameEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RegisteredNameEntity_Filter>;
};


export type SubscriptionRegisteredNameEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionReinforcementRewardItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardItemEntity_Filter>;
};


export type SubscriptionReinforcementRewardItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionReinforcementRewardItemHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardItemHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardItemHistoryEntity_Filter>;
};


export type SubscriptionReinforcementRewardItemHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionReinforcementRewardTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardTokenEntity_Filter>;
};


export type SubscriptionReinforcementRewardTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionReinforcementRewardTokenHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ReinforcementRewardTokenHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ReinforcementRewardTokenHistoryEntity_Filter>;
};


export type SubscriptionReinforcementRewardTokenHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionRewardEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RewardEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RewardEntity_Filter>;
};


export type SubscriptionRewardEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionRewardPoolEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RewardPoolEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<RewardPoolEntity_Filter>;
};


export type SubscriptionRewardPoolEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionShelterAuctionBidEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterAuctionBidEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterAuctionBidEntity_Filter>;
};


export type SubscriptionShelterAuctionBidEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionShelterAuctionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterAuctionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterAuctionEntity_Filter>;
};


export type SubscriptionShelterAuctionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionShelterEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterEntity_Filter>;
};


export type SubscriptionShelterEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionShelterItemEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterItemEntity_Filter>;
};


export type SubscriptionShelterItemEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionShelterItemLimitEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ShelterItemLimitEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<ShelterItemLimitEntity_Filter>;
};


export type SubscriptionShelterItemLimitEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStatsEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatsEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatsEntity_Filter>;
};


export type SubscriptionStatsEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStatsMetaEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatsMetaEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatsMetaEntity_Filter>;
};


export type SubscriptionStatsMetaEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStatusesEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StatusesEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StatusesEntity_Filter>;
};


export type SubscriptionStatusesEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryEntity_Filter>;
};


export type SubscriptionStoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerAttributeRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerAttributeRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerAttributeRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerAttributeRequirements_Filter>;
};


export type SubscriptionStoryMetaAnswerDataRequirementArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerDataRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerDataRequirement_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerDataRequirement_Filter>;
};


export type SubscriptionStoryMetaAnswerItemRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerItemRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerItemRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerItemRequirements_Filter>;
};


export type SubscriptionStoryMetaAnswerNextPageArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerNextPagesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerNextPage_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerNextPage_Filter>;
};


export type SubscriptionStoryMetaAnswerTokenRequirementsArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswerTokenRequirements_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswerTokenRequirements_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswerTokenRequirements_Filter>;
};


export type SubscriptionStoryMetaAnswersArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaAnswers_CollectionArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaAnswers_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaAnswers_Filter>;
};


export type SubscriptionStoryMetaHeroCustomDataArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaHeroCustomDatasArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaHeroCustomData_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaHeroCustomData_Filter>;
};


export type SubscriptionStoryMetaInfoArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaInfosArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaInfo_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaInfo_Filter>;
};


export type SubscriptionStoryMetaObjectsRewriteArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryMetaObjectsRewritesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryMetaObjectsRewrite_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryMetaObjectsRewrite_Filter>;
};


export type SubscriptionStoryPageEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryPageEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryPageEntity_Filter>;
};


export type SubscriptionStoryPageEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionStoryResultEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<StoryResultEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<StoryResultEntity_Filter>;
};


export type SubscriptionStoryResultEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTierEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TierEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TierEntity_Filter>;
};


export type SubscriptionTierEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTokenAmountEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenAmountEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenAmountEntity_Filter>;
};


export type SubscriptionTokenAmountEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenEntity_Filter>;
};


export type SubscriptionTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTokenTransactionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TokenTransactionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TokenTransactionEntity_Filter>;
};


export type SubscriptionTokenTransactionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTotalSupplyEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalSupplyEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalSupplyEntity_Filter>;
};


export type SubscriptionTotalSupplyEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTotalSupplyHistoryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalSupplyHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalSupplyHistoryEntity_Filter>;
};


export type SubscriptionTotalSupplyHistoryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTotalTxStatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TotalTxStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TotalTxStatisticEntity_Filter>;
};


export type SubscriptionTotalTxStatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTransactionEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TransactionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TransactionEntity_Filter>;
};


export type SubscriptionTransactionEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTreasuryEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryEntity_Filter>;
};


export type SubscriptionTreasuryEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTreasuryTokenEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryTokenEntity_Filter>;
};


export type SubscriptionTreasuryTokenEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionTreasuryTokenInfoEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenInfoEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<TreasuryTokenInfoEntity_Filter>;
};


export type SubscriptionTreasuryTokenInfoEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionUserBossCompletedEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserBossCompletedEntity_Filter>;
};


export type SubscriptionUserBossCompletedEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionUserEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserEntity_Filter>;
};


export type SubscriptionUserEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionUserFameHallEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserFameHallEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserFameHallEntity_Filter>;
};


export type SubscriptionUserFameHallEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionUserSkipEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserSkipEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserSkipEntity_Filter>;
};


export type SubscriptionUserSkipEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionUserStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<UserStatEntity_Filter>;
};


export type SubscriptionUserStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWaustatisticEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WauStatisticEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WauStatisticEntity_Filter>;
};


export type SubscriptionWaustatisticEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWeekAirdropRootEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekAirdropRootEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekAirdropRootEntity_Filter>;
};


export type SubscriptionWeekAirdropRootEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWeekGasAirdropRootEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekGasAirdropRootEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekGasAirdropRootEntity_Filter>;
};


export type SubscriptionWeekGasAirdropRootEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWeekGasUserAirdropStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekGasUserAirdropStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekGasUserAirdropStatEntity_Filter>;
};


export type SubscriptionWeekGasUserAirdropStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWeekTotalAirdropEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekTotalAirdropEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekTotalAirdropEntity_Filter>;
};


export type SubscriptionWeekTotalAirdropEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};


export type SubscriptionWeekUserAirdropStatEntitiesArgs = {
  block?: InputMaybe<Block_Height>;
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<WeekUserAirdropStatEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  subgraphError?: _SubgraphErrorPolicy_;
  where?: InputMaybe<WeekUserAirdropStatEntity_Filter>;
};


export type SubscriptionWeekUserAirdropStatEntityArgs = {
  block?: InputMaybe<Block_Height>;
  id: Scalars['ID']['input'];
  subgraphError?: _SubgraphErrorPolicy_;
};

export type TierEntity = {
  readonly __typename?: 'TierEntity';
  readonly hero: HeroMetaEntity;
  readonly id: Scalars['ID']['output'];
  readonly items: ReadonlyArray<Scalars['String']['output']>;
  readonly payAmount: Scalars['BigInt']['output'];
  readonly slotSize: ReadonlyArray<Scalars['Int']['output']>;
  readonly slots: ReadonlyArray<Scalars['Int']['output']>;
  readonly tier: Scalars['Int']['output'];
};

export type TierEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TierEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroMetaEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly items?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly items_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TierEntity_Filter>>>;
  readonly payAmount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly payAmount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly payAmount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly slotSize?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slotSize_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slotSize_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slotSize_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slotSize_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slotSize_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots_not?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots_not_contains?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly slots_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tier?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly tier_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not?: InputMaybe<Scalars['Int']['input']>;
  readonly tier_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
};

export enum TierEntity_OrderBy {
  Hero = 'hero',
  HeroHeroClass = 'hero__heroClass',
  HeroId = 'hero__id',
  HeroName = 'hero__name',
  HeroSymbol = 'hero__symbol',
  HeroUri = 'hero__uri',
  HeroValid = 'hero__valid',
  Id = 'id',
  Items = 'items',
  PayAmount = 'payAmount',
  SlotSize = 'slotSize',
  Slots = 'slots',
  Tier = 'tier'
}

export type TokenAmountEntity = {
  readonly __typename?: 'TokenAmountEntity';
  readonly amount: Scalars['BigDecimal']['output'];
  readonly id: Scalars['ID']['output'];
  readonly token: TokenEntity;
};

export type TokenAmountEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TokenAmountEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TokenAmountEntity_Filter>>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum TokenAmountEntity_OrderBy {
  Amount = 'amount',
  Id = 'id',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply'
}

export type TokenEntity = {
  readonly __typename?: 'TokenEntity';
  readonly decimals: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly lastPriceUpdateTimestamp: Scalars['BigInt']['output'];
  readonly name: Scalars['String']['output'];
  readonly price: Scalars['BigDecimal']['output'];
  readonly symbol: Scalars['String']['output'];
  readonly totalSupply: Scalars['BigInt']['output'];
};

export type TokenEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TokenEntity_Filter>>>;
  readonly decimals?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly decimals_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_not?: InputMaybe<Scalars['Int']['input']>;
  readonly decimals_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly lastPriceUpdateTimestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly lastPriceUpdateTimestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly lastPriceUpdateTimestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly name?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_gt?: InputMaybe<Scalars['String']['input']>;
  readonly name_gte?: InputMaybe<Scalars['String']['input']>;
  readonly name_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_lt?: InputMaybe<Scalars['String']['input']>;
  readonly name_lte?: InputMaybe<Scalars['String']['input']>;
  readonly name_not?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TokenEntity_Filter>>>;
  readonly price?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly price_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly symbol?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_gte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_lt?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_lte?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly symbol_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly symbol_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly totalSupply?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalSupply_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum TokenEntity_OrderBy {
  Decimals = 'decimals',
  Id = 'id',
  LastPriceUpdateTimestamp = 'lastPriceUpdateTimestamp',
  Name = 'name',
  Price = 'price',
  Symbol = 'symbol',
  TotalSupply = 'totalSupply'
}

export type TokenTransactionEntity = {
  readonly __typename?: 'TokenTransactionEntity';
  readonly amount: Scalars['BigInt']['output'];
  readonly createdAtBlock: Scalars['BigInt']['output'];
  readonly from: Scalars['String']['output'];
  readonly id: Scalars['ID']['output'];
  readonly price: Scalars['BigDecimal']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly to: Scalars['String']['output'];
  readonly token: TokenEntity;
};

export type TokenTransactionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amount?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amount_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amount_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TokenTransactionEntity_Filter>>>;
  readonly createdAtBlock?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly createdAtBlock_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly createdAtBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly from?: InputMaybe<Scalars['String']['input']>;
  readonly from_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_gt?: InputMaybe<Scalars['String']['input']>;
  readonly from_gte?: InputMaybe<Scalars['String']['input']>;
  readonly from_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_lt?: InputMaybe<Scalars['String']['input']>;
  readonly from_lte?: InputMaybe<Scalars['String']['input']>;
  readonly from_not?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TokenTransactionEntity_Filter>>>;
  readonly price?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly price_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly price_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly to?: InputMaybe<Scalars['String']['input']>;
  readonly to_contains?: InputMaybe<Scalars['String']['input']>;
  readonly to_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_gt?: InputMaybe<Scalars['String']['input']>;
  readonly to_gte?: InputMaybe<Scalars['String']['input']>;
  readonly to_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly to_lt?: InputMaybe<Scalars['String']['input']>;
  readonly to_lte?: InputMaybe<Scalars['String']['input']>;
  readonly to_not?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly to_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum TokenTransactionEntity_OrderBy {
  Amount = 'amount',
  CreatedAtBlock = 'createdAtBlock',
  From = 'from',
  Id = 'id',
  Price = 'price',
  Timestamp = 'timestamp',
  To = 'to',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply'
}

export type TotalSupplyEntity = {
  readonly __typename?: 'TotalSupplyEntity';
  readonly id: Scalars['ID']['output'];
  readonly length: Scalars['Int']['output'];
  readonly token: TokenEntity;
  readonly totalSupply: Scalars['BigInt']['output'];
};

export type TotalSupplyEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TotalSupplyEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly length?: InputMaybe<Scalars['Int']['input']>;
  readonly length_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly length_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly length_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly length_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly length_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly length_not?: InputMaybe<Scalars['Int']['input']>;
  readonly length_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TotalSupplyEntity_Filter>>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly totalSupply?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalSupply_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum TotalSupplyEntity_OrderBy {
  Id = 'id',
  Length = 'length',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply',
  TotalSupply = 'totalSupply'
}

export type TotalSupplyHistoryEntity = {
  readonly __typename?: 'TotalSupplyHistoryEntity';
  readonly id: Scalars['ID']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly token: TokenEntity;
  readonly totalSupply: Scalars['BigInt']['output'];
};

export type TotalSupplyHistoryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TotalSupplyHistoryEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TotalSupplyHistoryEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly totalSupply?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly totalSupply_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly totalSupply_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum TotalSupplyHistoryEntity_OrderBy {
  Id = 'id',
  Timestamp = 'timestamp',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply',
  TotalSupply = 'totalSupply'
}

export type TotalTxStatisticEntity = {
  readonly __typename?: 'TotalTxStatisticEntity';
  readonly count: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
};

export type TotalTxStatisticEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TotalTxStatisticEntity_Filter>>>;
  readonly count?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly count_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TotalTxStatisticEntity_Filter>>>;
};

export enum TotalTxStatisticEntity_OrderBy {
  Count = 'count',
  Id = 'id'
}

export type TransactionEntity = {
  readonly __typename?: 'TransactionEntity';
  readonly blockNumber?: Maybe<Scalars['BigInt']['output']>;
  readonly cumulativeGasUsed?: Maybe<Scalars['BigInt']['output']>;
  readonly from?: Maybe<Scalars['String']['output']>;
  readonly gasLimit?: Maybe<Scalars['BigInt']['output']>;
  readonly gasPrice?: Maybe<Scalars['BigInt']['output']>;
  readonly gasUsed?: Maybe<Scalars['BigInt']['output']>;
  readonly id: Scalars['Bytes']['output'];
  readonly timestamp?: Maybe<Scalars['BigInt']['output']>;
  readonly to?: Maybe<Scalars['String']['output']>;
  readonly value?: Maybe<Scalars['BigInt']['output']>;
};

export type TransactionEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TransactionEntity_Filter>>>;
  readonly blockNumber?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly blockNumber_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly blockNumber_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly cumulativeGasUsed?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly cumulativeGasUsed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly cumulativeGasUsed_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly from?: InputMaybe<Scalars['String']['input']>;
  readonly from_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_gt?: InputMaybe<Scalars['String']['input']>;
  readonly from_gte?: InputMaybe<Scalars['String']['input']>;
  readonly from_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_lt?: InputMaybe<Scalars['String']['input']>;
  readonly from_lte?: InputMaybe<Scalars['String']['input']>;
  readonly from_not?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly from_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly from_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly gasLimit?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gasLimit_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasLimit_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gasPrice?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gasPrice_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasPrice_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gasUsed?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gasUsed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gasUsed_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_contains?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_gt?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_gte?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_lte?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_not?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_not_contains?: InputMaybe<Scalars['Bytes']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['Bytes']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TransactionEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly to?: InputMaybe<Scalars['String']['input']>;
  readonly to_contains?: InputMaybe<Scalars['String']['input']>;
  readonly to_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_gt?: InputMaybe<Scalars['String']['input']>;
  readonly to_gte?: InputMaybe<Scalars['String']['input']>;
  readonly to_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly to_lt?: InputMaybe<Scalars['String']['input']>;
  readonly to_lte?: InputMaybe<Scalars['String']['input']>;
  readonly to_not?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly to_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly to_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly to_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly value?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly value_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly value_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum TransactionEntity_OrderBy {
  BlockNumber = 'blockNumber',
  CumulativeGasUsed = 'cumulativeGasUsed',
  From = 'from',
  GasLimit = 'gasLimit',
  GasPrice = 'gasPrice',
  GasUsed = 'gasUsed',
  Id = 'id',
  Timestamp = 'timestamp',
  To = 'to',
  Value = 'value'
}

export type TreasuryEntity = {
  readonly __typename?: 'TreasuryEntity';
  readonly id: Scalars['ID']['output'];
  readonly tokens: ReadonlyArray<TreasuryTokenEntity>;
};


export type TreasuryEntityTokensArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<TreasuryTokenEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TreasuryTokenEntity_Filter>;
};

export type TreasuryEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryEntity_Filter>>>;
  readonly tokens_?: InputMaybe<TreasuryTokenEntity_Filter>;
};

export enum TreasuryEntity_OrderBy {
  Id = 'id',
  Tokens = 'tokens'
}

export type TreasuryTokenEntity = {
  readonly __typename?: 'TreasuryTokenEntity';
  readonly id: Scalars['ID']['output'];
  readonly token: TokenAmountEntity;
  readonly treasury: TreasuryEntity;
};

export type TreasuryTokenEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryTokenEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryTokenEntity_Filter>>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenAmountEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_?: InputMaybe<TreasuryEntity_Filter>;
  readonly treasury_contains?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_gt?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_gte?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly treasury_lt?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_lte?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly treasury_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly treasury_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum TreasuryTokenEntity_OrderBy {
  Id = 'id',
  Token = 'token',
  TokenAmount = 'token__amount',
  TokenId = 'token__id',
  Treasury = 'treasury',
  TreasuryId = 'treasury__id'
}

export type TreasuryTokenInfoEntity = {
  readonly __typename?: 'TreasuryTokenInfoEntity';
  readonly controller: ControllerEntity;
  readonly customMinLevel: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly token: TokenEntity;
  readonly valid: Scalars['Boolean']['output'];
};

export type TreasuryTokenInfoEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryTokenInfoEntity_Filter>>>;
  readonly controller?: InputMaybe<Scalars['String']['input']>;
  readonly controller_?: InputMaybe<ControllerEntity_Filter>;
  readonly controller_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_gte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_lt?: InputMaybe<Scalars['String']['input']>;
  readonly controller_lte?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly controller_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly controller_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly customMinLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly customMinLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly customMinLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<TreasuryTokenInfoEntity_Filter>>>;
  readonly token?: InputMaybe<Scalars['String']['input']>;
  readonly token_?: InputMaybe<TokenEntity_Filter>;
  readonly token_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_gt?: InputMaybe<Scalars['String']['input']>;
  readonly token_gte?: InputMaybe<Scalars['String']['input']>;
  readonly token_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_lt?: InputMaybe<Scalars['String']['input']>;
  readonly token_lte?: InputMaybe<Scalars['String']['input']>;
  readonly token_not?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly token_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly token_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly valid?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly valid_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly valid_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
};

export enum TreasuryTokenInfoEntity_OrderBy {
  Controller = 'controller',
  ControllerDungeonFactory = 'controller__dungeonFactory',
  ControllerFightDelay = 'controller__fightDelay',
  ControllerGameObjectController = 'controller__gameObjectController',
  ControllerGameToken = 'controller__gameToken',
  ControllerGovernance = 'controller__governance',
  ControllerGuildController = 'controller__guildController',
  ControllerHeroController = 'controller__heroController',
  ControllerId = 'controller__id',
  ControllerItemBoxController = 'controller__itemBoxController',
  ControllerItemController = 'controller__itemController',
  ControllerOracle = 'controller__oracle',
  ControllerPvpController = 'controller__pvpController',
  ControllerReinforcementController = 'controller__reinforcementController',
  ControllerRewardPool = 'controller__rewardPool',
  ControllerShelterAuctionController = 'controller__shelterAuctionController',
  ControllerShelterController = 'controller__shelterController',
  ControllerStatController = 'controller__statController',
  ControllerStoryController = 'controller__storyController',
  ControllerUserController = 'controller__userController',
  CustomMinLevel = 'customMinLevel',
  Id = 'id',
  Token = 'token',
  TokenDecimals = 'token__decimals',
  TokenId = 'token__id',
  TokenLastPriceUpdateTimestamp = 'token__lastPriceUpdateTimestamp',
  TokenName = 'token__name',
  TokenPrice = 'token__price',
  TokenSymbol = 'token__symbol',
  TokenTotalSupply = 'token__totalSupply',
  Valid = 'valid'
}

export type UserBossCompletedEntity = {
  readonly __typename?: 'UserBossCompletedEntity';
  readonly biome: Scalars['Int']['output'];
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly unique: Scalars['Boolean']['output'];
  readonly user: UserEntity;
};

export type UserBossCompletedEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<UserBossCompletedEntity_Filter>>>;
  readonly biome?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly biome_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not?: InputMaybe<Scalars['Int']['input']>;
  readonly biome_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<UserBossCompletedEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly unique?: InputMaybe<Scalars['Boolean']['input']>;
  readonly unique_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly unique_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly unique_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum UserBossCompletedEntity_OrderBy {
  Biome = 'biome',
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  NgLevel = 'ngLevel',
  Timestamp = 'timestamp',
  Unique = 'unique',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type UserEntity = {
  readonly __typename?: 'UserEntity';
  readonly bossCompleted: ReadonlyArray<UserBossCompletedEntity>;
  readonly gamePoints?: Maybe<Scalars['BigInt']['output']>;
  readonly guild?: Maybe<GuildEntity>;
  readonly heroes: ReadonlyArray<HeroEntity>;
  readonly id: Scalars['ID']['output'];
  readonly itemActions: ReadonlyArray<ItemActionEntity>;
  readonly items: ReadonlyArray<ItemEntity>;
  readonly lastActionBlock: Scalars['Int']['output'];
  readonly lastActionTs: Scalars['Int']['output'];
  readonly maxNgLvl: Scalars['Int']['output'];
  readonly name: Scalars['String']['output'];
  readonly pawnshopActions: ReadonlyArray<PawnshopPositionHistoryEntity>;
  readonly rewards: ReadonlyArray<RewardEntity>;
  readonly timestamp: Scalars['BigInt']['output'];
  readonly uri: Scalars['String']['output'];
  readonly userStat: UserStatEntity;
};


export type UserEntityBossCompletedArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserBossCompletedEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserBossCompletedEntity_Filter>;
};


export type UserEntityHeroesArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<HeroEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<HeroEntity_Filter>;
};


export type UserEntityItemActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemActionEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemActionEntity_Filter>;
};


export type UserEntityItemsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<ItemEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ItemEntity_Filter>;
};


export type UserEntityPawnshopActionsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<PawnshopPositionHistoryEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
};


export type UserEntityRewardsArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<RewardEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RewardEntity_Filter>;
};

export type UserEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<UserEntity_Filter>>>;
  readonly bossCompleted_?: InputMaybe<UserBossCompletedEntity_Filter>;
  readonly gamePoints?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly gamePoints_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly gamePoints_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly guild?: InputMaybe<Scalars['String']['input']>;
  readonly guild_?: InputMaybe<GuildEntity_Filter>;
  readonly guild_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_gte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_lt?: InputMaybe<Scalars['String']['input']>;
  readonly guild_lte?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly guild_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly guild_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly heroes_?: InputMaybe<HeroEntity_Filter>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly itemActions_?: InputMaybe<ItemActionEntity_Filter>;
  readonly items_?: InputMaybe<ItemEntity_Filter>;
  readonly lastActionBlock?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastActionBlock_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionBlock_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastActionTs?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly lastActionTs_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_not?: InputMaybe<Scalars['Int']['input']>;
  readonly lastActionTs_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxNgLvl?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly maxNgLvl_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_not?: InputMaybe<Scalars['Int']['input']>;
  readonly maxNgLvl_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly name?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_gt?: InputMaybe<Scalars['String']['input']>;
  readonly name_gte?: InputMaybe<Scalars['String']['input']>;
  readonly name_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_lt?: InputMaybe<Scalars['String']['input']>;
  readonly name_lte?: InputMaybe<Scalars['String']['input']>;
  readonly name_not?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly name_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly name_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<UserEntity_Filter>>>;
  readonly pawnshopActions_?: InputMaybe<PawnshopPositionHistoryEntity_Filter>;
  readonly rewards_?: InputMaybe<RewardEntity_Filter>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly uri?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_gte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_lt?: InputMaybe<Scalars['String']['input']>;
  readonly uri_lte?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly uri_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly uri_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_?: InputMaybe<UserStatEntity_Filter>;
  readonly userStat_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_gt?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_gte?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userStat_lt?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_lte?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly userStat_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly userStat_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum UserEntity_OrderBy {
  BossCompleted = 'bossCompleted',
  GamePoints = 'gamePoints',
  Guild = 'guild',
  GuildBiomeDominationRequest = 'guild__biomeDominationRequest',
  GuildDescription = 'guild__description',
  GuildEpochWeekRequest = 'guild__epochWeekRequest',
  GuildHelperRatio = 'guild__helperRatio',
  GuildId = 'guild__id',
  GuildLevel = 'guild__level',
  GuildName = 'guild__name',
  GuildPvpPoints = 'guild__pvpPoints',
  GuildRequestDepositAmount = 'guild__requestDepositAmount',
  GuildTimestamp = 'guild__timestamp',
  GuildUri = 'guild__uri',
  Heroes = 'heroes',
  Id = 'id',
  ItemActions = 'itemActions',
  Items = 'items',
  LastActionBlock = 'lastActionBlock',
  LastActionTs = 'lastActionTs',
  MaxNgLvl = 'maxNgLvl',
  Name = 'name',
  PawnshopActions = 'pawnshopActions',
  Rewards = 'rewards',
  Timestamp = 'timestamp',
  Uri = 'uri',
  UserStat = 'userStat',
  UserStatActions = 'userStat__actions',
  UserStatEarned = 'userStat__earned',
  UserStatHeroMaxLvl = 'userStat__heroMaxLvl',
  UserStatHeroes = 'userStat__heroes',
  UserStatId = 'userStat__id',
  UserStatItems = 'userStat__items',
  UserStatPawnshopActions = 'userStat__pawnshopActions'
}

export type UserFameHallEntity = {
  readonly __typename?: 'UserFameHallEntity';
  readonly hero: HeroEntity;
  readonly id: Scalars['ID']['output'];
  readonly ngLevel: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type UserFameHallEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<UserFameHallEntity_Filter>>>;
  readonly hero?: InputMaybe<Scalars['String']['input']>;
  readonly hero_?: InputMaybe<HeroEntity_Filter>;
  readonly hero_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_gte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_lt?: InputMaybe<Scalars['String']['input']>;
  readonly hero_lte?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly hero_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly hero_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly ngLevel?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly ngLevel_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not?: InputMaybe<Scalars['Int']['input']>;
  readonly ngLevel_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<UserFameHallEntity_Filter>>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum UserFameHallEntity_OrderBy {
  Hero = 'hero',
  HeroBiome = 'hero__biome',
  HeroBurned = 'hero__burned',
  HeroCreatedAtBlock = 'hero__createdAtBlock',
  HeroDead = 'hero__dead',
  HeroHeroId = 'hero__heroId',
  HeroId = 'hero__id',
  HeroLastFightTs = 'hero__lastFightTs',
  HeroLastTransfer = 'hero__lastTransfer',
  HeroMaxBiomeCompleted = 'hero__maxBiomeCompleted',
  HeroNextLevelExperienceRequire = 'hero__nextLevelExperienceRequire',
  HeroNgLevel = 'hero__ngLevel',
  HeroNgLevelStarted = 'hero__ngLevelStarted',
  HeroPreviousLevelExperienceRequire = 'hero__previousLevelExperienceRequire',
  HeroRebornAllowed = 'hero__rebornAllowed',
  HeroRefCode = 'hero__refCode',
  HeroSandBoxMode = 'hero__sandBoxMode',
  HeroScore = 'hero__score',
  HeroStaked = 'hero__staked',
  HeroStakedFee = 'hero__stakedFee',
  HeroStakedFeeV2 = 'hero__stakedFeeV2',
  HeroStakedGuild = 'hero__stakedGuild',
  HeroTier = 'hero__tier',
  HeroTimestamp = 'hero__timestamp',
  HeroTx = 'hero__tx',
  HeroUniqName = 'hero__uniqName',
  HeroUniqUri = 'hero__uniqUri',
  Id = 'id',
  NgLevel = 'ngLevel',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type UserSkipEntity = {
  readonly __typename?: 'UserSkipEntity';
  readonly id: Scalars['ID']['output'];
  readonly storyId: Scalars['Int']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly user: UserEntity;
};

export type UserSkipEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<UserSkipEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<UserSkipEntity_Filter>>>;
  readonly storyId?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly storyId_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_not?: InputMaybe<Scalars['Int']['input']>;
  readonly storyId_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum UserSkipEntity_OrderBy {
  Id = 'id',
  StoryId = 'storyId',
  Timestamp = 'timestamp',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type UserStatEntity = {
  readonly __typename?: 'UserStatEntity';
  readonly actions: Scalars['Int']['output'];
  readonly earned: Scalars['BigInt']['output'];
  readonly earnedByBiome: ReadonlyArray<Scalars['BigInt']['output']>;
  readonly heroMaxLvl: Scalars['Int']['output'];
  readonly heroes: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly items: Scalars['Int']['output'];
  readonly pawnshopActions: Scalars['Int']['output'];
  readonly user: UserEntity;
};

export type UserStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly actions?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly actions_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_not?: InputMaybe<Scalars['Int']['input']>;
  readonly actions_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<UserStatEntity_Filter>>>;
  readonly earned?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earnedByBiome?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earnedByBiome_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earnedByBiome_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earnedByBiome_not?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earnedByBiome_not_contains?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earnedByBiome_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earned_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earned_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earned_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly earned_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earned_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earned_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly earned_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly heroMaxLvl?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroMaxLvl_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroMaxLvl_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroes?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly heroes_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not?: InputMaybe<Scalars['Int']['input']>;
  readonly heroes_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly items?: InputMaybe<Scalars['Int']['input']>;
  readonly items_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly items_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly items_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly items_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly items_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly items_not?: InputMaybe<Scalars['Int']['input']>;
  readonly items_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<UserStatEntity_Filter>>>;
  readonly pawnshopActions?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly pawnshopActions_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_not?: InputMaybe<Scalars['Int']['input']>;
  readonly pawnshopActions_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum UserStatEntity_OrderBy {
  Actions = 'actions',
  Earned = 'earned',
  EarnedByBiome = 'earnedByBiome',
  HeroMaxLvl = 'heroMaxLvl',
  Heroes = 'heroes',
  Id = 'id',
  Items = 'items',
  PawnshopActions = 'pawnshopActions',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri'
}

export type WauStatisticEntity = {
  readonly __typename?: 'WAUStatisticEntity';
  readonly count: Scalars['Int']['output'];
  readonly id: Scalars['ID']['output'];
  readonly users: ReadonlyArray<UserEntity>;
};


export type WauStatisticEntityUsersArgs = {
  first?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<UserEntity_OrderBy>;
  orderDirection?: InputMaybe<OrderDirection>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserEntity_Filter>;
};

export type WauStatisticEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WauStatisticEntity_Filter>>>;
  readonly count?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly count_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly count_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not?: InputMaybe<Scalars['Int']['input']>;
  readonly count_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WauStatisticEntity_Filter>>>;
  readonly users?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_?: InputMaybe<UserEntity_Filter>;
  readonly users_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not_contains?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly users_not_contains_nocase?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
};

export enum WauStatisticEntity_OrderBy {
  Count = 'count',
  Id = 'id',
  Users = 'users'
}

export type WeekAirdropRootEntity = {
  readonly __typename?: 'WeekAirdropRootEntity';
  readonly block: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly root: Scalars['String']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
};

export type WeekAirdropRootEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WeekAirdropRootEntity_Filter>>>;
  readonly block?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly block_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WeekAirdropRootEntity_Filter>>>;
  readonly root?: InputMaybe<Scalars['String']['input']>;
  readonly root_contains?: InputMaybe<Scalars['String']['input']>;
  readonly root_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_gt?: InputMaybe<Scalars['String']['input']>;
  readonly root_gte?: InputMaybe<Scalars['String']['input']>;
  readonly root_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly root_lt?: InputMaybe<Scalars['String']['input']>;
  readonly root_lte?: InputMaybe<Scalars['String']['input']>;
  readonly root_not?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly root_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum WeekAirdropRootEntity_OrderBy {
  Block = 'block',
  Id = 'id',
  Root = 'root',
  Timestamp = 'timestamp',
  Tx = 'tx'
}

export type WeekGasAirdropRootEntity = {
  readonly __typename?: 'WeekGasAirdropRootEntity';
  readonly block: Scalars['BigInt']['output'];
  readonly id: Scalars['ID']['output'];
  readonly root: Scalars['String']['output'];
  readonly timestamp: Scalars['BigInt']['output'];
  readonly tx: Scalars['String']['output'];
};

export type WeekGasAirdropRootEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WeekGasAirdropRootEntity_Filter>>>;
  readonly block?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly block_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly block_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WeekGasAirdropRootEntity_Filter>>>;
  readonly root?: InputMaybe<Scalars['String']['input']>;
  readonly root_contains?: InputMaybe<Scalars['String']['input']>;
  readonly root_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_gt?: InputMaybe<Scalars['String']['input']>;
  readonly root_gte?: InputMaybe<Scalars['String']['input']>;
  readonly root_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly root_lt?: InputMaybe<Scalars['String']['input']>;
  readonly root_lte?: InputMaybe<Scalars['String']['input']>;
  readonly root_not?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly root_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly root_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly root_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly timestamp?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly timestamp_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly timestamp_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly tx?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_gte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_lt?: InputMaybe<Scalars['String']['input']>;
  readonly tx_lte?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly tx_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly tx_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
};

export enum WeekGasAirdropRootEntity_OrderBy {
  Block = 'block',
  Id = 'id',
  Root = 'root',
  Timestamp = 'timestamp',
  Tx = 'tx'
}

export type WeekGasUserAirdropStatEntity = {
  readonly __typename?: 'WeekGasUserAirdropStatEntity';
  readonly amountClaimed: Scalars['BigInt']['output'];
  readonly claimed: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly user: UserEntity;
  readonly week: Scalars['BigInt']['output'];
};

export type WeekGasUserAirdropStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amountClaimed?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amountClaimed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WeekGasUserAirdropStatEntity_Filter>>>;
  readonly claimed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly claimed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly claimed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly claimed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WeekGasUserAirdropStatEntity_Filter>>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly week?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly week_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum WeekGasUserAirdropStatEntity_OrderBy {
  AmountClaimed = 'amountClaimed',
  Claimed = 'claimed',
  Id = 'id',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Week = 'week'
}

export type WeekTotalAirdropEntity = {
  readonly __typename?: 'WeekTotalAirdropEntity';
  readonly id: Scalars['ID']['output'];
  readonly totalPoints: Scalars['BigDecimal']['output'];
};

export type WeekTotalAirdropEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WeekTotalAirdropEntity_Filter>>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WeekTotalAirdropEntity_Filter>>>;
  readonly totalPoints?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly totalPoints_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly totalPoints_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
};

export enum WeekTotalAirdropEntity_OrderBy {
  Id = 'id',
  TotalPoints = 'totalPoints'
}

export type WeekUserAirdropStatEntity = {
  readonly __typename?: 'WeekUserAirdropStatEntity';
  readonly amountClaimed: Scalars['BigInt']['output'];
  readonly claimed: Scalars['Boolean']['output'];
  readonly id: Scalars['ID']['output'];
  readonly killedBoss?: Maybe<Scalars['Int']['output']>;
  readonly points: Scalars['BigDecimal']['output'];
  readonly user: UserEntity;
  readonly week: Scalars['BigInt']['output'];
};

export type WeekUserAirdropStatEntity_Filter = {
  /** Filter for the block changed event. */
  readonly _change_block?: InputMaybe<BlockChangedFilter>;
  readonly amountClaimed?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly amountClaimed_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly amountClaimed_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly and?: InputMaybe<ReadonlyArray<InputMaybe<WeekUserAirdropStatEntity_Filter>>>;
  readonly claimed?: InputMaybe<Scalars['Boolean']['input']>;
  readonly claimed_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly claimed_not?: InputMaybe<Scalars['Boolean']['input']>;
  readonly claimed_not_in?: InputMaybe<ReadonlyArray<Scalars['Boolean']['input']>>;
  readonly id?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_gte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly id_lt?: InputMaybe<Scalars['ID']['input']>;
  readonly id_lte?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not?: InputMaybe<Scalars['ID']['input']>;
  readonly id_not_in?: InputMaybe<ReadonlyArray<Scalars['ID']['input']>>;
  readonly killedBoss?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_gt?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_gte?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly killedBoss_lt?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_lte?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_not?: InputMaybe<Scalars['Int']['input']>;
  readonly killedBoss_not_in?: InputMaybe<ReadonlyArray<Scalars['Int']['input']>>;
  readonly or?: InputMaybe<ReadonlyArray<InputMaybe<WeekUserAirdropStatEntity_Filter>>>;
  readonly points?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_gt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_gte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly points_lt?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_lte?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_not?: InputMaybe<Scalars['BigDecimal']['input']>;
  readonly points_not_in?: InputMaybe<ReadonlyArray<Scalars['BigDecimal']['input']>>;
  readonly user?: InputMaybe<Scalars['String']['input']>;
  readonly user_?: InputMaybe<UserEntity_Filter>;
  readonly user_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_gt?: InputMaybe<Scalars['String']['input']>;
  readonly user_gte?: InputMaybe<Scalars['String']['input']>;
  readonly user_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_lt?: InputMaybe<Scalars['String']['input']>;
  readonly user_lte?: InputMaybe<Scalars['String']['input']>;
  readonly user_not?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_contains_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_ends_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_in?: InputMaybe<ReadonlyArray<Scalars['String']['input']>>;
  readonly user_not_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_not_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with?: InputMaybe<Scalars['String']['input']>;
  readonly user_starts_with_nocase?: InputMaybe<Scalars['String']['input']>;
  readonly week?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_gte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
  readonly week_lt?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_lte?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not?: InputMaybe<Scalars['BigInt']['input']>;
  readonly week_not_in?: InputMaybe<ReadonlyArray<Scalars['BigInt']['input']>>;
};

export enum WeekUserAirdropStatEntity_OrderBy {
  AmountClaimed = 'amountClaimed',
  Claimed = 'claimed',
  Id = 'id',
  KilledBoss = 'killedBoss',
  Points = 'points',
  User = 'user',
  UserGamePoints = 'user__gamePoints',
  UserId = 'user__id',
  UserLastActionBlock = 'user__lastActionBlock',
  UserLastActionTs = 'user__lastActionTs',
  UserMaxNgLvl = 'user__maxNgLvl',
  UserName = 'user__name',
  UserTimestamp = 'user__timestamp',
  UserUri = 'user__uri',
  Week = 'week'
}

export type _Block_ = {
  readonly __typename?: '_Block_';
  /** The hash of the block */
  readonly hash?: Maybe<Scalars['Bytes']['output']>;
  /** The block number */
  readonly number: Scalars['Int']['output'];
  /** The hash of the parent block */
  readonly parentHash?: Maybe<Scalars['Bytes']['output']>;
  /** Integer representation of the timestamp stored in blocks for the chain */
  readonly timestamp?: Maybe<Scalars['Int']['output']>;
};

/** The type for the top-level _meta field */
export type _Meta_ = {
  readonly __typename?: '_Meta_';
  /**
   * Information about a specific subgraph block. The hash of the block
   * will be null if the _meta field has a block constraint that asks for
   * a block number. It will be filled if the _meta field has no block constraint
   * and therefore asks for the latest  block
   *
   */
  readonly block: _Block_;
  /** The deployment ID */
  readonly deployment: Scalars['String']['output'];
  /** If `true`, the subgraph encountered indexing errors at some past block */
  readonly hasIndexingErrors: Scalars['Boolean']['output'];
};

export enum _SubgraphErrorPolicy_ {
  /** Data will be returned even if the subgraph has indexing errors */
  Allow = 'allow',
  /** If the subgraph has indexing errors, data will be omitted. The default. */
  Deny = 'deny'
}

export type TestQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type TestQueryQuery = { readonly __typename?: 'Query', readonly _meta?: { readonly __typename?: '_Meta_', readonly block: { readonly __typename?: '_Block_', readonly number: number } } | null };
